<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="10/14/2023 4:38:30 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="LAPTOP-MNGIOD26"
  DTS:CreatorName="LAPTOP-MNGIOD26\Rezerwowy"
  DTS:DTSID="{688E5216-0A78-4A3C-80F8-5EBB82981FEA}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5314.0"
  DTS:LocaleID="1045"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="300"
  DTS:VersionGUID="{8A23050E-787A-40C6-8B29-E60BE3ED8DD1}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[CosmosDB Connection Manager]"
      DTS:CreationName="CosmosDB (KingswaySoft)"
      DTS:DTSID="{732338D0-79D3-4E7A-A6F4-BC1310D3B565}"
      DTS:ObjectName="CosmosDB Connection Manager">
      <DTS:ObjectData>
        <ConnectionManager
          ConnectionString="ServiceEndpoint=https://localhost:8081;ConnectionMode=Gateway;EnableEndpointDiscovery=True;MaxConnectionLimit=50;MediaRequestTimeout=00:05:00;CurrentLocation=;PreferredLocations=;RequestTimeout=00:01:00;MaxRetryAttemptsOnThrottledRequests=9;MaxRetryWaitTimeInSeconds=30;UseMultipleWriteLocations=False;ConsistencyLevel=Session;TreatUndefinedAsNull=True;DefaultValueForUndefined=&lt;Undefined&gt;;ProxyMode=NoProxy;ProxyServer=;ProxyServerPort=0;ProxyUsername="
          ConnectByProxy="False">
          <AuthKey
            Sensitive="1" xmlns="www.microsoft.com/SqlServer/Dts"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAmPncA2M1H0GYuHL08XKuKAAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAAAmGth6Hfmal3A+JGj2zaLDE1+8dbg9U08omDi60FbXDAAAAAAOgAAAAAIAACAAAADhPigE/eKFZyBCbjMop/6dDHtdCDNKUVaYkjjLFpbjBcAAAAAt/P6sV63LiVPDwlvjvKPTSByAUVcbeTabmFKPHUNlUOc6kdJFKE+o4QI2NdUNvKlCYGNRrv1LKecMCZZzT8Umbm6+jPuWh9gXTRX8MSZQboLWtrhjLSWnCJdF3g3LY6z3gUkzIGRFUrxKo7LibMWNMAbULNDr2tbzQbBmBAK3kq+6qzBF1r6uEcxEqc7ldcp2veokfG1d5QhvRoF7zT4R1zFuV4eEaM5vMTKxHZ7mt4BVfEHm6lFaCzQ8cW2YjjpAAAAAf4bzFFGXI61VScH4M7aAz0McSIEqLVKW93/Ko3UAurDbD8NyY10MUEDoS+dNkbuhr58NxjRjhNAyzEbr2DCeqg</AuthKey>
        </ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Csv Trajectories Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{2673D497-0956-4F63-B5A9-B0864E11D8B9}"
      DTS:ObjectName="Csv Trajectories Manager">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1045"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:ColumnNamesInFirstDataRow="True"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1250"
          DTS:ConnectionString="C:\Users\Rezerwowy\Desktop\Engineering Thesis\Datasets\hannover_table — kopia.csv">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="gid"
              DTS:DTSID="{63C81FFD-469A-45CD-8B85-27431D10009C}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="trip_id"
              DTS:DTSID="{A37D33BE-1C56-4EE9-9D15-E5A41AFA534E}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="unixtime"
              DTS:DTSID="{04FE9D02-57FC-40DC-86C7-60C390C6866A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="north_utm"
              DTS:DTSID="{5886EE26-5D0D-47C5-B215-9A1E742C9DE3}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="east_utm"
              DTS:DTSID="{428F4AD7-308F-4348-98ED-B42ECB4E101E}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[MongoDB Connection Manager]"
      DTS:CreationName="MongoDB (KingswaySoft)"
      DTS:DTSID="{593A17FD-8B85-4F9F-8F31-D9B7CFCB3C62}"
      DTS:ObjectName="MongoDB Connection Manager">
      <DTS:ObjectData>
        <ConnectionManager
          ConnectionString="CertificateLocation=FileSystem;CertificateThumbprint=;PathToCertificate=;IgnoreCertificateErrors=False;AuthenticationDatabase=admin;AuthenticationMode=None;Username=jakubwrona;Hosts=localhost;Ports=27017;ConnectTimeout=60;ConnectionMode=Automatic;GuidRepresentation=Standard;HeartbeatInterval=10;HeartbeatTimeout=10;IPv6=False;LocalThreshold=15;MaxConnectionIdleTime=600;MaxConnectionLifeTime=1800;MaxConnectionPoolSize=100;MinConnectionPoolSize=0;ReadPreferenceMode=Primary;TagSets=;ReplicaSetName=;ServerSelectionTimeout=30;SocketTimeout=0;UseSsl=False;VerifySslCertificate=True;WaitQueueSize=500;WaitQueueTimeout=120;W=;UseSshTunnel=False;SshHost=;SshPort=22;SshAuthenticationType=Password;SshUsername=;SshPathToKeyFile="
          ConnectByProxy="False">
          <Password
            Sensitive="1" xmlns="www.microsoft.com/SqlServer/Dts"
            Encrypted="1">AQAAANCMnd8BFdERjHoAwE/Cl+sBAAAAmPncA2M1H0GYuHL08XKuKAAAAAAIAAAARABUAFMAAAAQZgAAAAEAACAAAAAKp6UNciku+yyig0IN3Kjw/3J0MySIUVAly6iKnbjPmwAAAAAOgAAAAAIAACAAAADjimnRbx3eRBkU0dp1WoQ1nv4LX/L+ZYAJHvS8EYQstTAAAAC+WeR29yTy/LqKNkNHqhnvrX9LirbTbPqBk5ei0RdxQzsi93wfioiwG/GI5T6paqFAAAAA534o4ew8cIvJg10ZybaHr7VNkaBMNAj9zIesWLhrivJOQ2CdbHcrSISx5QvSiizoHDEs4M8uPPviorKce53/RQ</Password>
        </ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[PLT Connection Manager]"
      DTS:CreationName="FLATFILE"
      DTS:DTSID="{47D06D1A-46A7-49A1-AD0C-12BEC63E78F2}"
      DTS:ObjectName="PLT Connection Manager">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">@[User::GeolifeFilePath]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:Format="Delimited"
          DTS:LocaleID="1045"
          DTS:HeaderRowsToSkip="6"
          DTS:HeaderRowDelimiter="_x000D__x000A_"
          DTS:RowDelimiter=""
          DTS:TextQualifier="_x003C_none_x003E_"
          DTS:CodePage="1250">
          <DTS:FlatFileColumns>
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Latitude"
              DTS:DTSID="{7A15F8D7-B8C4-4430-A0B0-78F7DB5A412B}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Longitude"
              DTS:DTSID="{1F92C745-4F9D-4D61-A93B-BDD19B95189A}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="All zero"
              DTS:DTSID="{35CBBF1A-576A-4830-A608-68FF2618E331}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Altitude"
              DTS:DTSID="{7A83EFBF-2AE7-40E3-8018-1438AAE330FE}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Date-days"
              DTS:DTSID="{D52E7AED-F4C9-418A-B41C-5A2737FD88EA}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x002C_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Date"
              DTS:DTSID="{9D1D26C1-5975-4CDB-835E-53FA213D0FB7}"
              DTS:CreationName="" />
            <DTS:FlatFileColumn
              DTS:ColumnType="Delimited"
              DTS:ColumnDelimiter="_x000D__x000A_"
              DTS:MaximumWidth="50"
              DTS:DataType="129"
              DTS:TextQualified="True"
              DTS:ObjectName="Time"
              DTS:DTSID="{FDCFCB9B-1B82-48ED-A7E1-C4027F547014}"
              DTS:CreationName="" />
          </DTS:FlatFileColumns>
        </DTS:ConnectionManager>
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C8A826C8-0D56-4560-B2D4-24FE0472EC47}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="GeolifeFilePath">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Geolife file"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:Disabled="True"
      DTS:DTSID="{0764A26B-4F7D-4EF5-A2CE-CEF2024623FC}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Geolife file">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{08A76289-0149-4628-8102-82B0AD5FB13D}"
        DTS:ObjectName="{08A76289-0149-4628-8102-82B0AD5FB13D}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\Users\Rezerwowy\Desktop\Engineering Thesis\Datasets\Geolife Trajectories 1.3\Geolife Trajectories 1.3\Data" />
            <FEFEProperty
              FileSpec="*.plt" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="-1" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Geolife file\Data Flow Task"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:Description="Data Flow Task"
          DTS:Disabled="True"
          DTS:DTSID="{A5E6E27E-1ADD-48FA-B193-F63D4F12756B}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Data Flow Task"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Geolife file\Data Flow Task\Add Context"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Add Context"
                  version="13">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Globalization;
using System.IO;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>

    List<ContextData> contextData = new List<ContextData>();
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        string filePath = "C:\\Users\\Rezerwowy\\Desktop\\Engineering Thesis\\Datasets\\Context_Data\\Context_Data_China_Germany.csv";
        using (StreamReader reader = new StreamReader(filePath))
        {
            string line;
            reader.ReadLine();
            while ((line = reader.ReadLine()) != null)
            {
                string[] fields = line.Split(';'); // Change the delimiter if needed

                if (fields[1] == "CHN")
                {
                    List<string> yearsdata = new List<string>
                    {
                        fields[4],
                        fields[5],
                        fields[6],
                        fields[7],
                        fields[8],
                        fields[9]
                    };

                    ContextData data = new ContextData()
                    {
                        SeriesCode = fields[3],
                        YearsData = yearsdata
                    };

                    contextData.Add(data);
                }
                
            }
        }
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        foreach (ContextData data in contextData)
        {
            if (data.YearsData[Row.StartDate.Year - 2007] != "..")
            {
                switch (data.SeriesCode)
                {
                    case "SH.STA.TRAF.P5":
                        Row.MortalityInRoadTrafficPer100000 = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "SP.POP.TOTL":
                        Row.TotalPopulation = int.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "EN.CO2.TRAN.ZS":
                        Row.CO2EmissionsFromTransportPercentage = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "EN.ATM.CO2E.GF.KT":
                        Row.CO2EmissionsFromGaseousFuelConsumptionPercentage = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "SP.POP.TOTL.MA.ZS":
                        Row.MalePercentage = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "SP.POP.TOTL.FE.ZS":
                        Row.FemalePercentage = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "EN.POP.DNST":
                        Row.CountryDensity = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "NY.GDP.PCAP.KN":
                        Row.GDPPerCapitaConstantLCU = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "NY.GDP.PCAP.CN":
                        Row.GDPPerCapitaCurrentLCU = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "SP.URB.TOTL.ZS":
                        Row.UrbanPercentage = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "SP.RUR.TOTL.ZS":
                        Row.RuralPercentage = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "FP.CPI.TOTL.ZG":
                        Row.Inflation = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "SP.POP.0014.ZS":
                        Row.Age014Percentage = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "SP.POP.1564.ZS":
                        Row.Age1564Percentage = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "SP.POP.65UP.ZS":
                        Row.Age65Percentage = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "IE.PPI.TRAN.CD":
                        Row.PrivateInvestmentsInTransport = ulong.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "ST.INT.DPRT":
                        Row.DeparturesInInternationalTourism = int.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "ST.INT.ARVL":
                        Row.ArrivalsInInternationalTourism = int.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "SL.UEM.TOTL.NE.ZS":
                        Row.UneploymentNationalEstimate = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "SL.UEM.TOTL.ZS":
                        Row.UneploymentModeledILOEstimate = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                }
            }
        }
    }

    private class ContextData
    {
        public string SeriesCode { get; set;}

        public List<string> YearsData { get; set;}

    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public DateTime StartDate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[0]);
        }
    }
    public bool StartDate_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 ArrivalsInInternationalTourism
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ArrivalsInInternationalTourism_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 DeparturesInInternationalTourism
    {
        set
        {
            this[2] = value;
        }
    }
    public bool DeparturesInInternationalTourism_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal UneploymentModeledILOEstimate
    {
        set
        {
            this[3] = value;
        }
    }
    public bool UneploymentModeledILOEstimate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal UneploymentNationalEstimate
    {
        set
        {
            this[4] = value;
        }
    }
    public bool UneploymentNationalEstimate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Inflation
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Inflation_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal GDPPerCapitaCurrentLCU
    {
        set
        {
            this[6] = value;
        }
    }
    public bool GDPPerCapitaCurrentLCU_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal GDPPerCapitaConstantLCU
    {
        set
        {
            this[7] = value;
        }
    }
    public bool GDPPerCapitaConstantLCU_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal MortalityInRoadTrafficPer100000
    {
        set
        {
            this[8] = value;
        }
    }
    public bool MortalityInRoadTrafficPer100000_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Age65Percentage
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Age65Percentage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Age1564Percentage
    {
        set
        {
            this[10] = value;
        }
    }
    public bool Age1564Percentage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Age014Percentage
    {
        set
        {
            this[11] = value;
        }
    }
    public bool Age014Percentage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal RuralPercentage
    {
        set
        {
            this[12] = value;
        }
    }
    public bool RuralPercentage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal UrbanPercentage
    {
        set
        {
            this[13] = value;
        }
    }
    public bool UrbanPercentage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal CountryDensity
    {
        set
        {
            this[14] = value;
        }
    }
    public bool CountryDensity_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal FemalePercentage
    {
        set
        {
            this[15] = value;
        }
    }
    public bool FemalePercentage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal MalePercentage
    {
        set
        {
            this[16] = value;
        }
    }
    public bool MalePercentage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TotalPopulation
    {
        set
        {
            this[17] = value;
        }
    }
    public bool TotalPopulation_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public UInt64 PrivateInvestmentsInTransport
    {
        set
        {
            this[18] = value;
        }
    }
    public bool PrivateInvestmentsInTransport_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal CO2EmissionsFromGaseousFuelConsumptionPercentage
    {
        set
        {
            this[19] = value;
        }
    }
    public bool CO2EmissionsFromGaseousFuelConsumptionPercentage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal CO2EmissionsFromTransportPercentage
    {
        set
        {
            this[20] = value;
        }
    }
    public bool CO2EmissionsFromTransportPercentage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4d0164e849cb4c3fa793f2207015a74d.Properties.Settings.get_Default():SC_4d0164e849cb4c3fa793f2207015a74d.Properties.Sett" +
    "ings")]

namespace SC_4d0164e849cb4c3fa793f2207015a74d.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_4d0164e849cb4c3fa793f2207015a74d</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_4d0164e849cb4c3fa793f2207015a74d</msb:DisplayName>
    <msb:ProjectId>{4ABCA2E3-0418-49FB-A657-5D2816A4F16B}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_4d0164e849cb4c3fa793f2207015a74d.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_4d0164e849cb4c3fa793f2207015a74d")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_4d0164e849cb4c3fa793f2207015a74d")]
[assembly: AssemblyCopyright("Copyright @ HP 2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_4d0164e849cb4c3fa793f2207015a74d.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{d31f6c43-9da9-4f9f-9795-60fad25321d6}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_4d0164e849cb4c3fa793f2207015a74d</RootNamespace><AssemblyName>SC_C2AC5EB46B83487AB144AB3D937FF904</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptComponent" GeneratedNamespace="SC_4d0164e849cb4c3fa793f2207015a74d" IconIndex="0"></Host><ProjectClient><HostIdentifier>SSIS_SC160</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4d0164e849cb4c3fa793f2207015a74d.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4d0164e849cb4c3fa793f2207015a74d.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4d0164e849cb4c3fa793f2207015a74d.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_4d0164e849cb4c3fa793f2207015a74d.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_4d0164e849cb4c3fa793f2207015a74d.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_c2ac5eb46b83487ab144ab3d937ff904</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">43</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Geolife file\Data Flow Task\Add Context.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add Context.Inputs[Input 0].Columns[StartDate]"
                          cachedDataType="date"
                          cachedName="StartDate"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[StartDate]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Foreach Geolife file\Data Flow Task\Add Context.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[ArrivalsInInternationalTourism]"
                          dataType="i4"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[ArrivalsInInternationalTourism]"
                          name="ArrivalsInInternationalTourism" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[DeparturesInInternationalTourism]"
                          dataType="i4"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[DeparturesInInternationalTourism]"
                          name="DeparturesInInternationalTourism" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[UneploymentModeledILOEstimate]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[UneploymentModeledILOEstimate]"
                          name="UneploymentModeledILOEstimate" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[UneploymentNationalEstimate]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[UneploymentNationalEstimate]"
                          name="UneploymentNationalEstimate" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[Inflation]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[Inflation]"
                          name="Inflation" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[GDPPerCapitaCurrentLCU]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[GDPPerCapitaCurrentLCU]"
                          name="GDPPerCapitaCurrentLCU" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[GDPPerCapitaConstantLCU]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[GDPPerCapitaConstantLCU]"
                          name="GDPPerCapitaConstantLCU" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[MortalityInRoadTrafficPer100000]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[MortalityInRoadTrafficPer100000]"
                          name="MortalityInRoadTrafficPer100000" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[Age65+Percentage]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[Age65+Percentage]"
                          name="Age65+Percentage" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[Age15-64Percentage]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[Age15-64Percentage]"
                          name="Age15-64Percentage" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[Age0-14Percentage]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[Age0-14Percentage]"
                          name="Age0-14Percentage" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[RuralPercentage]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[RuralPercentage]"
                          name="RuralPercentage" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[UrbanPercentage]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[UrbanPercentage]"
                          name="UrbanPercentage" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[CountryDensity]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[CountryDensity]"
                          name="CountryDensity" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[FemalePercentage]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[FemalePercentage]"
                          name="FemalePercentage" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[MalePercentage]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[MalePercentage]"
                          name="MalePercentage" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[TotalPopulation]"
                          dataType="i4"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[TotalPopulation]"
                          name="TotalPopulation" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[PrivateInvestmentsInTransport]"
                          dataType="ui8"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[PrivateInvestmentsInTransport]"
                          name="PrivateInvestmentsInTransport" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                          name="CO2EmissionsFromGaseousFuelConsumptionPercentage" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[CO2EmissionsFromTransportPercentage]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[CO2EmissionsFromTransportPercentage]"
                          name="CO2EmissionsFromTransportPercentage" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Geolife file\Data Flow Task\Add fuel prices"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Add fuel prices"
                  version="13">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Globalization;
using System.IO;
using System.Linq;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        string filePath = "C:\\Users\\Rezerwowy\\Desktop\\Engineering Thesis\\Datasets\\Fuel_Prices_China.csv";

        using (StreamReader reader = new StreamReader(filePath))
        {
            string line;
            reader.ReadLine();
            while ((line = reader.ReadLine()) != null)
            {
                string[] fields = line.Split(';'); // Change the delimiter if needed

                FuelPrice fuelPrice = new FuelPrice()
                {
                    DieselPrice = decimal.Parse(fields[4], CultureInfo.GetCultureInfo("pl-PL")),
                    GasolinePrice = decimal.Parse(fields[5], CultureInfo.GetCultureInfo("pl-PL")),
                    DateTime = DateTime.ParseExact(fields[0], "dd.MM.yyyy", CultureInfo.InvariantCulture),
                };

                if (fuelPrice.DateTime.Year == Row.StartDate.Year && fuelPrice.DateTime.Month == Row.StartDate.Month)
                {
                    Row.DieselPrice = fuelPrice.DieselPrice;
                    Row.GasolinePrice = fuelPrice.GasolinePrice;
                    break;
                }
            }
        }
    }
    private class FuelPrice
    {
        public decimal DieselPrice { get; set; }
        public decimal GasolinePrice { get; set; }
        public DateTime DateTime { get; set; }

    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public DateTime StartDate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[0]);
        }
    }
    public bool StartDate_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Decimal DieselPrice
    {
        set
        {
            this[1] = value;
        }
    }
    public bool DieselPrice_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal GasolinePrice
    {
        set
        {
            this[2] = value;
        }
    }
    public bool GasolinePrice_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bc169b9ae98b433784e83b0991156701.Properties.Settings.get_Default():SC_bc169b9ae98b433784e83b0991156701.Properties.Sett" +
    "ings")]

namespace SC_bc169b9ae98b433784e83b0991156701.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_bc169b9ae98b433784e83b0991156701.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{e0df201c-3b96-43cc-8b1b-a6da642dca8f}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_bc169b9ae98b433784e83b0991156701</RootNamespace><AssemblyName>SC_1A7F8D36488543A98236D4D7E943AA43</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptComponent" GeneratedNamespace="SC_bc169b9ae98b433784e83b0991156701" IconIndex="0"></Host><ProjectClient><HostIdentifier>SSIS_SC160</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_bc169b9ae98b433784e83b0991156701</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_bc169b9ae98b433784e83b0991156701</msb:DisplayName>
    <msb:ProjectId>{383EACAB-940C-42F6-970A-7B82F6EE6D53}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_bc169b9ae98b433784e83b0991156701.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_bc169b9ae98b433784e83b0991156701")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_bc169b9ae98b433784e83b0991156701")]
[assembly: AssemblyCopyright("Copyright @ HP 2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bc169b9ae98b433784e83b0991156701.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bc169b9ae98b433784e83b0991156701.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bc169b9ae98b433784e83b0991156701.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_bc169b9ae98b433784e83b0991156701.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_bc169b9ae98b433784e83b0991156701.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_1a7f8d36488543a98236d4d7e943aa43</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">28</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Geolife file\Data Flow Task\Add fuel prices.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add fuel prices.Inputs[Input 0].Columns[StartDate]"
                          cachedDataType="date"
                          cachedName="StartDate"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[StartDate]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Add fuel prices.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Foreach Geolife file\Data Flow Task\Add fuel prices.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add fuel prices.Outputs[Output 0].Columns[DieselPrice]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add fuel prices.Outputs[Output 0].Columns[DieselPrice]"
                          name="DieselPrice" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add fuel prices.Outputs[Output 0].Columns[GasolinePrice]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add fuel prices.Outputs[Output 0].Columns[GasolinePrice]"
                          name="GasolinePrice" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Geolife file\Data Flow Task\Add region"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Add region"
                  version="13">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="36">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Globalization;
using System.IO;
using System.Linq;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using NetTopologySuite.Geometries;
using NetTopologySuite.IO;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    
    List<Region> regions = new List<Region>();
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        string filePath = "C:\\Users\\Rezerwowy\\Desktop\\Engineering Thesis\\Datasets\\Regions-Beijing.csv";
        using (StreamReader reader = new StreamReader(filePath))
        {
            string line;
            reader.ReadLine();
            while ((line = reader.ReadLine()) != null)
            {
                string[] fields = line.Split(';'); // Change the delimiter if needed

                Region region = new Region()
                {
                    Name = fields[0],
                    Area = decimal.Parse(fields[1], CultureInfo.InvariantCulture),
                    Population = int.Parse(fields[2], CultureInfo.InvariantCulture),
                    Density = decimal.Parse(fields[3], CultureInfo.InvariantCulture),
                    Polygon = CreatePolygon(ReverseCoordinates(fields[4])),
                };

                regions.Add(region);
            }
        }
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        var reader = new WKTReader();

        string pointWkt = $"POINT({Row.Latitude} {Row.Longitude})";
        pointWkt = pointWkt.Replace(",", ".");
        Point point = reader.Read(pointWkt) as Point;

        Region currentRegion = regions.FirstOrDefault(r => r.Polygon.Contains(point));

        if(currentRegion != null)
        {
            Row.RegionName = currentRegion.Name;
            Row.RegionArea = currentRegion.Area;
            Row.RegionPopulation = currentRegion.Population;
            Row.RegionDensity = currentRegion.Density;
        }
        else
        {
            Row.RegionName = "Outside of Beijing";
        }
    }

    private string ReverseCoordinates(string coordinatesString)
    {
        string[] points = coordinatesString.Split(' ');
        List<string> reversedPoints = new List<string>();

        foreach (string point in points)
        {
            string[] coordinates = point.Split(',');
            if (coordinates.Length == 2)
            {
                string reversedPoint = $"{coordinates[1]} {coordinates[0]}";
                reversedPoints.Add(reversedPoint);
            }
        }

        string reversedCoordinates = string.Join(", ", reversedPoints);

        return reversedCoordinates;
    }

    private Polygon CreatePolygon(string coordinates)
    {
        string polygonWkt = $"POLYGON(({coordinates}))";
        var reader = new WKTReader();
        return reader.Read(polygonWkt) as Polygon;
    }

    private class Region
    {
        public string Name { get; set; }
        public decimal Area { get; set; }
        public int Population { get; set; }
        public decimal Density { get; set; }
        public Polygon Polygon { get; set; }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Decimal Latitude
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[0]);
        }
    }
    public bool Latitude_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Decimal Longitude
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[1]);
        }
    }
    public bool Longitude_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Decimal RegionArea
    {
        set
        {
            this[2] = value;
        }
    }
    public bool RegionArea_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String RegionName
    {
        set
        {
            this[3] = value;
        }
    }
    public bool RegionName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 RegionPopulation
    {
        set
        {
            this[4] = value;
        }
    }
    public bool RegionPopulation_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal RegionDensity
    {
        set
        {
            this[5] = value;
        }
    }
    public bool RegionDensity_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2518480992a84ad0830b3674bc6f3f32.Properties.Settings.get_Default():SC_2518480992a84ad0830b3674bc6f3f32.Properties.Sett" +
    "ings")]

namespace SC_2518480992a84ad0830b3674bc6f3f32.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_2518480992a84ad0830b3674bc6f3f32.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{0A59C22A-2969-414C-84D6-6BD29984CAC5}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_2518480992a84ad0830b3674bc6f3f32</RootNamespace><AssemblyName>SC_59017A653A564AB59DD41E48164C9C76</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51" /><Reference Include="NetTopologySuite, Version=2.0.0.0, Culture=neutral, PublicKeyToken=f580a05016ebada1, processorArchitecture=MSIL"><HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstakUBqVNBO8USVPU7eNtXp7w\packages\NetTopologySuite.2.5.0\lib\netstandard2.0\NetTopologySuite.dll</HintPath></Reference><Reference Include="System" /><Reference Include="System.Buffers, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL"><HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstakUBqVNBO8USVPU7eNtXp7w\packages\System.Buffers.4.5.1\lib\net461\System.Buffers.dll</HintPath></Reference><Reference Include="System.Data" /><Reference Include="System.Memory, Version=4.0.1.1, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL"><HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstakUBqVNBO8USVPU7eNtXp7w\packages\System.Memory.4.5.4\lib\net461\System.Memory.dll</HintPath></Reference><Reference Include="System.Numerics" /><Reference Include="System.Numerics.Vectors, Version=4.1.4.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL"><HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstakUBqVNBO8USVPU7eNtXp7w\packages\System.Numerics.Vectors.4.5.0\lib\net46\System.Numerics.Vectors.dll</HintPath></Reference><Reference Include="System.Runtime.CompilerServices.Unsafe, Version=4.0.4.1, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL"><HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstakUBqVNBO8USVPU7eNtXp7w\packages\System.Runtime.CompilerServices.Unsafe.4.5.3\lib\net461\System.Runtime.CompilerServices.Unsafe.dll</HintPath></Reference><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="app.config" /><None Include="packages.config" /><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptComponent" IconIndex="0" /><ProjectClient><HostIdentifier>SSIS_SC160</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_2518480992a84ad0830b3674bc6f3f32</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_2518480992a84ad0830b3674bc6f3f32</msb:DisplayName>
    <msb:ProjectId>{A040B803-C2C1-4AE3-BFF9-EC696B89B152}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_2518480992a84ad0830b3674bc6f3f32.csproj" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="app.config" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_2518480992a84ad0830b3674bc6f3f32")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_2518480992a84ad0830b3674bc6f3f32")]
[assembly: AssemblyCopyright("Copyright @ HP 2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2518480992a84ad0830b3674bc6f3f32.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2518480992a84ad0830b3674bc6f3f32.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2518480992a84ad0830b3674bc6f3f32.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_2518480992a84ad0830b3674bc6f3f32.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_2518480992a84ad0830b3674bc6f3f32.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[app.config]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Buffers" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.3.0" newVersion="4.0.3.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="System.Buffers" version="4.5.1" targetFramework="net47" />
</packages>]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_59017a653a564ab59dd41e48164c9c76</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">5B</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Geolife file\Data Flow Task\Add region.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add region.Inputs[Input 0].Columns[Latitude]"
                          cachedDataType="decimal"
                          cachedName="Latitude"
                          cachedScale="10"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Latitude]" />
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add region.Inputs[Input 0].Columns[Longitude]"
                          cachedDataType="decimal"
                          cachedName="Longitude"
                          cachedScale="10"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Longitude]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Add region.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Foreach Geolife file\Data Flow Task\Add region.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add region.Outputs[Output 0].Columns[RegionArea]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add region.Outputs[Output 0].Columns[RegionArea]"
                          name="RegionArea" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add region.Outputs[Output 0].Columns[RegionName]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add region.Outputs[Output 0].Columns[RegionName]"
                          name="RegionName" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add region.Outputs[Output 0].Columns[RegionPopulation]"
                          dataType="i4"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add region.Outputs[Output 0].Columns[RegionPopulation]"
                          name="RegionPopulation" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add region.Outputs[Output 0].Columns[RegionDensity]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add region.Outputs[Output 0].Columns[RegionDensity]"
                          name="RegionDensity" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Geolife file\Data Flow Task\Add weather"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Add weather"
                  version="13">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_00cea7baa4a54ec981a668d93eed78b2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_00cea7baa4a54ec981a668d93eed78b2")]
[assembly: AssemblyCopyright("Copyright @ HP 2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Globalization;
using System.IO;
using System.Linq;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    

    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>

    List<Measurement> measurements = new List<Measurement>();
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        DateTime cutoffDate = new DateTime(2010, 12, 31);
        if (Row.StartDate <= cutoffDate && Row.EndDate <= cutoffDate)
            LoadFile("C:\\Users\\Rezerwowy\\Desktop\\Engineering Thesis\\Datasets\\Weather_China_2007_2010.csv");
        else if (Row.StartDate > cutoffDate && Row.EndDate > cutoffDate)
            LoadFile("C:\\Users\\Rezerwowy\\Desktop\\Engineering Thesis\\Datasets\\Weather_China_2011_2012.csv");
        else
        {
            LoadFile("C:\\Users\\Rezerwowy\\Desktop\\Engineering Thesis\\Datasets\\Weather_China_2007_2010.csv");
            LoadFile("C:\\Users\\Rezerwowy\\Desktop\\Engineering Thesis\\Datasets\\Weather_China_2011_2012.csv");
        }

        List<Measurement> measurementsRange = measurements.Where(m =>
        m.MeasurementDate.Date >= Row.StartDate.Date && m.MeasurementDate.Date <= Row.EndDate.Date).OrderBy(m => m.MeasurementDate).ToList();

        if (measurementsRange.Count == 1)
        {
            Row.Temperature = measurementsRange.First().Temperature;
            Row.Precipitation = Row.Duration / 1440 * measurementsRange.First().Precipitation;
        }
        else
        {
            decimal temperature = 0;
            decimal precipitation = 0;

            for (int i = 0; i < measurementsRange.Count; i++)
            {
                TimeSpan timeSpan;
                if (i == 0)
                    timeSpan = measurementsRange[i].MeasurementDate.AddDays(1) - Row.StartDate;
                else if (i == measurementsRange.Count - 1)
                    timeSpan = Row.EndDate - measurementsRange[i].MeasurementDate;
                else
                    timeSpan = new TimeSpan(24, 0, 0);

                temperature += (decimal)timeSpan.TotalMinutes / Row.Duration * measurementsRange[i].Temperature;
                precipitation += (decimal)timeSpan.TotalMinutes / 1440 * measurementsRange[i].Precipitation;
            }
            
            Row.Temperature = temperature;
            Row.Precipitation = precipitation;
        }
    }

    private void LoadFile(string filePath)
    {
        using (StreamReader reader = new StreamReader(filePath))
        {
            string line;
            reader.ReadLine();

            while ((line = reader.ReadLine()) != null)
            {
                line = line.Replace("\"", "");
                string[] fields = line.Split(',');
                if (fields[1] != "BEIJING")
                    continue;

                Measurement measurement = new Measurement
                {
                    Temperature = decimal.Parse(fields[9], CultureInfo.InvariantCulture),
                    Precipitation = decimal.Parse(fields[7], CultureInfo.InvariantCulture),
                    MeasurementDate = DateTime.ParseExact(fields[6], "yyyy-MM-dd", CultureInfo.InvariantCulture)
                };

                measurements.Add(measurement);

            }
        }
    }

    private class Measurement
    {
        public DateTime MeasurementDate { get; set; }
        public decimal Precipitation { get; set; }
        public decimal Temperature { get; set; }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public DateTime StartDate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[0]);
        }
    }
    public bool StartDate_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public DateTime EndDate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[1]);
        }
    }
    public bool EndDate_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Decimal Duration
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[2]);
        }
    }
    public bool Duration_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Decimal Temperature
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Temperature_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Precipitation
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Precipitation_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_00cea7baa4a54ec981a668d93eed78b2.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{06c2d717-b9a3-46b0-9bff-4a5b0fcb5a5b}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_00cea7baa4a54ec981a668d93eed78b2</RootNamespace><AssemblyName>SC_04006060274A424AA1136789A55C14A3</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptComponent" GeneratedNamespace="SC_00cea7baa4a54ec981a668d93eed78b2" IconIndex="0"></Host><ProjectClient><HostIdentifier>SSIS_SC160</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_00cea7baa4a54ec981a668d93eed78b2</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_00cea7baa4a54ec981a668d93eed78b2</msb:DisplayName>
    <msb:ProjectId>{4DF68F98-AA09-4A01-82CB-B39BA6C6D23C}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_00cea7baa4a54ec981a668d93eed78b2.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_00cea7baa4a54ec981a668d93eed78b2.Properties.Settings.get_Default():SC_00cea7baa4a54ec981a668d93eed78b2.Properties.Sett" +
    "ings")]

namespace SC_00cea7baa4a54ec981a668d93eed78b2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_00cea7baa4a54ec981a668d93eed78b2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_00cea7baa4a54ec981a668d93eed78b2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_00cea7baa4a54ec981a668d93eed78b2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_00cea7baa4a54ec981a668d93eed78b2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_00cea7baa4a54ec981a668d93eed78b2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_04006060274a424aa1136789a55c14a3</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">F4</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Geolife file\Data Flow Task\Add weather.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add weather.Inputs[Input 0].Columns[StartDate]"
                          cachedDataType="date"
                          cachedName="StartDate"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[StartDate]" />
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add weather.Inputs[Input 0].Columns[EndDate]"
                          cachedDataType="date"
                          cachedName="EndDate"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[EndDate]" />
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add weather.Inputs[Input 0].Columns[Duration]"
                          cachedDataType="decimal"
                          cachedName="Duration"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[Duration]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Add weather.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Foreach Geolife file\Data Flow Task\Add weather.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add weather.Outputs[Output 0].Columns[Temperature]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add weather.Outputs[Output 0].Columns[Temperature]"
                          name="Temperature" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Add weather.Outputs[Output 0].Columns[Precipitation]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add weather.Outputs[Output 0].Columns[Precipitation]"
                          name="Precipitation" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="KingswaySoft Inc.; http://www.kingswaysoft.com; support@kingswaysoft.com; Copyright (c) 2021 KingswaySoft Inc."
                  description="Convert data types."
                  name="Coordinates to decimal"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">KingswaySoft.IntegrationToolkit.ProductivityPack.PremiumConversionComponent</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Inputs[Primary Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Primary Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Inputs[Primary Input].Columns[Latitude]"
                          cachedCodepage="1250"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Latitude"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Output].Columns[Latitude]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              name="OutputColumnLineageId">#{Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Latitude]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              name="ErrorOutputColumnLineageId">#{Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Error Output].Columns[Latitude]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Inputs[Primary Input].Columns[Longitude]"
                          cachedCodepage="1250"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Longitude"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Output].Columns[Longitude]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              name="OutputColumnLineageId">#{Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Longitude]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              name="ErrorOutputColumnLineageId">#{Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Error Output].Columns[Longitude]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Inputs[Primary Input].Columns[Date]"
                          cachedCodepage="1250"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Date"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Output].Columns[Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              name="OutputColumnLineageId">#{Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Date]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              name="ErrorOutputColumnLineageId">#{Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Error Output].Columns[Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Inputs[Primary Input].Columns[Time]"
                          cachedCodepage="1250"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Time"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Output].Columns[Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              name="OutputColumnLineageId">#{Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Time]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              name="ErrorOutputColumnLineageId">#{Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Error Output].Columns[Time]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Error Output]"
                      isErrorOut="true"
                      name="Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Error Output].Columns[ErrorMessage]"
                          dataType="wstr"
                          length="2048"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Error Output].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Error Output].Columns[Latitude]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Error Output].Columns[Latitude]"
                          name="Latitude" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Error Output].Columns[Longitude]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Error Output].Columns[Longitude]"
                          name="Longitude" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Error Output].Columns[Date]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Error Output].Columns[Date]"
                          name="Date" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Error Output].Columns[Time]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Error Output].Columns[Time]"
                          name="Time" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output]"
                      name="Default Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Latitude]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Latitude]"
                          name="Latitude"
                          scale="10">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="FormatString"
                              name="FormatString" />
                            <property
                              dataType="System.Boolean"
                              description="IgnoreCastException"
                              name="IgnoreCastException">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Longitude]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Longitude]"
                          name="Longitude"
                          scale="10">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="FormatString"
                              name="FormatString" />
                            <property
                              dataType="System.Boolean"
                              description="IgnoreCastException"
                              name="IgnoreCastException">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Date]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Date]"
                          name="Date" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Time]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Time]"
                          name="Time" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="KingswaySoft Inc.; http://www.kingswaysoft.com; support@kingswaysoft.com; Copyright (c) 2021 KingswaySoft Inc."
                  description="Convert data types."
                  name="Coordinates to decimal 1"
                  usesDispositions="true"
                  version="2">
                  <properties>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">KingswaySoft.IntegrationToolkit.ProductivityPack.PremiumConversionComponent</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Inputs[Primary Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Primary Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Inputs[Primary Input].Columns[Latitude]"
                          cachedCodepage="1250"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Latitude"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Output].Columns[Latitude]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              name="OutputColumnLineageId">#{Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Default Output].Columns[Latitude]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              name="ErrorOutputColumnLineageId">#{Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Error Output].Columns[Latitude]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Inputs[Primary Input].Columns[Longitude]"
                          cachedCodepage="1250"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Longitude"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Output].Columns[Longitude]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              name="OutputColumnLineageId">#{Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Default Output].Columns[Longitude]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              name="ErrorOutputColumnLineageId">#{Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Error Output].Columns[Longitude]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Inputs[Primary Input].Columns[Date]"
                          cachedCodepage="1250"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Date"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Output].Columns[Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              name="OutputColumnLineageId">#{Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Default Output].Columns[Date]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              name="ErrorOutputColumnLineageId">#{Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Error Output].Columns[Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Inputs[Primary Input].Columns[Time]"
                          cachedCodepage="1250"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Time"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Output].Columns[Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              name="OutputColumnLineageId">#{Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Default Output].Columns[Time]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              name="ErrorOutputColumnLineageId">#{Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Error Output].Columns[Time]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Error Output]"
                      isErrorOut="true"
                      name="Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Error Output].Columns[ErrorMessage]"
                          dataType="wstr"
                          length="2048"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Error Output].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Error Output].Columns[Latitude]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Error Output].Columns[Latitude]"
                          name="Latitude" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Error Output].Columns[Longitude]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Error Output].Columns[Longitude]"
                          name="Longitude" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Error Output].Columns[Date]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Error Output].Columns[Date]"
                          name="Date" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Error Output].Columns[Time]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Error Output].Columns[Time]"
                          name="Time" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Default Output]"
                      name="Default Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Default Output].Columns[Latitude]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Default Output].Columns[Latitude]"
                          name="Latitude"
                          scale="10">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="FormatString"
                              name="FormatString" />
                            <property
                              dataType="System.Boolean"
                              description="IgnoreCastException"
                              name="IgnoreCastException">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Default Output].Columns[Longitude]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Default Output].Columns[Longitude]"
                          name="Longitude"
                          scale="10">
                          <properties>
                            <property
                              dataType="System.Null"
                              description="FormatString"
                              name="FormatString" />
                            <property
                              dataType="System.Boolean"
                              description="IgnoreCastException"
                              name="IgnoreCastException">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Default Output].Columns[Date]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Default Output].Columns[Date]"
                          name="Date" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Default Output].Columns[Time]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Default Output].Columns[Time]"
                          name="Time" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="KingswaySoft Inc.; http://www.kingswaysoft.com; support@kingswaysoft.com; Copyright (c) 2021 KingswaySoft Inc."
                  description="Write data to a CosmosDB database."
                  name="CosmosDB Destination"
                  usesDispositions="true"
                  validateExternalMetadata="False"
                  version="2">
                  <properties>
                    <property
                      dataType="System.String"
                      name="Design">[{"NodeType":2,"SourceType":"Input","InputOrColumnName":"Root","Children":[{"NodeName":"id","NodeType":3,"SourceType":"Column","InputOrColumnName":"id"},{"NodeName":"IdInFile","NodeType":3,"SourceType":"Column","InputOrColumnName":"IdInFile"},{"NodeName":"StartDate","NodeType":3,"SourceType":"Column","InputOrColumnName":"StartDate"},{"NodeName":"EndDate","NodeType":3,"SourceType":"Column","InputOrColumnName":"EndDate"},{"NodeName":"AverageSpeed","NodeType":3,"SourceType":"Column","InputOrColumnName":"AverageSpeed"},{"NodeName":"Duration","NodeType":3,"SourceType":"Column","InputOrColumnName":"Duration"},{"NodeName":"Length","NodeType":3,"SourceType":"Column","InputOrColumnName":"Length"},{"NodeName":"city","NodeType":3,"SourceType":"Column","InputOrColumnName":"city"},{"NodeName":"Weather","NodeType":2,"SourceType":"None","Children":[{"NodeName":"Temperature","NodeType":3,"SourceType":"Column","InputOrColumnName":"Temperature"},{"NodeName":"Precipitation","NodeType":3,"SourceType":"Column","InputOrColumnName":"Precipitation"}]},{"NodeName":"FuelPrice","NodeType":2,"SourceType":"None","Children":[{"NodeName":"GasolinePrice","NodeType":3,"SourceType":"Column","InputOrColumnName":"GasolinePrice"},{"NodeName":"DieselPrice","NodeType":3,"SourceType":"Column","InputOrColumnName":"DieselPrice"}]},{"NodeName":"CountryPopulation","NodeType":2,"SourceType":"None","Children":[{"NodeName":"Total","NodeType":3,"SourceType":"Column","InputOrColumnName":"Total"},{"NodeName":"MalePercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"MalePercentage"},{"NodeName":"FemalePercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"FemalePercentage"},{"NodeName":"Density","NodeType":3,"SourceType":"Column","InputOrColumnName":"Density"},{"NodeName":"UrbanPercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"UrbanPercentage"},{"NodeName":"RuralPercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"RuralPercentage"},{"NodeName":"Age0-14Percentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"Age0-14Percentage"},{"NodeName":"Age15-64Percentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"Age15-64Percentage"},{"NodeName":"Age65+Percentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"Age65+Percentage"},{"NodeName":"MortalityInRoadTrafficPer100000","NodeType":3,"SourceType":"Column","InputOrColumnName":"MortalityInRoadTrafficPer100000"}]},{"NodeName":"Economic","NodeType":2,"SourceType":"None","Children":[{"NodeName":"GDPPerCapitaConstantLCU","NodeType":3,"SourceType":"Column","InputOrColumnName":"GDPPerCapitaConstantLCU"},{"NodeName":"GDPPerCapitaCurrentLCU","NodeType":3,"SourceType":"Column","InputOrColumnName":"GDPPerCapitaCurrentLCU"},{"NodeName":"Inflation","NodeType":3,"SourceType":"Column","InputOrColumnName":"Inflation"},{"NodeName":"UneploymentNationalEstimate","NodeType":3,"SourceType":"Column","InputOrColumnName":"UneploymentNationalEstimate"},{"NodeName":"UneploymentModeledILOEstimate","NodeType":3,"SourceType":"Column","InputOrColumnName":"UneploymentModeledILOEstimate"},{"NodeName":"DeparturesInInternationalTourism","NodeType":3,"SourceType":"Column","InputOrColumnName":"DeparturesInInternationalTourism"},{"NodeName":"ArrivalsInInternationalTourism","NodeType":3,"SourceType":"Column","InputOrColumnName":"ArrivalsInInternationalTourism"},{"NodeName":"PrivateInvestmentsInTransport","NodeType":3,"SourceType":"Column","InputOrColumnName":"PrivateInvestmentsInTransport"}]},{"NodeName":"Emissions","NodeType":2,"SourceType":"None","Children":[{"NodeName":"CO2EmissionsFromTransportPercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"CO2EmissionsFromTransportPercentage"},{"NodeName":"CO2EmissionsFromGaseousFuelConsumptionPercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"CO2EmissionsFromGaseousFuelConsumptionPercentage"}]},{"NodeName":"Points","NodeType":1,"SourceType":"Input","InputOrColumnName":"Points","Children":[{"NodeType":2,"SourceType":"None","Children":[{"NodeName":"Latitude","NodeType":3,"SourceType":"Column","InputOrColumnName":"Latitude"},{"NodeName":"Longitude","NodeType":3,"SourceType":"Column","InputOrColumnName":"Longitude"},{"NodeName":"Timestamp","NodeType":3,"SourceType":"Column","InputOrColumnName":""},{"NodeName":"Region","NodeType":2,"SourceType":"None","Children":[{"NodeName":"Name","NodeType":3,"SourceType":"Column","InputOrColumnName":"Name"},{"NodeName":"Area","NodeType":3,"SourceType":"Column","InputOrColumnName":"Area"},{"NodeName":"Population","NodeType":3,"SourceType":"Column","InputOrColumnName":"Population"},{"NodeName":"Density","NodeType":3,"SourceType":"Column","InputOrColumnName":"Density"}]}]}]}]}]</property>
                    <property
                      dataType="System.Boolean"
                      description="Specifies if the linkId &amp; parentLinkId values used for merging child &amp; parent inputs are scrambled (true) or grouped (false)."
                      expressionType="Notify"
                      name="LinkIdsAreScrambled">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how to write null values in the merged document."
                      expressionType="Notify"
                      name="NullMode"
                      typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.JsonMergeNullMode">2</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how to write empty arrays in the merged document."
                      expressionType="Notify"
                      name="EmptyArrayMode"
                      typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.JsonEmptyArrayMode">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how to write empty objects in the merged document."
                      expressionType="Notify"
                      name="EmptyObjectMode"
                      typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.JsonEmptyObjectMode">1</property>
                    <property
                      dataType="System.String"
                      description="Specifies the text qualifier to use when splitting values to be repeated in the final document."
                      expressionType="Notify"
                      name="IsRepeatedTextQualifier">Double-Quote ( " )</property>
                    <property
                      dataType="System.String"
                      description="Specifies the text qualifier to use when splitting values to be repeated in the final document."
                      expressionType="Notify"
                      name="IsRepeatedTextDelimiter">Comma ( , )</property>
                    <property
                      dataType="System.String"
                      description="The CosmosDB Database to write to."
                      expressionType="Notify"
                      name="Database">Trajectories</property>
                    <property
                      dataType="System.String"
                      description="The CosmosDB Container to write to."
                      expressionType="Notify"
                      name="Container">Trajectories</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies which action to perform when writing to CosmosDB Items"
                      expressionType="Notify"
                      name="Action"
                      typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.CosmosDbAction">1</property>
                    <property
                      dataType="System.Boolean"
                      description="Specifies to send items as raw text from a DT_NTEXT column."
                      name="InputAsRawText">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the consistency level required for the request in the Azure Cosmos DB service."
                      expressionType="Notify"
                      name="ConsistencyLevel"
                      typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.CosmosDbConsistencyLevel">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the indexing directive (Include or Exclude) for the request in the Azure Cosmos DB service."
                      expressionType="Notify"
                      name="IndexingDirective"
                      typeConverter="Microsoft.Azure.Cosmos.IndexingDirective">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the maximum number of items that can be sent client side during parallel execution in the Azure Cosmos DB service. A positive property value limits the number of sent items to the set value. If it is set to 0, the system automatically decides the number of items to send."
                      expressionType="Notify"
                      name="MaxDegreeOfParallelism">1</property>
                    <property
                      dataType="System.String"
                      description="Specifies the trigger to be invoked after the operation in the Azure Cosmos DB service."
                      expressionType="Notify"
                      name="PostTriggerInclude"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the trigger to be invoked before the operation in the Azure Cosmos DB service."
                      expressionType="Notify"
                      name="PreTriggerInclude"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the token for use with session consistency in the Azure Cosmos DB service."
                      expressionType="Notify"
                      name="SessionToken"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the If-Match (ETag) associated with the request in the Azure Cosmos DB service."
                      expressionType="Notify"
                      name="IfMatchEtag"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the If-None-Match (ETag) associated with the request in the Azure Cosmos DB service."
                      expressionType="Notify"
                      name="IfNoneMatchEtag"></property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">KingswaySoft.IntegrationToolkit.ProductivityPack.CosmosDbDestinationComponent</property>
                    <property
                      dataType="System.Int32"
                      name="Encoding">65001</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Connections[CosmosDB (KingswaySoft)]"
                      connectionManagerID="Package.ConnectionManagers[CosmosDB Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[CosmosDB Connection Manager]"
                      description="CosmosDB Connection Manager"
                      name="CosmosDB (KingswaySoft)" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="RedirectRow"
                      hasSideEffects="true"
                      name="Root">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="ParentId"
                          name="ParentId">#{Package\Foreach Geolife file\Data Flow Task\-1:invalid}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="ParentColumnId"
                          name="ParentColumnId">#{Package\Foreach Geolife file\Data Flow Task\-1:invalid}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="IdField"
                          name="IdField">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[_LinkId]}</property>
                      </properties>
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[Length]"
                          cachedDataType="decimal"
                          cachedName="Length"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[Length]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[Length]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Length]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Length]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[Duration]"
                          cachedDataType="decimal"
                          cachedName="Duration"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[Duration]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[Duration]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Duration]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Duration]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[AverageSpeed]"
                          cachedDataType="decimal"
                          cachedName="AverageSpeed"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[AverageSpeed]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[AverageSpeed]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[AverageSpeed]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[AverageSpeed]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[EndDate]"
                          cachedDataType="date"
                          cachedName="EndDate"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[EndDate]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[EndDate]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[EndDate]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[EndDate]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[StartDate]"
                          cachedDataType="date"
                          cachedName="StartDate"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[StartDate]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[StartDate]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[StartDate]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[StartDate]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[TrajectoryId]"
                          cachedCodepage="1250"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="TrajectoryId"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[_LinkId]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[TrajectoryId]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[TrajectoryId]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[TrajectoryId]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[IdInFile]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="IdInFile"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[IdInFile]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\IdInFile and city columns.Outputs[Derived Column Output].Columns[IdInFile]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[IdInFile]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[IdInFile]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[City]"
                          cachedDataType="wstr"
                          cachedLength="7"
                          cachedName="City"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[city]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\IdInFile and city columns.Outputs[Derived Column Output].Columns[City]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[City]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[City]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[Temperature]"
                          cachedDataType="decimal"
                          cachedName="Temperature"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[Temperature]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add weather.Outputs[Output 0].Columns[Temperature]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Temperature]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Temperature]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[Precipitation]"
                          cachedDataType="decimal"
                          cachedName="Precipitation"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[Precipitation]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add weather.Outputs[Output 0].Columns[Precipitation]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Precipitation]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Precipitation]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[DieselPrice]"
                          cachedDataType="decimal"
                          cachedName="DieselPrice"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[DieselPrice]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add fuel prices.Outputs[Output 0].Columns[DieselPrice]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[DieselPrice]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[DieselPrice]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[GasolinePrice]"
                          cachedDataType="decimal"
                          cachedName="GasolinePrice"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[GasolinePrice]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add fuel prices.Outputs[Output 0].Columns[GasolinePrice]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GasolinePrice]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GasolinePrice]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[ArrivalsInInternationalTourism]"
                          cachedDataType="i4"
                          cachedName="ArrivalsInInternationalTourism"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[ArrivalsInInternationalTourism]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[ArrivalsInInternationalTourism]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ArrivalsInInternationalTourism]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[ArrivalsInInternationalTourism]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[DeparturesInInternationalTourism]"
                          cachedDataType="i4"
                          cachedName="DeparturesInInternationalTourism"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[DeparturesInInternationalTourism]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[DeparturesInInternationalTourism]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[DeparturesInInternationalTourism]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[DeparturesInInternationalTourism]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[UneploymentModeledILOEstimate]"
                          cachedDataType="decimal"
                          cachedName="UneploymentModeledILOEstimate"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[UneploymentModeledILOEstimate]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[UneploymentModeledILOEstimate]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UneploymentModeledILOEstimate]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UneploymentModeledILOEstimate]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[UneploymentNationalEstimate]"
                          cachedDataType="decimal"
                          cachedName="UneploymentNationalEstimate"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[UneploymentNationalEstimate]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[UneploymentNationalEstimate]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UneploymentNationalEstimate]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UneploymentNationalEstimate]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[Inflation]"
                          cachedDataType="decimal"
                          cachedName="Inflation"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[Inflation]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[Inflation]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Inflation]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Inflation]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[GDPPerCapitaCurrentLCU]"
                          cachedDataType="decimal"
                          cachedName="GDPPerCapitaCurrentLCU"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[GDPPerCapitaCurrentLCU]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[GDPPerCapitaCurrentLCU]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GDPPerCapitaCurrentLCU]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GDPPerCapitaCurrentLCU]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[GDPPerCapitaConstantLCU]"
                          cachedDataType="decimal"
                          cachedName="GDPPerCapitaConstantLCU"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[GDPPerCapitaConstantLCU]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[GDPPerCapitaConstantLCU]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GDPPerCapitaConstantLCU]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GDPPerCapitaConstantLCU]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[MortalityInRoadTrafficPer100000]"
                          cachedDataType="decimal"
                          cachedName="MortalityInRoadTrafficPer100000"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[MortalityInRoadTrafficPer100000]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[MortalityInRoadTrafficPer100000]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[MortalityInRoadTrafficPer100000]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[MortalityInRoadTrafficPer100000]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[Age65+Percentage]"
                          cachedDataType="decimal"
                          cachedName="Age65+Percentage"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[Age65+Percentage]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[Age65+Percentage]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age65+Percentage]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age65+Percentage]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[Age15-64Percentage]"
                          cachedDataType="decimal"
                          cachedName="Age15-64Percentage"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[Age15-64Percentage]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[Age15-64Percentage]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age15-64Percentage]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age15-64Percentage]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[Age0-14Percentage]"
                          cachedDataType="decimal"
                          cachedName="Age0-14Percentage"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[Age0-14Percentage]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[Age0-14Percentage]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age0-14Percentage]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age0-14Percentage]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[RuralPercentage]"
                          cachedDataType="decimal"
                          cachedName="RuralPercentage"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[RuralPercentage]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[RuralPercentage]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[RuralPercentage]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[RuralPercentage]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[UrbanPercentage]"
                          cachedDataType="decimal"
                          cachedName="UrbanPercentage"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[UrbanPercentage]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[UrbanPercentage]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UrbanPercentage]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UrbanPercentage]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[CountryDensity]"
                          cachedDataType="decimal"
                          cachedName="CountryDensity"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[Density]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[CountryDensity]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CountryDensity]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CountryDensity]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[FemalePercentage]"
                          cachedDataType="decimal"
                          cachedName="FemalePercentage"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[FemalePercentage]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[FemalePercentage]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[FemalePercentage]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[FemalePercentage]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[MalePercentage]"
                          cachedDataType="decimal"
                          cachedName="MalePercentage"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[MalePercentage]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[MalePercentage]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[MalePercentage]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[MalePercentage]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[TotalPopulation]"
                          cachedDataType="i4"
                          cachedName="TotalPopulation"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[Total]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[TotalPopulation]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[TotalPopulation]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[TotalPopulation]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[PrivateInvestmentsInTransport]"
                          cachedDataType="ui8"
                          cachedName="PrivateInvestmentsInTransport"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[PrivateInvestmentsInTransport]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[PrivateInvestmentsInTransport]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[PrivateInvestmentsInTransport]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[PrivateInvestmentsInTransport]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                          cachedDataType="decimal"
                          cachedName="CO2EmissionsFromGaseousFuelConsumptionPercentage"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[CO2EmissionsFromTransportPercentage]"
                          cachedDataType="decimal"
                          cachedName="CO2EmissionsFromTransportPercentage"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[CO2EmissionsFromTransportPercentage]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[CO2EmissionsFromTransportPercentage]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CO2EmissionsFromTransportPercentage]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CO2EmissionsFromTransportPercentage]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].Columns[CosmosDbId]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="CosmosDbId"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[id]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[CosmosDbId]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CosmosDbId]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CosmosDbId]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[_LinkId]"
                          dataType="wstr"
                          length="255"
                          name="_LinkId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[id]"
                          dataType="wstr"
                          length="50"
                          name="id" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[IdInFile]"
                          dataType="wstr"
                          length="50"
                          name="IdInFile" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[StartDate]"
                          dataType="dbTimeStamp"
                          name="StartDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[EndDate]"
                          dataType="dbTimeStamp"
                          name="EndDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[AverageSpeed]"
                          dataType="decimal"
                          name="AverageSpeed" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[Duration]"
                          dataType="decimal"
                          name="Duration" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[Length]"
                          dataType="decimal"
                          name="Length" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[city]"
                          dataType="wstr"
                          length="50"
                          name="city" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[Temperature]"
                          dataType="decimal"
                          name="Temperature" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[Precipitation]"
                          dataType="decimal"
                          name="Precipitation" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[GasolinePrice]"
                          dataType="decimal"
                          name="GasolinePrice" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[DieselPrice]"
                          dataType="decimal"
                          name="DieselPrice" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[Total]"
                          dataType="i8"
                          name="Total" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[MalePercentage]"
                          dataType="decimal"
                          name="MalePercentage" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[FemalePercentage]"
                          dataType="decimal"
                          name="FemalePercentage" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[Density]"
                          dataType="decimal"
                          name="Density" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[UrbanPercentage]"
                          dataType="decimal"
                          name="UrbanPercentage" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[RuralPercentage]"
                          dataType="decimal"
                          name="RuralPercentage" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[Age0-14Percentage]"
                          dataType="decimal"
                          name="Age0-14Percentage" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[Age15-64Percentage]"
                          dataType="decimal"
                          name="Age15-64Percentage" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[Age65+Percentage]"
                          dataType="decimal"
                          name="Age65+Percentage" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[MortalityInRoadTrafficPer100000]"
                          dataType="decimal"
                          name="MortalityInRoadTrafficPer100000" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[GDPPerCapitaConstantLCU]"
                          dataType="decimal"
                          name="GDPPerCapitaConstantLCU" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[GDPPerCapitaCurrentLCU]"
                          dataType="decimal"
                          name="GDPPerCapitaCurrentLCU" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[Inflation]"
                          dataType="decimal"
                          name="Inflation" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[UneploymentNationalEstimate]"
                          dataType="decimal"
                          name="UneploymentNationalEstimate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[UneploymentModeledILOEstimate]"
                          dataType="decimal"
                          name="UneploymentModeledILOEstimate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[DeparturesInInternationalTourism]"
                          dataType="i8"
                          name="DeparturesInInternationalTourism" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[ArrivalsInInternationalTourism]"
                          dataType="i8"
                          name="ArrivalsInInternationalTourism" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[PrivateInvestmentsInTransport]"
                          dataType="i8"
                          name="PrivateInvestmentsInTransport" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[CO2EmissionsFromTransportPercentage]"
                          dataType="decimal"
                          name="CO2EmissionsFromTransportPercentage" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root].ExternalColumns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                          dataType="decimal"
                          name="CO2EmissionsFromGaseousFuelConsumptionPercentage" />
                      </externalMetadataColumns>
                    </input>
                    <input
                      refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Points">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="ParentId"
                          name="ParentId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="ParentColumnId"
                          name="ParentColumnId">#{Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points].ExternalColumns[_Root.LinkId]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="IdField"
                          name="IdField">#{Package\Foreach Geolife file\Data Flow Task\-1:invalid}</property>
                      </properties>
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points].Columns[Latitude]"
                          cachedDataType="decimal"
                          cachedName="Latitude"
                          cachedScale="10"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points].ExternalColumns[Latitude]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Latitude]" />
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points].Columns[Longitude]"
                          cachedDataType="decimal"
                          cachedName="Longitude"
                          cachedScale="10"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points].ExternalColumns[Longitude]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Longitude]" />
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points].Columns[Date]"
                          cachedCodepage="1250"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Date"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Date]" />
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points].Columns[Time]"
                          cachedCodepage="1250"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Time"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Time]" />
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points].Columns[Datetime]"
                          cachedDataType="date"
                          cachedName="Datetime"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points].ExternalColumns[293]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Create datetime.Outputs[Output 0].Columns[Datetime]" />
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points].Columns[TrajectoryId]"
                          cachedCodepage="1250"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="TrajectoryId"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points].ExternalColumns[_Root.LinkId]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Create datetime.Outputs[Output 0].Columns[TrajectoryId]" />
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points].Columns[RegionArea]"
                          cachedDataType="decimal"
                          cachedName="RegionArea"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points].ExternalColumns[Area]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add region.Outputs[Output 0].Columns[RegionArea]" />
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points].Columns[RegionName]"
                          cachedCodepage="1250"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="RegionName"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points].ExternalColumns[Name]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add region.Outputs[Output 0].Columns[RegionName]" />
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points].Columns[RegionPopulation]"
                          cachedDataType="i4"
                          cachedName="RegionPopulation"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points].ExternalColumns[Population]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add region.Outputs[Output 0].Columns[RegionPopulation]" />
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points].Columns[RegionDensity]"
                          cachedDataType="decimal"
                          cachedName="RegionDensity"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points].ExternalColumns[Density]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add region.Outputs[Output 0].Columns[RegionDensity]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points].ExternalColumns[_Root.LinkId]"
                          dataType="wstr"
                          length="255"
                          name="_Root.LinkId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points].ExternalColumns[Latitude]"
                          dataType="decimal"
                          name="Latitude" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points].ExternalColumns[Longitude]"
                          dataType="decimal"
                          name="Longitude" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points].ExternalColumns[293]"
                          dataType="dbTimeStamp"
                          name="" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points].ExternalColumns[Name]"
                          dataType="wstr"
                          length="50"
                          name="Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points].ExternalColumns[Area]"
                          dataType="decimal"
                          name="Area" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points].ExternalColumns[Population]"
                          dataType="i8"
                          name="Population" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points].ExternalColumns[Density]"
                          dataType="decimal"
                          name="Density" />
                      </externalMetadataColumns>
                    </input>
                    <input
                      refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[&lt;Create New Input&gt;]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="&lt;Create New Input&gt;">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="ParentId"
                          name="ParentId">-1</property>
                        <property
                          dataType="System.Int32"
                          description="ParentColumnId"
                          name="ParentColumnId">-1</property>
                        <property
                          dataType="System.Int32"
                          description="IdField"
                          name="IdField">-1</property>
                      </properties>
                      <externalMetadataColumns
                        isUsed="True" />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)]"
                      isErrorOut="true"
                      name="Error Output (Load Geolife trajectories)">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ErrorMessage]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Length]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Length]"
                          name="Length"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Duration]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Duration]"
                          name="Duration"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[AverageSpeed]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[AverageSpeed]"
                          name="AverageSpeed"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[EndDate]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[EndDate]"
                          name="EndDate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[StartDate]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[StartDate]"
                          name="StartDate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[TrajectoryId]"
                          codePage="1250"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[TrajectoryId]"
                          name="TrajectoryId"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[IdInFile]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[IdInFile]"
                          name="IdInFile"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[City]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="7"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[City]"
                          name="City"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Temperature]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Temperature]"
                          name="Temperature"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Precipitation]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Precipitation]"
                          name="Precipitation"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[DieselPrice]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[DieselPrice]"
                          name="DieselPrice"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GasolinePrice]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GasolinePrice]"
                          name="GasolinePrice"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ArrivalsInInternationalTourism]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ArrivalsInInternationalTourism]"
                          name="ArrivalsInInternationalTourism"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[DeparturesInInternationalTourism]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[DeparturesInInternationalTourism]"
                          name="DeparturesInInternationalTourism"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UneploymentModeledILOEstimate]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UneploymentModeledILOEstimate]"
                          name="UneploymentModeledILOEstimate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UneploymentNationalEstimate]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UneploymentNationalEstimate]"
                          name="UneploymentNationalEstimate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Inflation]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Inflation]"
                          name="Inflation"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GDPPerCapitaCurrentLCU]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GDPPerCapitaCurrentLCU]"
                          name="GDPPerCapitaCurrentLCU"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GDPPerCapitaConstantLCU]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GDPPerCapitaConstantLCU]"
                          name="GDPPerCapitaConstantLCU"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[MortalityInRoadTrafficPer100000]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[MortalityInRoadTrafficPer100000]"
                          name="MortalityInRoadTrafficPer100000"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age65+Percentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age65+Percentage]"
                          name="Age65+Percentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age15-64Percentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age15-64Percentage]"
                          name="Age15-64Percentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age0-14Percentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age0-14Percentage]"
                          name="Age0-14Percentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[RuralPercentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[RuralPercentage]"
                          name="RuralPercentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UrbanPercentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UrbanPercentage]"
                          name="UrbanPercentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CountryDensity]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CountryDensity]"
                          name="CountryDensity"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[FemalePercentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[FemalePercentage]"
                          name="FemalePercentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[MalePercentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[MalePercentage]"
                          name="MalePercentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[TotalPopulation]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[TotalPopulation]"
                          name="TotalPopulation"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[PrivateInvestmentsInTransport]"
                          dataType="ui8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[PrivateInvestmentsInTransport]"
                          name="PrivateInvestmentsInTransport"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                          name="CO2EmissionsFromGaseousFuelConsumptionPercentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CO2EmissionsFromTransportPercentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CO2EmissionsFromTransportPercentage]"
                          name="CO2EmissionsFromTransportPercentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CosmosDbId]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CosmosDbId]"
                          name="CosmosDbId"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)]"
                      name="Default Output (Load Geolife trajectories)">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Length]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Length]"
                          name="Length"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Duration]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Duration]"
                          name="Duration"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[AverageSpeed]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[AverageSpeed]"
                          name="AverageSpeed"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[EndDate]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[EndDate]"
                          name="EndDate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[StartDate]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[StartDate]"
                          name="StartDate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[TrajectoryId]"
                          codePage="1250"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[TrajectoryId]"
                          name="TrajectoryId"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[IdInFile]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[IdInFile]"
                          name="IdInFile"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[City]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="7"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[City]"
                          name="City"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Temperature]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Temperature]"
                          name="Temperature"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Precipitation]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Precipitation]"
                          name="Precipitation"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[DieselPrice]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[DieselPrice]"
                          name="DieselPrice"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GasolinePrice]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GasolinePrice]"
                          name="GasolinePrice"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[ArrivalsInInternationalTourism]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[ArrivalsInInternationalTourism]"
                          name="ArrivalsInInternationalTourism"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[DeparturesInInternationalTourism]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[DeparturesInInternationalTourism]"
                          name="DeparturesInInternationalTourism"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UneploymentModeledILOEstimate]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UneploymentModeledILOEstimate]"
                          name="UneploymentModeledILOEstimate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UneploymentNationalEstimate]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UneploymentNationalEstimate]"
                          name="UneploymentNationalEstimate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Inflation]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Inflation]"
                          name="Inflation"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GDPPerCapitaCurrentLCU]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GDPPerCapitaCurrentLCU]"
                          name="GDPPerCapitaCurrentLCU"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GDPPerCapitaConstantLCU]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GDPPerCapitaConstantLCU]"
                          name="GDPPerCapitaConstantLCU"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[MortalityInRoadTrafficPer100000]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[MortalityInRoadTrafficPer100000]"
                          name="MortalityInRoadTrafficPer100000"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age65+Percentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age65+Percentage]"
                          name="Age65+Percentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age15-64Percentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age15-64Percentage]"
                          name="Age15-64Percentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age0-14Percentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age0-14Percentage]"
                          name="Age0-14Percentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[RuralPercentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[RuralPercentage]"
                          name="RuralPercentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UrbanPercentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UrbanPercentage]"
                          name="UrbanPercentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CountryDensity]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CountryDensity]"
                          name="CountryDensity"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[FemalePercentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[FemalePercentage]"
                          name="FemalePercentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[MalePercentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[MalePercentage]"
                          name="MalePercentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[TotalPopulation]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[TotalPopulation]"
                          name="TotalPopulation"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[PrivateInvestmentsInTransport]"
                          dataType="ui8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[PrivateInvestmentsInTransport]"
                          name="PrivateInvestmentsInTransport"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                          name="CO2EmissionsFromGaseousFuelConsumptionPercentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CO2EmissionsFromTransportPercentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CO2EmissionsFromTransportPercentage]"
                          name="CO2EmissionsFromTransportPercentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CosmosDbId]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CosmosDbId]"
                          name="CosmosDbId"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Orphaned Children Error Output]"
                      isErrorOut="true"
                      name="Orphaned Children Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Input Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Input Name]"
                          name="Input Name" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Column Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Column Name]"
                          name="Column Name" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Column Value]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Column Value]"
                          name="Column Value" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Parent Input Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Parent Input Name]"
                          name="Parent Input Name" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Parent Column Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Parent Column Name]"
                          name="Parent Column Name" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorMessage]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Geolife file\Data Flow Task\Create datetime"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Create datetime"
                  version="13">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String GeolifeFilePath
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["GeolifeFilePath"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Globalization;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        DateTime dateTime;
        if(DateTime.TryParseExact(Row.Date + " " + Row.Time, "yyyy-MM-dd HH:mm:ss", CultureInfo.InvariantCulture, DateTimeStyles.None, out dateTime))
        {
            Row.Datetime = dateTime;
        }

        string filePath = Variables.GeolifeFilePath;
        string traectoryNumber = filePath.Substring(filePath.IndexOf("Data\\") + 5, 3);
        string fileNumber = filePath.Substring(filePath.IndexOf("Trajectory") + 11, 14);
        Row.TrajectoryId = traectoryNumber + "-" + fileNumber;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Date_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String Time
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool Time_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public DateTime Datetime
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Datetime_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TrajectoryId
    {
        set
        {
            this[3] = value;
        }
    }
    public bool TrajectoryId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_29a26bfd6ccd4d2682fcfd662615de4f.Properties.Settings.get_Default():SC_29a26bfd6ccd4d2682fcfd662615de4f.Properties.Sett" +
    "ings")]

namespace SC_29a26bfd6ccd4d2682fcfd662615de4f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_29a26bfd6ccd4d2682fcfd662615de4f</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_29a26bfd6ccd4d2682fcfd662615de4f</msb:DisplayName>
    <msb:ProjectId>{234C4FF3-C227-47A2-8430-583ADD666E55}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_29a26bfd6ccd4d2682fcfd662615de4f.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_29a26bfd6ccd4d2682fcfd662615de4f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_29a26bfd6ccd4d2682fcfd662615de4f")]
[assembly: AssemblyCopyright("Copyright @ HP 2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_29a26bfd6ccd4d2682fcfd662615de4f.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{a8b5926b-b923-41df-984d-9271710756aa}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_29a26bfd6ccd4d2682fcfd662615de4f</RootNamespace><AssemblyName>SC_2F0A8FC0DD6945D4A2FC6AF7A021B343</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptComponent" GeneratedNamespace="SC_29a26bfd6ccd4d2682fcfd662615de4f" IconIndex="0"></Host><ProjectClient><HostIdentifier>SSIS_SC160</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_29a26bfd6ccd4d2682fcfd662615de4f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_29a26bfd6ccd4d2682fcfd662615de4f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_29a26bfd6ccd4d2682fcfd662615de4f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_29a26bfd6ccd4d2682fcfd662615de4f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_29a26bfd6ccd4d2682fcfd662615de4f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_2f0a8fc0dd6945d4a2fc6af7a021b343</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::GeolifeFilePath</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">52</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Geolife file\Data Flow Task\Create datetime.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Create datetime.Inputs[Input 0].Columns[Date]"
                          cachedCodepage="1250"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Date"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Date]" />
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Create datetime.Inputs[Input 0].Columns[Time]"
                          cachedCodepage="1250"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Time"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Time]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Create datetime.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Foreach Geolife file\Data Flow Task\Create datetime.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Create datetime.Outputs[Output 0].Columns[Datetime]"
                          dataType="date"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Create datetime.Outputs[Output 0].Columns[Datetime]"
                          name="Datetime" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Create datetime.Outputs[Output 0].Columns[TrajectoryId]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Create datetime.Outputs[Output 0].Columns[TrajectoryId]"
                          name="TrajectoryId" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Geolife file\Data Flow Task\Create datetime 1"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Create datetime 1"
                  version="13">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="30">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String GeolifeFilePath
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["GeolifeFilePath"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Data;
using System.Globalization;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        DateTime dateTime;
        if(DateTime.TryParseExact(Row.Date + " " + Row.Time, "yyyy-MM-dd HH:mm:ss", CultureInfo.InvariantCulture, DateTimeStyles.None, out dateTime))
        {
            Row.Datetime = dateTime;
        }

        string filePath = Variables.GeolifeFilePath;
        string traectoryNumber = filePath.Substring(filePath.IndexOf("Data\\") + 5, 3);
        string fileNumber = filePath.Substring(filePath.IndexOf("Trajectory") + 11, 14);
        Row.TrajectoryId = traectoryNumber + "-" + fileNumber;
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String Date
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[0]);
        }
    }
    public bool Date_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public String Time
    {
        get
        {
            return Buffer.GetString(BufferColumnIndexes[1]);
        }
    }
    public bool Time_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public DateTime Datetime
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Datetime_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TrajectoryId
    {
        set
        {
            this[3] = value;
        }
    }
    public bool TrajectoryId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_29a26bfd6ccd4d2682fcfd662615de4f.Properties.Settings.get_Default():SC_29a26bfd6ccd4d2682fcfd662615de4f.Properties.Sett" +
    "ings")]

namespace SC_29a26bfd6ccd4d2682fcfd662615de4f.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_29a26bfd6ccd4d2682fcfd662615de4f</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_29a26bfd6ccd4d2682fcfd662615de4f</msb:DisplayName>
    <msb:ProjectId>{234C4FF3-C227-47A2-8430-583ADD666E55}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_29a26bfd6ccd4d2682fcfd662615de4f.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_29a26bfd6ccd4d2682fcfd662615de4f")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_29a26bfd6ccd4d2682fcfd662615de4f")]
[assembly: AssemblyCopyright("Copyright @ HP 2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_29a26bfd6ccd4d2682fcfd662615de4f.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{a8b5926b-b923-41df-984d-9271710756aa}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_29a26bfd6ccd4d2682fcfd662615de4f</RootNamespace><AssemblyName>SC_285C57D7DA8F477EBDA4DD7C4FE18A36</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" /><Host Name="ScriptComponent" GeneratedNamespace="SC_29a26bfd6ccd4d2682fcfd662615de4f" IconIndex="0"></Host><ProjectClient><HostIdentifier>SSIS_SC160</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_29a26bfd6ccd4d2682fcfd662615de4f.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_29a26bfd6ccd4d2682fcfd662615de4f.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_29a26bfd6ccd4d2682fcfd662615de4f.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_29a26bfd6ccd4d2682fcfd662615de4f.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_29a26bfd6ccd4d2682fcfd662615de4f.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_285c57d7da8f477ebda4dd7c4fe18a36</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::GeolifeFilePath</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">52</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Geolife file\Data Flow Task\Create datetime 1.Inputs[Input 0]"
                      hasSideEffects="true"
                      name="Input 0">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Create datetime 1.Inputs[Input 0].Columns[Date]"
                          cachedCodepage="1250"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Date"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Default Output].Columns[Date]" />
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Create datetime 1.Inputs[Input 0].Columns[Time]"
                          cachedCodepage="1250"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Time"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Default Output].Columns[Time]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Create datetime 1.Outputs[Output 0]"
                      name="Output 0"
                      synchronousInputId="Package\Foreach Geolife file\Data Flow Task\Create datetime 1.Inputs[Input 0]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Create datetime 1.Outputs[Output 0].Columns[Datetime]"
                          dataType="date"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Create datetime 1.Outputs[Output 0].Columns[Datetime]"
                          name="Datetime" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Create datetime 1.Outputs[Output 0].Columns[TrajectoryId]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Create datetime 1.Outputs[Output 0].Columns[TrajectoryId]"
                          name="TrajectoryId" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Geolife file\Data Flow Task\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Geolife file\Data Flow Task\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Derived Column.Inputs[Derived Column Input].Columns[TrajectoryId]"
                          cachedCodepage="1250"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="TrajectoryId"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[TrajectoryId]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Geolife file\Data Flow Task\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[CosmosDbId]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Derived Column.Outputs[Derived Column Output].Columns[CosmosDbId]"
                          name="CosmosDbId"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[TrajectoryId]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">TrajectoryId</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Geolife file\Data Flow Task\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Discard non-Beijing trajectories"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories.Inputs[Conditional Split Input].Columns[Latitude]"
                          cachedDataType="decimal"
                          cachedName="Latitude"
                          cachedScale="10"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Latitude]" />
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories.Inputs[Conditional Split Input].Columns[Longitude]"
                          cachedDataType="decimal"
                          cachedName="Longitude"
                          cachedScale="10"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Longitude]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories.Outputs[Beijing trajectories]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Beijing trajectories"
                      synchronousInputId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Latitude]} &gt; 39.4 &amp;&amp; #{Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Latitude]} &lt; 41.1 &amp;&amp; #{Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Longitude]} &gt; 115.4 &amp;&amp; #{Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Longitude]} &lt; 117.6</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">Latitude &gt; 39.4 &amp;&amp; Latitude &lt; 41.1 &amp;&amp; Longitude &gt; 115.4 &amp;&amp; Longitude &lt; 117.6</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories 1"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Discard non-Beijing trajectories 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories 1.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories 1.Inputs[Conditional Split Input].Columns[Latitude]"
                          cachedDataType="decimal"
                          cachedName="Latitude"
                          cachedScale="10"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Default Output].Columns[Latitude]" />
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories 1.Inputs[Conditional Split Input].Columns[Longitude]"
                          cachedDataType="decimal"
                          cachedName="Longitude"
                          cachedScale="10"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Default Output].Columns[Longitude]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories 1.Outputs[Beijing trajectories]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="Beijing trajectories"
                      synchronousInputId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories 1.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">#{Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Default Output].Columns[Latitude]} &gt; 39.4 &amp;&amp; #{Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Default Output].Columns[Latitude]} &lt; 41.1 &amp;&amp; #{Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Default Output].Columns[Longitude]} &gt; 115.4 &amp;&amp; #{Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Default Output].Columns[Longitude]} &lt; 117.6</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">Latitude &gt; 39.4 &amp;&amp; Latitude &lt; 41.1 &amp;&amp; Longitude &gt; 115.4 &amp;&amp; Longitude &lt; 117.6</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories 1.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories 1.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories 1.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories 1.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories 1.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories 1.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1045"
                  name="Geolife trajectories source"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[PLT Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[PLT Connection Manager]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Output].Columns[Latitude]"
                          codePage="1250"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Output].ExternalColumns[Latitude]"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Output].Columns[Latitude]"
                          name="Latitude"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Output].Columns[Longitude]"
                          codePage="1250"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Output].ExternalColumns[Longitude]"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Output].Columns[Longitude]"
                          name="Longitude"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Output].Columns[Date]"
                          codePage="1250"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Output].ExternalColumns[Date]"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Output].Columns[Date]"
                          name="Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Output].Columns[Time]"
                          codePage="1250"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Output].ExternalColumns[Time]"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Output].Columns[Time]"
                          name="Time"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Output].ExternalColumns[Latitude]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          name="Latitude" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Output].ExternalColumns[Longitude]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          name="Longitude" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Output].ExternalColumns[All zero]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          name="All zero" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Output].ExternalColumns[Altitude]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          name="Altitude" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Output].ExternalColumns[Date-days]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          name="Date-days" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Output].ExternalColumns[Date]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          name="Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Output].ExternalColumns[Time]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          name="Time" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1250"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1"
                  componentClassID="Microsoft.FlatFileSource"
                  contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Flat File Source"
                  localeId="1045"
                  name="Geolife trajectories source 1"
                  usesDispositions="true"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Boolean"
                      description="Specifies whether zero-length columns are treated as null."
                      name="RetainNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                      name="FileNameColumnName"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Connections[FlatFileConnection]"
                      connectionManagerID="Package.ConnectionManagers[PLT Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[PLT Connection Manager]"
                      name="FlatFileConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Output]"
                      name="Flat File Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Output].Columns[Latitude]"
                          codePage="1250"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Output].ExternalColumns[Latitude]"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Output].Columns[Latitude]"
                          name="Latitude"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Output].Columns[Longitude]"
                          codePage="1250"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Output].ExternalColumns[Longitude]"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Output].Columns[Longitude]"
                          name="Longitude"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Output].Columns[Date]"
                          codePage="1250"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Output].ExternalColumns[Date]"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Output].Columns[Date]"
                          name="Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Output].Columns[Time]"
                          codePage="1250"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Output].ExternalColumns[Time]"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Output].Columns[Time]"
                          name="Time"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the data is in binary format."
                              name="UseBinaryFormat">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Output].ExternalColumns[Latitude]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          name="Latitude" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Output].ExternalColumns[Longitude]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          name="Longitude" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Output].ExternalColumns[All zero]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          name="All zero" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Output].ExternalColumns[Altitude]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          name="Altitude" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Output].ExternalColumns[Date-days]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          name="Date-days" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Output].ExternalColumns[Date]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          name="Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Output].ExternalColumns[Time]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          name="Time" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Error Output]"
                      isErrorOut="true"
                      name="Flat File Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          codePage="1250"
                          dataType="text"
                          description="Flat File Source Error Output Column"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                          name="Flat File Source Error Output Column" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Geolife file\Data Flow Task\IdInFile and city columns"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="IdInFile and city columns"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Geolife file\Data Flow Task\IdInFile and city columns.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\IdInFile and city columns.Inputs[Derived Column Input].Columns[TrajectoryId]"
                          cachedCodepage="1250"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="TrajectoryId"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[TrajectoryId]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\IdInFile and city columns.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Geolife file\Data Flow Task\IdInFile and city columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\IdInFile and city columns.Outputs[Derived Column Output].Columns[IdInFile]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\IdInFile and city columns.Outputs[Derived Column Output].Columns[IdInFile]"
                          name="IdInFile"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[TrajectoryId]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">TrajectoryId</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\IdInFile and city columns.Outputs[Derived Column Output].Columns[City]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="7"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\IdInFile and city columns.Outputs[Derived Column Output].Columns[City]"
                          name="City"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">"Beijing"</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">"Beijing"</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\IdInFile and city columns.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Geolife file\Data Flow Task\IdInFile and city columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\IdInFile and city columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\IdInFile and city columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\IdInFile and city columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\IdInFile and city columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
                  description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
                  name="Load Geolife trajectories"
                  version="13">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Stores the source code of the component"
                      isArray="true"
                      name="SourceCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="36">
                        <arrayElement
                          dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String GeolifeFilePath
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["GeolifeFilePath"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Device.Location;
using System.Globalization;
using System.IO;
using System.Linq;
using CsvHelper;
using ProjNet.CoordinateSystems;
using ProjNet.CoordinateSystems.Transformations;
using ProjNet.IO.CoordinateSystems;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".

        */

        string filePath = Variables.GeolifeFilePath;

        List<Row> rows = new List<Row>();
        using (StreamReader reader = new StreamReader(filePath))
        {
            string line;
            for (int i = 0; i < 6; i++) 
                reader.ReadLine();
            
            while ((line = reader.ReadLine()) != null)
            {
                //line = line.Replace("\"", "");
                
                string[] values = line.Split(',');
                DateTime dateTime;
                if (!DateTime.TryParseExact(values[5] + " " + values[6], "yyyy-MM-dd HH:mm:ss", CultureInfo.InvariantCulture, DateTimeStyles.None, out dateTime))
                    return;

                Row row = new Row
                {
                    Latitude = double.Parse(values[0], CultureInfo.InvariantCulture),
                    Longitude = double.Parse(values[1], CultureInfo.InvariantCulture),
                    DateTime = dateTime
                };

                if (!(row.Latitude > 39.4 && row.Latitude < 41.1 && row.Longitude > 115.4 && row.Longitude < 117.6))
                    return;

                rows.Add(row);
                
            }

            string trajectoryNumber = filePath.Substring(filePath.IndexOf("Data\\") + 5, 3);
            string fileNumber = filePath.Substring(filePath.IndexOf("Trajectory") + 11, 14);
            var id = trajectoryNumber + "-" + fileNumber;

            rows.OrderBy(r => r.DateTime);

            DateTime startDate = rows.First().DateTime;
                
            DateTime endDate = rows.Last().DateTime;

            if (startDate == endDate)
                return;
                
            decimal duration = (decimal)(endDate - startDate).TotalMilliseconds;
                

            double distance = 0;
            for (int i = 0; i < rows.Count - 1; i++) 
            {
                GeoCoordinate firstCoordinate = new GeoCoordinate(rows[i].Latitude, rows[i].Longitude);
                GeoCoordinate secondCoordinate = new GeoCoordinate(rows[i + 1].Latitude, rows[i + 1].Longitude);

                distance += firstCoordinate.GetDistanceTo(secondCoordinate);
            }

            Output0Buffer.AddRow();
            Output0Buffer.TrajectoryId = id;
            Output0Buffer.StartDate = startDate;
            Output0Buffer.EndDate = endDate;
            Output0Buffer.Duration = duration / 60000;
            Output0Buffer.Length = (decimal)distance;
            Output0Buffer.AverageSpeed = (decimal)distance / (duration / 1000);
            
        }

    }

    private class Row
    {
        public DateTime DateTime { get; set; }
        public double Latitude { get; set; }
        public double Longitude { get; set; }

    }

}


]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Decimal Length
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Length_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Duration
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Duration_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal AverageSpeed
    {
        set
        {
            this[2] = value;
        }
    }
    public bool AverageSpeed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime EndDate
    {
        set
        {
            this[3] = value;
        }
    }
    public bool EndDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime StartDate
    {
        set
        {
            this[4] = value;
        }
    }
    public bool StartDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TrajectoryId
    {
        set
        {
            this[5] = value;
        }
    }
    public bool TrajectoryId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[SC_4b3e21b7e2814983820047a9351d1a8d.csproj]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{E2ACFF07-6902-465F-80AA-339BAE39ADD8}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>SC_4b3e21b7e2814983820047a9351d1a8d</RootNamespace><AssemblyName>SC_A0B7E866010E46149E33E8985E47A700</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="CsvHelper, Version=30.0.0.0, Culture=neutral, PublicKeyToken=8c4959082be5c823, processorArchitecture=MSIL"><HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\Vstab0gGcwMDd0e3RgbcCCYGYg\packages\CsvHelper.30.0.1\lib\net47\CsvHelper.dll</HintPath></Reference><Reference Include="Microsoft.Bcl.AsyncInterfaces, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL"><HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\Vstab0gGcwMDd0e3RgbcCCYGYg\packages\Microsoft.Bcl.AsyncInterfaces.1.0.0\lib\net461\Microsoft.Bcl.AsyncInterfaces.dll</HintPath></Reference><Reference Include="Microsoft.Bcl.HashCode, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL"><HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstakmqZthJmpkiI5idHB__iazA\packages\Microsoft.Bcl.HashCode.1.1.1\lib\net461\Microsoft.Bcl.HashCode.dll</HintPath></Reference><Reference Include="Microsoft.CSharp" /><Reference Include="netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51" /><Reference Include="ProjNET, Version=2.0.0.0, Culture=neutral, PublicKeyToken=a1f5bdcd9c6f5740, processorArchitecture=MSIL"><HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstawM8P8Qs04USj__Dzjh4P1lw\packages\ProjNET.2.0.0\lib\netstandard2.0\ProjNET.dll</HintPath></Reference><Reference Include="System" /><Reference Include="System.Buffers, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL"><HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstawM8P8Qs04USj__Dzjh4P1lw\packages\System.Buffers.4.5.1\lib\net461\System.Buffers.dll</HintPath></Reference><Reference Include="System.Data" /><Reference Include="System.Device" /><Reference Include="System.Memory, Version=4.0.1.2, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL"><HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstawM8P8Qs04USj__Dzjh4P1lw\packages\System.Memory.4.5.5\lib\net461\System.Memory.dll</HintPath></Reference><Reference Include="System.Numerics" /><Reference Include="System.Numerics.Vectors, Version=4.1.3.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL"><HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstawM8P8Qs04USj__Dzjh4P1lw\packages\System.Numerics.Vectors.4.5.0\lib\net46\System.Numerics.Vectors.dll</HintPath><Private>True</Private></Reference><Reference Include="System.Runtime.CompilerServices.Unsafe, Version=4.0.4.1, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL"><HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstawM8P8Qs04USj__Dzjh4P1lw\packages\System.Runtime.CompilerServices.Unsafe.4.5.3\lib\net461\System.Runtime.CompilerServices.Unsafe.dll</HintPath></Reference><Reference Include="System.Threading.Tasks.Extensions, Version=4.2.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL"><HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\Vstab0gGcwMDd0e3RgbcCCYGYg\packages\System.Threading.Tasks.Extensions.4.5.2\lib\netstandard2.0\System.Threading.Tasks.Extensions.dll</HintPath></Reference><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Compile Include="main.cs" /><Compile Include="BufferWrapper.cs" /><Compile Include="ComponentWrapper.cs" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="app.config" /><None Include="packages.config" /><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><!-- This section defines VSTA properties that describe the host-changable project properties. --><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptComponent" IconIndex="0" /><ProjectClient><HostIdentifier>SSIS_SC160</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[app.config]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Runtime.CompilerServices.Unsafe" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.4.1" newVersion="4.0.4.1" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Microsoft.Bcl.HashCode" version="1.0.0" targetFramework="net472" />
</packages>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4b3e21b7e2814983820047a9351d1a8d.Properties.Settings.get_Default():SC_4b3e21b7e2814983820047a9351d1a8d.Properties.Sett" +
    "ings")]

namespace SC_4b3e21b7e2814983820047a9351d1a8d.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Project]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_4b3e21b7e2814983820047a9351d1a8d</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_4b3e21b7e2814983820047a9351d1a8d</msb:DisplayName>
    <msb:ProjectId>{7B4B19DC-8268-4800-B862-FE3D2758D4C3}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_4b3e21b7e2814983820047a9351d1a8d.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="app.config" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="packages.config" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_4b3e21b7e2814983820047a9351d1a8d")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_4b3e21b7e2814983820047a9351d1a8d")]
[assembly: AssemblyCopyright("Copyright @ HP 2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                        <arrayElement
                          dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4b3e21b7e2814983820047a9351d1a8d.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4b3e21b7e2814983820047a9351d1a8d.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4b3e21b7e2814983820047a9351d1a8d.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_4b3e21b7e2814983820047a9351d1a8d.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_4b3e21b7e2814983820047a9351d1a8d.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                      </arrayElements>
                    </property>
                    <property
                      dataType="System.String"
                      description="Stores the binary representation of the component"
                      isArray="true"
                      name="BinaryCode"
                      state="cdata">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                      name="VSTAProjectName"
                      typeConverter="NOTBROWSABLE">SC_a0b7e866010e46149e33e8985e47a700</property>
                    <property
                      dataType="System.String"
                      description="Specifies the programming language used by the script."
                      name="ScriptLanguage"
                      typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read-only variables."
                      name="ReadOnlyVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::GeolifeFilePath</property>
                    <property
                      dataType="System.String"
                      description="Specifies a comma-separated list of read/write variables."
                      name="ReadWriteVariables"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                    <property
                      dataType="System.String"
                      description="List of breakpoints present on the script."
                      isArray="true"
                      name="BreakpointCollection"
                      typeConverter="NOTBROWSABLE">
                      <arrayElements
                        arrayElementCount="0" />
                    </property>
                    <property
                      dataType="System.String"
                      description="Checksum to match component metedata against compiled codes."
                      name="MetadataChecksum140"
                      typeConverter="NOTBROWSABLE">29</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
                  </properties>
                  <outputs>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0]"
                      hasSideEffects="true"
                      name="Output 0">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[Length]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[Length]"
                          name="Length" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[Duration]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[Duration]"
                          name="Duration" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[AverageSpeed]"
                          dataType="decimal"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[AverageSpeed]"
                          name="AverageSpeed" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[EndDate]"
                          dataType="date"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[EndDate]"
                          name="EndDate" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[StartDate]"
                          dataType="date"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[StartDate]"
                          name="StartDate" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[TrajectoryId]"
                          codePage="1250"
                          dataType="str"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[TrajectoryId]"
                          name="TrajectoryId" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination"
                  componentClassID="Microsoft.ManagedComponentHost"
                  contactInfo="KingswaySoft Inc.; http://www.kingswaysoft.com; support@kingswaysoft.com; Copyright (c) 2021 KingswaySoft Inc."
                  description="Write data to a MongoDB database."
                  name="MongoDB Destination"
                  usesDispositions="true"
                  validateExternalMetadata="False"
                  version="3">
                  <properties>
                    <property
                      dataType="System.String"
                      name="Design">[{"NodeType":2,"SourceType":"Input","InputOrColumnName":"Root","Children":[{"NodeName":"IdInFile","NodeType":3,"SourceType":"Column","InputOrColumnName":"IdInFile"},{"NodeName":"StartDate","NodeType":3,"SourceType":"Column","InputOrColumnName":"StartDate"},{"NodeName":"EndDate","NodeType":3,"SourceType":"Column","InputOrColumnName":"EndDate"},{"NodeName":"AverageSpeed","NodeType":3,"SourceType":"Column","InputOrColumnName":"AverageSpeed"},{"NodeName":"Duration","NodeType":3,"SourceType":"Column","InputOrColumnName":"Duration"},{"NodeName":"Length","NodeType":3,"SourceType":"Column","InputOrColumnName":"Length"},{"NodeName":"city","NodeType":3,"SourceType":"Column","InputOrColumnName":"city"},{"NodeName":"Weather","NodeType":2,"SourceType":"None","Children":[{"NodeName":"Temperature","NodeType":3,"SourceType":"Column","InputOrColumnName":"Temperature"},{"NodeName":"Precipitation","NodeType":3,"SourceType":"Column","InputOrColumnName":"Precipitation"}]},{"NodeName":"FuelPrice","NodeType":2,"SourceType":"None","Children":[{"NodeName":"GasolinePrice","NodeType":3,"SourceType":"Column","InputOrColumnName":"GasolinePrice"},{"NodeName":"DieselPrice","NodeType":3,"SourceType":"Column","InputOrColumnName":"DieselPrice"}]},{"NodeName":"CountryPopulation","NodeType":2,"SourceType":"None","Children":[{"NodeName":"Total","NodeType":3,"SourceType":"Column","InputOrColumnName":"Total"},{"NodeName":"MalePercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"MalePercentage"},{"NodeName":"FemalePercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"FemalePercentage"},{"NodeName":"Density","NodeType":3,"SourceType":"Column","InputOrColumnName":"Density"},{"NodeName":"UrbanPercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"UrbanPercentage"},{"NodeName":"RuralPercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"RuralPercentage"},{"NodeName":"Age0-14Percentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"Age0-14Percentage"},{"NodeName":"Age15-64Percentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"Age15-64Percentage"},{"NodeName":"Age65+Percentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"Age65+Percentage"},{"NodeName":"MortalityInRoadTrafficPer100000","NodeType":3,"SourceType":"Column","InputOrColumnName":"MortalityInRoadTrafficPer100000"}]},{"NodeName":"Economic","NodeType":2,"SourceType":"None","Children":[{"NodeName":"GDPPerCapitaConstantLCU","NodeType":3,"SourceType":"Column","InputOrColumnName":"GDPPerCapitaConstantLCU"},{"NodeName":"GDPPerCapitaCurrentLCU","NodeType":3,"SourceType":"Column","InputOrColumnName":"GDPPerCapitaCurrentLCU"},{"NodeName":"Inflation","NodeType":3,"SourceType":"Column","InputOrColumnName":"Inflation"},{"NodeName":"UneploymentNationalEstimate","NodeType":3,"SourceType":"Column","InputOrColumnName":"UneploymentNationalEstimate"},{"NodeName":"UneploymentModeledILOEstimate","NodeType":3,"SourceType":"Column","InputOrColumnName":"UneploymentModeledILOEstimate"},{"NodeName":"DeparturesInInternationalTourism","NodeType":3,"SourceType":"Column","InputOrColumnName":"DeparturesInInternationalTourism"},{"NodeName":"ArrivalsInInternationalTourism","NodeType":3,"SourceType":"Column","InputOrColumnName":"ArrivalsInInternationalTourism"},{"NodeName":"PrivateInvestmentsInTransport","NodeType":3,"SourceType":"Column","InputOrColumnName":"PrivateInvestmentsInTransport"}]},{"NodeName":"Emissions","NodeType":2,"SourceType":"None","Children":[{"NodeName":"CO2EmissionsFromTransportPercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"CO2EmissionsFromTransportPercentage"},{"NodeName":"CO2EmissionsFromGaseousFuelConsumptionPercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"CO2EmissionsFromGaseousFuelConsumptionPercentage"}]},{"NodeName":"Points","NodeType":1,"SourceType":"Input","InputOrColumnName":"Points","Children":[{"NodeType":2,"SourceType":"None","Children":[{"NodeName":"Latitude","NodeType":3,"SourceType":"Column","InputOrColumnName":"Latitude"},{"NodeName":"Longitude","NodeType":3,"SourceType":"Column","InputOrColumnName":"Longitude"},{"NodeName":"Timestamp","NodeType":3,"SourceType":"Column","InputOrColumnName":"Timestamp"},{"NodeName":"Region","NodeType":2,"SourceType":"None","Children":[{"NodeName":"Name","NodeType":3,"SourceType":"Column","InputOrColumnName":"Name"},{"NodeName":"Area","NodeType":3,"SourceType":"Column","InputOrColumnName":"Area"},{"NodeName":"Population","NodeType":3,"SourceType":"Column","InputOrColumnName":"Population"},{"NodeName":"Density","NodeType":3,"SourceType":"Column","InputOrColumnName":"Density"}]}]}]}]}]</property>
                    <property
                      dataType="System.Boolean"
                      description="Specifies if the linkId &amp; parentLinkId values used for merging child &amp; parent inputs are scrambled (true) or grouped (false)."
                      expressionType="Notify"
                      name="LinkIdsAreScrambled">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how to write null values in the merged document."
                      expressionType="Notify"
                      name="NullMode"
                      typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.JsonMergeNullMode">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how to write empty arrays in the merged document."
                      expressionType="Notify"
                      name="EmptyArrayMode"
                      typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.JsonEmptyArrayMode">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how to write empty objects in the merged document."
                      expressionType="Notify"
                      name="EmptyObjectMode"
                      typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.JsonEmptyObjectMode">1</property>
                    <property
                      dataType="System.String"
                      description="Specifies the text qualifier to use when splitting values to be repeated in the final document."
                      expressionType="Notify"
                      name="IsRepeatedTextQualifier">Double-Quote ( " )</property>
                    <property
                      dataType="System.String"
                      description="Specifies the text qualifier to use when splitting values to be repeated in the final document."
                      expressionType="Notify"
                      name="IsRepeatedTextDelimiter">Comma ( , )</property>
                    <property
                      dataType="System.String"
                      description="The MongoDB Database to write to."
                      expressionType="Notify"
                      name="Database">Trajectories</property>
                    <property
                      dataType="System.String"
                      description="The MongoDB Collection to write to."
                      expressionType="Notify"
                      name="Collection">Trajectory</property>
                    <property
                      dataType="System.Int32"
                      description="Time Zone."
                      expressionType="Notify"
                      name="InputTimezone"
                      typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.TimeZone">2</property>
                    <property
                      dataType="System.Int32"
                      description="The action to perform when writing to MongoDB."
                      expressionType="Notify"
                      name="Action"
                      typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.MongoDbAction">2</property>
                    <property
                      dataType="System.Int32"
                      description="The number of documents to send at a time. Only applies to Insert action."
                      expressionType="Notify"
                      name="BatchSize">1000</property>
                    <property
                      dataType="System.Int32"
                      description="The maximum number of operations that can be performed at a time. Specify 1 for no concurrency. Specify 0 for unlimited concurrent operations, although this may exceed thread pool limits."
                      expressionType="Notify"
                      name="MaxDegreeOfParallelism">1</property>
                    <property
                      dataType="System.Boolean"
                      description="Specifies to send documents as raw text from a DT_NTEXT column."
                      name="InputAsRawText">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how to match target documents for Update/Replace/Delete actions."
                      expressionType="Notify"
                      name="MatchByMode"
                      typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.MongoDbMatchByMode">0</property>
                    <property
                      dataType="System.String"
                      description="They query to use for matching documents for Update/Replace/Delete actions when 'Match By Mode' is 'Construct Query'"
                      expressionType="Notify"
                      name="MatchByQuery"></property>
                    <property
                      dataType="System.Boolean"
                      description="Specifies if only one document should be Updated/Replaced/Deleted or if all matched documents should."
                      expressionType="Notify"
                      name="LimitMatchesToOne">false</property>
                    <property
                      dataType="System.Boolean"
                      description="When matches yield no results, the record is inserted."
                      expressionType="Notify"
                      name="UseUpsert">true</property>
                    <property
                      dataType="System.String"
                      name="UserComponentTypeName">KingswaySoft.IntegrationToolkit.ProductivityPack.MongoDbDestinationComponent</property>
                    <property
                      dataType="System.Int32"
                      name="Encoding">65001</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Connections[MongoDB (KingswaySoft)]"
                      connectionManagerID="Package.ConnectionManagers[MongoDB Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[MongoDB Connection Manager]"
                      description="MongoDB Connection Manager"
                      name="MongoDB (KingswaySoft)" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="RedirectRow"
                      hasSideEffects="true"
                      name="Root">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="ParentId"
                          name="ParentId">#{Package\Foreach Geolife file\Data Flow Task\-1:invalid}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="ParentColumnId"
                          name="ParentColumnId">#{Package\Foreach Geolife file\Data Flow Task\-1:invalid}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="IdField"
                          name="IdField">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[_LinkId]}</property>
                      </properties>
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[Duration]"
                          cachedDataType="decimal"
                          cachedName="Duration"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[Duration]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[Duration]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Duration]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Duration]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[AverageSpeed]"
                          cachedDataType="decimal"
                          cachedName="AverageSpeed"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[AverageSpeed]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[AverageSpeed]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[AverageSpeed]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[AverageSpeed]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[EndDate]"
                          cachedDataType="date"
                          cachedName="EndDate"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[EndDate]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[EndDate]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[EndDate]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[EndDate]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[TrajectoryId]"
                          cachedCodepage="1250"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="TrajectoryId"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[_LinkId]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[TrajectoryId]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[TrajectoryId]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[TrajectoryId]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[City]"
                          cachedDataType="wstr"
                          cachedLength="7"
                          cachedName="City"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[city]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\IdInFile and city columns.Outputs[Derived Column Output].Columns[City]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[City]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[City]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[DieselPrice]"
                          cachedDataType="decimal"
                          cachedName="DieselPrice"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[DieselPrice]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add fuel prices.Outputs[Output 0].Columns[DieselPrice]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[DieselPrice]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[DieselPrice]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[GasolinePrice]"
                          cachedDataType="decimal"
                          cachedName="GasolinePrice"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[GasolinePrice]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add fuel prices.Outputs[Output 0].Columns[GasolinePrice]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GasolinePrice]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GasolinePrice]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[ArrivalsInInternationalTourism]"
                          cachedDataType="i4"
                          cachedName="ArrivalsInInternationalTourism"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[ArrivalsInInternationalTourism]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[ArrivalsInInternationalTourism]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ArrivalsInInternationalTourism]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[ArrivalsInInternationalTourism]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[DeparturesInInternationalTourism]"
                          cachedDataType="i4"
                          cachedName="DeparturesInInternationalTourism"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[DeparturesInInternationalTourism]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[DeparturesInInternationalTourism]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[DeparturesInInternationalTourism]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[DeparturesInInternationalTourism]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[GDPPerCapitaCurrentLCU]"
                          cachedDataType="decimal"
                          cachedName="GDPPerCapitaCurrentLCU"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[GDPPerCapitaCurrentLCU]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[GDPPerCapitaCurrentLCU]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GDPPerCapitaCurrentLCU]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GDPPerCapitaCurrentLCU]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[GDPPerCapitaConstantLCU]"
                          cachedDataType="decimal"
                          cachedName="GDPPerCapitaConstantLCU"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[GDPPerCapitaConstantLCU]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[GDPPerCapitaConstantLCU]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GDPPerCapitaConstantLCU]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GDPPerCapitaConstantLCU]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[Age65+Percentage]"
                          cachedDataType="decimal"
                          cachedName="Age65+Percentage"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[Age65+Percentage]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[Age65+Percentage]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age65+Percentage]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age65+Percentage]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[Age15-64Percentage]"
                          cachedDataType="decimal"
                          cachedName="Age15-64Percentage"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[Age15-64Percentage]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[Age15-64Percentage]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age15-64Percentage]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age15-64Percentage]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[Age0-14Percentage]"
                          cachedDataType="decimal"
                          cachedName="Age0-14Percentage"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[Age0-14Percentage]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[Age0-14Percentage]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age0-14Percentage]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age0-14Percentage]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[CountryDensity]"
                          cachedDataType="decimal"
                          cachedName="CountryDensity"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[Density]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[CountryDensity]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CountryDensity]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CountryDensity]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[FemalePercentage]"
                          cachedDataType="decimal"
                          cachedName="FemalePercentage"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[FemalePercentage]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[FemalePercentage]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[FemalePercentage]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[FemalePercentage]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[TotalPopulation]"
                          cachedDataType="i4"
                          cachedName="TotalPopulation"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[Total]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[TotalPopulation]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[TotalPopulation]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[TotalPopulation]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                          cachedDataType="decimal"
                          cachedName="CO2EmissionsFromGaseousFuelConsumptionPercentage"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[CO2EmissionsFromTransportPercentage]"
                          cachedDataType="decimal"
                          cachedName="CO2EmissionsFromTransportPercentage"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[CO2EmissionsFromTransportPercentage]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[CO2EmissionsFromTransportPercentage]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CO2EmissionsFromTransportPercentage]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CO2EmissionsFromTransportPercentage]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[IdInFile]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="IdInFile"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[IdInFile]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\IdInFile and city columns.Outputs[Derived Column Output].Columns[IdInFile]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[IdInFile]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[IdInFile]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[Inflation]"
                          cachedDataType="decimal"
                          cachedName="Inflation"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[Inflation]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[Inflation]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Inflation]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Inflation]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[Length]"
                          cachedDataType="decimal"
                          cachedName="Length"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[Length]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[Length]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Length]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Length]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[MalePercentage]"
                          cachedDataType="decimal"
                          cachedName="MalePercentage"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[MalePercentage]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[MalePercentage]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[MalePercentage]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[MalePercentage]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[MortalityInRoadTrafficPer100000]"
                          cachedDataType="decimal"
                          cachedName="MortalityInRoadTrafficPer100000"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[MortalityInRoadTrafficPer100000]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[MortalityInRoadTrafficPer100000]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[MortalityInRoadTrafficPer100000]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[MortalityInRoadTrafficPer100000]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[Precipitation]"
                          cachedDataType="decimal"
                          cachedName="Precipitation"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[Precipitation]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add weather.Outputs[Output 0].Columns[Precipitation]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Precipitation]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Precipitation]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[PrivateInvestmentsInTransport]"
                          cachedDataType="ui8"
                          cachedName="PrivateInvestmentsInTransport"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[PrivateInvestmentsInTransport]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[PrivateInvestmentsInTransport]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[PrivateInvestmentsInTransport]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[PrivateInvestmentsInTransport]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[RuralPercentage]"
                          cachedDataType="decimal"
                          cachedName="RuralPercentage"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[RuralPercentage]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[RuralPercentage]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[RuralPercentage]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[RuralPercentage]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[Temperature]"
                          cachedDataType="decimal"
                          cachedName="Temperature"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[Temperature]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add weather.Outputs[Output 0].Columns[Temperature]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Temperature]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Temperature]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[StartDate]"
                          cachedDataType="date"
                          cachedName="StartDate"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[StartDate]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0].Columns[StartDate]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[StartDate]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[StartDate]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[UneploymentModeledILOEstimate]"
                          cachedDataType="decimal"
                          cachedName="UneploymentModeledILOEstimate"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[UneploymentModeledILOEstimate]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[UneploymentModeledILOEstimate]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UneploymentModeledILOEstimate]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UneploymentModeledILOEstimate]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[UneploymentNationalEstimate]"
                          cachedDataType="decimal"
                          cachedName="UneploymentNationalEstimate"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[UneploymentNationalEstimate]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[UneploymentNationalEstimate]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UneploymentNationalEstimate]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UneploymentNationalEstimate]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].Columns[UrbanPercentage]"
                          cachedDataType="decimal"
                          cachedName="UrbanPercentage"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[UrbanPercentage]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0].Columns[UrbanPercentage]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous error output column of this input column."
                              name="AsyncErrorOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UrbanPercentage]}</property>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="The asynchronous default output column of this input column."
                              name="AsyncDefaultOutputColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UrbanPercentage]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[_LinkId]"
                          dataType="wstr"
                          length="255"
                          name="_LinkId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[IdInFile]"
                          dataType="wstr"
                          length="50"
                          name="IdInFile">
                          <properties>
                            <property
                              dataType="System.Boolean"
                              name="IsMatchingField">true</property>
                          </properties>
                        </externalMetadataColumn>
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[StartDate]"
                          dataType="dbTimeStamp"
                          name="StartDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[EndDate]"
                          dataType="dbTimeStamp"
                          name="EndDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[AverageSpeed]"
                          dataType="decimal"
                          name="AverageSpeed" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[Duration]"
                          dataType="decimal"
                          name="Duration" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[Length]"
                          dataType="decimal"
                          name="Length" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[city]"
                          dataType="wstr"
                          length="50"
                          name="city" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[Temperature]"
                          dataType="decimal"
                          name="Temperature" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[Precipitation]"
                          dataType="decimal"
                          name="Precipitation" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[GasolinePrice]"
                          dataType="decimal"
                          name="GasolinePrice" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[DieselPrice]"
                          dataType="decimal"
                          name="DieselPrice" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[Total]"
                          dataType="i8"
                          name="Total" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[MalePercentage]"
                          dataType="decimal"
                          name="MalePercentage" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[FemalePercentage]"
                          dataType="decimal"
                          name="FemalePercentage" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[Density]"
                          dataType="decimal"
                          name="Density" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[UrbanPercentage]"
                          dataType="decimal"
                          name="UrbanPercentage" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[RuralPercentage]"
                          dataType="decimal"
                          name="RuralPercentage" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[Age0-14Percentage]"
                          dataType="decimal"
                          name="Age0-14Percentage" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[Age15-64Percentage]"
                          dataType="decimal"
                          name="Age15-64Percentage" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[Age65+Percentage]"
                          dataType="decimal"
                          name="Age65+Percentage" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[MortalityInRoadTrafficPer100000]"
                          dataType="decimal"
                          name="MortalityInRoadTrafficPer100000" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[GDPPerCapitaConstantLCU]"
                          dataType="decimal"
                          name="GDPPerCapitaConstantLCU" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[GDPPerCapitaCurrentLCU]"
                          dataType="decimal"
                          name="GDPPerCapitaCurrentLCU" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[Inflation]"
                          dataType="decimal"
                          name="Inflation" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[UneploymentNationalEstimate]"
                          dataType="decimal"
                          name="UneploymentNationalEstimate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[UneploymentModeledILOEstimate]"
                          dataType="decimal"
                          name="UneploymentModeledILOEstimate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[DeparturesInInternationalTourism]"
                          dataType="i8"
                          name="DeparturesInInternationalTourism" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[ArrivalsInInternationalTourism]"
                          dataType="i8"
                          name="ArrivalsInInternationalTourism" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[PrivateInvestmentsInTransport]"
                          dataType="i8"
                          name="PrivateInvestmentsInTransport" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[CO2EmissionsFromTransportPercentage]"
                          dataType="decimal"
                          name="CO2EmissionsFromTransportPercentage" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root].ExternalColumns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                          dataType="decimal"
                          name="CO2EmissionsFromGaseousFuelConsumptionPercentage" />
                      </externalMetadataColumns>
                    </input>
                    <input
                      refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Points">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="ParentId"
                          name="ParentId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="ParentColumnId"
                          name="ParentColumnId">#{Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points].ExternalColumns[_Root.LinkId]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="IdField"
                          name="IdField">#{Package\Foreach Geolife file\Data Flow Task\-1:invalid}</property>
                      </properties>
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points].Columns[Date]"
                          cachedCodepage="1250"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Date"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Date]" />
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points].Columns[Time]"
                          cachedCodepage="1250"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="Time"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Time]" />
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points].Columns[Datetime]"
                          cachedDataType="date"
                          cachedName="Datetime"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points].ExternalColumns[Timestamp]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Create datetime.Outputs[Output 0].Columns[Datetime]" />
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points].Columns[TrajectoryId]"
                          cachedCodepage="1250"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="TrajectoryId"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points].ExternalColumns[_Root.LinkId]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Create datetime.Outputs[Output 0].Columns[TrajectoryId]" />
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points].Columns[RegionArea]"
                          cachedDataType="decimal"
                          cachedName="RegionArea"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points].ExternalColumns[Area]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add region.Outputs[Output 0].Columns[RegionArea]" />
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points].Columns[RegionName]"
                          cachedCodepage="1250"
                          cachedDataType="str"
                          cachedLength="50"
                          cachedName="RegionName"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points].ExternalColumns[Name]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add region.Outputs[Output 0].Columns[RegionName]" />
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points].Columns[RegionPopulation]"
                          cachedDataType="i4"
                          cachedName="RegionPopulation"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points].ExternalColumns[Population]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add region.Outputs[Output 0].Columns[RegionPopulation]" />
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points].Columns[Latitude]"
                          cachedDataType="decimal"
                          cachedName="Latitude"
                          cachedScale="10"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points].ExternalColumns[Latitude]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Latitude]" />
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points].Columns[Longitude]"
                          cachedDataType="decimal"
                          cachedName="Longitude"
                          cachedScale="10"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points].ExternalColumns[Longitude]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output].Columns[Longitude]" />
                        <inputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points].Columns[RegionDensity]"
                          cachedDataType="decimal"
                          cachedName="RegionDensity"
                          externalMetadataColumnId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points].ExternalColumns[Density]"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\Add region.Outputs[Output 0].Columns[RegionDensity]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points].ExternalColumns[_Root.LinkId]"
                          dataType="wstr"
                          length="255"
                          name="_Root.LinkId" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points].ExternalColumns[Latitude]"
                          dataType="decimal"
                          name="Latitude" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points].ExternalColumns[Longitude]"
                          dataType="decimal"
                          name="Longitude" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points].ExternalColumns[Timestamp]"
                          dataType="dbTimeStamp"
                          name="Timestamp" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points].ExternalColumns[Name]"
                          dataType="wstr"
                          length="50"
                          name="Name" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points].ExternalColumns[Area]"
                          dataType="decimal"
                          name="Area" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points].ExternalColumns[Population]"
                          dataType="i8"
                          name="Population" />
                        <externalMetadataColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points].ExternalColumns[Density]"
                          dataType="decimal"
                          name="Density" />
                      </externalMetadataColumns>
                    </input>
                    <input
                      refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[&lt;Create New Input&gt;]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="&lt;Create New Input&gt;">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="ParentId"
                          name="ParentId">-1</property>
                        <property
                          dataType="System.Int32"
                          description="ParentColumnId"
                          name="ParentColumnId">-1</property>
                        <property
                          dataType="System.Int32"
                          description="IdField"
                          name="IdField">-1</property>
                      </properties>
                      <externalMetadataColumns
                        isUsed="True" />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)]"
                      isErrorOut="true"
                      name="Error Output (Load Geolife trajectories)">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ErrorMessage]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Duration]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Duration]"
                          name="Duration"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[AverageSpeed]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[AverageSpeed]"
                          name="AverageSpeed"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[EndDate]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[EndDate]"
                          name="EndDate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[TrajectoryId]"
                          codePage="1250"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[TrajectoryId]"
                          name="TrajectoryId"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[City]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="7"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[City]"
                          name="City"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[DieselPrice]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[DieselPrice]"
                          name="DieselPrice"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GasolinePrice]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GasolinePrice]"
                          name="GasolinePrice"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ArrivalsInInternationalTourism]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ArrivalsInInternationalTourism]"
                          name="ArrivalsInInternationalTourism"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[DeparturesInInternationalTourism]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[DeparturesInInternationalTourism]"
                          name="DeparturesInInternationalTourism"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GDPPerCapitaCurrentLCU]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GDPPerCapitaCurrentLCU]"
                          name="GDPPerCapitaCurrentLCU"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GDPPerCapitaConstantLCU]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GDPPerCapitaConstantLCU]"
                          name="GDPPerCapitaConstantLCU"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age65+Percentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age65+Percentage]"
                          name="Age65+Percentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age15-64Percentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age15-64Percentage]"
                          name="Age15-64Percentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age0-14Percentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age0-14Percentage]"
                          name="Age0-14Percentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CountryDensity]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CountryDensity]"
                          name="CountryDensity"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[FemalePercentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[FemalePercentage]"
                          name="FemalePercentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[TotalPopulation]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[TotalPopulation]"
                          name="TotalPopulation"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                          name="CO2EmissionsFromGaseousFuelConsumptionPercentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CO2EmissionsFromTransportPercentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CO2EmissionsFromTransportPercentage]"
                          name="CO2EmissionsFromTransportPercentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[IdInFile]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[IdInFile]"
                          name="IdInFile"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Inflation]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Inflation]"
                          name="Inflation"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Length]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Length]"
                          name="Length"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[MalePercentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[MalePercentage]"
                          name="MalePercentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[MortalityInRoadTrafficPer100000]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[MortalityInRoadTrafficPer100000]"
                          name="MortalityInRoadTrafficPer100000"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Precipitation]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Precipitation]"
                          name="Precipitation"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[PrivateInvestmentsInTransport]"
                          dataType="ui8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[PrivateInvestmentsInTransport]"
                          name="PrivateInvestmentsInTransport"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[RuralPercentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[RuralPercentage]"
                          name="RuralPercentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Temperature]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Temperature]"
                          name="Temperature"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[StartDate]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[StartDate]"
                          name="StartDate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UneploymentModeledILOEstimate]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UneploymentModeledILOEstimate]"
                          name="UneploymentModeledILOEstimate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UneploymentNationalEstimate]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UneploymentNationalEstimate]"
                          name="UneploymentNationalEstimate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UrbanPercentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UrbanPercentage]"
                          name="UrbanPercentage"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)]"
                      name="Default Output (Load Geolife trajectories)">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Duration]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Duration]"
                          name="Duration"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[AverageSpeed]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[AverageSpeed]"
                          name="AverageSpeed"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[EndDate]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[EndDate]"
                          name="EndDate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[TrajectoryId]"
                          codePage="1250"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[TrajectoryId]"
                          name="TrajectoryId"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[City]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="7"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[City]"
                          name="City"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[DieselPrice]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[DieselPrice]"
                          name="DieselPrice"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GasolinePrice]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GasolinePrice]"
                          name="GasolinePrice"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[ArrivalsInInternationalTourism]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[ArrivalsInInternationalTourism]"
                          name="ArrivalsInInternationalTourism"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[DeparturesInInternationalTourism]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[DeparturesInInternationalTourism]"
                          name="DeparturesInInternationalTourism"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GDPPerCapitaCurrentLCU]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GDPPerCapitaCurrentLCU]"
                          name="GDPPerCapitaCurrentLCU"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GDPPerCapitaConstantLCU]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GDPPerCapitaConstantLCU]"
                          name="GDPPerCapitaConstantLCU"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age65+Percentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age65+Percentage]"
                          name="Age65+Percentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age15-64Percentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age15-64Percentage]"
                          name="Age15-64Percentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age0-14Percentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age0-14Percentage]"
                          name="Age0-14Percentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CountryDensity]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CountryDensity]"
                          name="CountryDensity"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[FemalePercentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[FemalePercentage]"
                          name="FemalePercentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[TotalPopulation]"
                          dataType="i4"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[TotalPopulation]"
                          name="TotalPopulation"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                          name="CO2EmissionsFromGaseousFuelConsumptionPercentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CO2EmissionsFromTransportPercentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CO2EmissionsFromTransportPercentage]"
                          name="CO2EmissionsFromTransportPercentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[IdInFile]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="50"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[IdInFile]"
                          name="IdInFile"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Inflation]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Inflation]"
                          name="Inflation"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Length]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Length]"
                          name="Length"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[MalePercentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[MalePercentage]"
                          name="MalePercentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[MortalityInRoadTrafficPer100000]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[MortalityInRoadTrafficPer100000]"
                          name="MortalityInRoadTrafficPer100000"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Precipitation]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Precipitation]"
                          name="Precipitation"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[PrivateInvestmentsInTransport]"
                          dataType="ui8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[PrivateInvestmentsInTransport]"
                          name="PrivateInvestmentsInTransport"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[RuralPercentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[RuralPercentage]"
                          name="RuralPercentage"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Temperature]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Temperature]"
                          name="Temperature"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[StartDate]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[StartDate]"
                          name="StartDate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UneploymentModeledILOEstimate]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UneploymentModeledILOEstimate]"
                          name="UneploymentModeledILOEstimate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UneploymentNationalEstimate]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UneploymentNationalEstimate]"
                          name="UneploymentNationalEstimate"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UrbanPercentage]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UrbanPercentage]"
                          name="UrbanPercentage"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Orphaned Children Error Output]"
                      isErrorOut="true"
                      name="Orphaned Children Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Input Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Input Name]"
                          name="Input Name" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Column Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Column Name]"
                          name="Column Name" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Column Value]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Column Value]"
                          name="Column Value" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Parent Input Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Parent Input Name]"
                          name="Parent Input Name" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Parent Column Name]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Parent Column Name]"
                          name="Parent Column Name" />
                        <outputColumn
                          refId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorMessage]"
                          dataType="wstr"
                          length="4000"
                          lineageId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorMessage]"
                          name="ErrorMessage" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Geolife file\Data Flow Task\Multicast"
                  componentClassID="Microsoft.Multicast"
                  contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                  name="Multicast">
                  <inputs>
                    <input
                      refId="Package\Foreach Geolife file\Data Flow Task\Multicast.Inputs[Multicast Input 1]"
                      name="Multicast Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Multicast.Outputs[Multicast Output 1]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 1"
                      synchronousInputId="Package\Foreach Geolife file\Data Flow Task\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Multicast.Outputs[Multicast Output 2]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 2"
                      synchronousInputId="Package\Foreach Geolife file\Data Flow Task\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Multicast.Outputs[Multicast Output 3]"
                      dangling="true"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 3"
                      synchronousInputId="Package\Foreach Geolife file\Data Flow Task\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Geolife file\Data Flow Task\Multicast 1"
                  componentClassID="Microsoft.Multicast"
                  contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                  name="Multicast 1">
                  <inputs>
                    <input
                      refId="Package\Foreach Geolife file\Data Flow Task\Multicast 1.Inputs[Multicast Input 1]"
                      name="Multicast Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Multicast 1.Outputs[Multicast Output 1]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 1"
                      synchronousInputId="Package\Foreach Geolife file\Data Flow Task\Multicast 1.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Multicast 1.Outputs[Multicast Output 3]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 3"
                      synchronousInputId="Package\Foreach Geolife file\Data Flow Task\Multicast 1.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Geolife file\Data Flow Task\Multicast 1.Outputs[Multicast Output 2]"
                      dangling="true"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 2"
                      synchronousInputId="Package\Foreach Geolife file\Data Flow Task\Multicast 1.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Geolife file\Data Flow Task.Paths[Beijing trajectories]"
                  endId="Package\Foreach Geolife file\Data Flow Task\Create datetime.Inputs[Input 0]"
                  name="Beijing trajectories"
                  startId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories.Outputs[Beijing trajectories]" />
                <path
                  refId="Package\Foreach Geolife file\Data Flow Task.Paths[Beijing trajectories1]"
                  endId="Package\Foreach Geolife file\Data Flow Task\Create datetime 1.Inputs[Input 0]"
                  name="Beijing trajectories"
                  startId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories 1.Outputs[Beijing trajectories]" />
                <path
                  refId="Package\Foreach Geolife file\Data Flow Task.Paths[Default Output1]"
                  endId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories 1.Inputs[Conditional Split Input]"
                  name="Default Output"
                  startId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Outputs[Default Output]" />
                <path
                  refId="Package\Foreach Geolife file\Data Flow Task.Paths[Default Output]"
                  endId="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories.Inputs[Conditional Split Input]"
                  name="Default Output"
                  startId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Outputs[Default Output]" />
                <path
                  refId="Package\Foreach Geolife file\Data Flow Task.Paths[Derived Column Output]"
                  endId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Root]"
                  name="Derived Column Output"
                  startId="Package\Foreach Geolife file\Data Flow Task\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Geolife file\Data Flow Task.Paths[Derived Column Output1]"
                  endId="Package\Foreach Geolife file\Data Flow Task\Add weather.Inputs[Input 0]"
                  name="Derived Column Output"
                  startId="Package\Foreach Geolife file\Data Flow Task\IdInFile and city columns.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Geolife file\Data Flow Task.Paths[Flat File Source Output]"
                  endId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal.Inputs[Primary Input]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Foreach Geolife file\Data Flow Task.Paths[Flat File Source Output1]"
                  endId="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1.Inputs[Primary Input]"
                  name="Flat File Source Output"
                  startId="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1.Outputs[Flat File Source Output]" />
                <path
                  refId="Package\Foreach Geolife file\Data Flow Task.Paths[Multicast Output 1]"
                  endId="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination.Inputs[Points]"
                  name="Multicast Output 1"
                  startId="Package\Foreach Geolife file\Data Flow Task\Multicast 1.Outputs[Multicast Output 1]" />
                <path
                  refId="Package\Foreach Geolife file\Data Flow Task.Paths[Multicast Output 11]"
                  endId="Package\Foreach Geolife file\Data Flow Task\Derived Column.Inputs[Derived Column Input]"
                  name="Multicast Output 1"
                  startId="Package\Foreach Geolife file\Data Flow Task\Multicast.Outputs[Multicast Output 1]" />
                <path
                  refId="Package\Foreach Geolife file\Data Flow Task.Paths[Multicast Output 2]"
                  endId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Root]"
                  name="Multicast Output 2"
                  startId="Package\Foreach Geolife file\Data Flow Task\Multicast.Outputs[Multicast Output 2]" />
                <path
                  refId="Package\Foreach Geolife file\Data Flow Task.Paths[Multicast Output 3]"
                  endId="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination.Inputs[Points]"
                  name="Multicast Output 3"
                  startId="Package\Foreach Geolife file\Data Flow Task\Multicast 1.Outputs[Multicast Output 3]" />
                <path
                  refId="Package\Foreach Geolife file\Data Flow Task.Paths[Output 0]"
                  endId="Package\Foreach Geolife file\Data Flow Task\Multicast.Inputs[Multicast Input 1]"
                  name="Output 0"
                  startId="Package\Foreach Geolife file\Data Flow Task\Add Context.Outputs[Output 0]" />
                <path
                  refId="Package\Foreach Geolife file\Data Flow Task.Paths[Output 01]"
                  endId="Package\Foreach Geolife file\Data Flow Task\Add Context.Inputs[Input 0]"
                  name="Output 0"
                  startId="Package\Foreach Geolife file\Data Flow Task\Add fuel prices.Outputs[Output 0]" />
                <path
                  refId="Package\Foreach Geolife file\Data Flow Task.Paths[Output 02]"
                  endId="Package\Foreach Geolife file\Data Flow Task\Multicast 1.Inputs[Multicast Input 1]"
                  name="Output 0"
                  startId="Package\Foreach Geolife file\Data Flow Task\Add region.Outputs[Output 0]" />
                <path
                  refId="Package\Foreach Geolife file\Data Flow Task.Paths[Output 03]"
                  endId="Package\Foreach Geolife file\Data Flow Task\Add region.Inputs[Input 0]"
                  name="Output 0"
                  startId="Package\Foreach Geolife file\Data Flow Task\Create datetime.Outputs[Output 0]" />
                <path
                  refId="Package\Foreach Geolife file\Data Flow Task.Paths[Output 04]"
                  endId="Package\Foreach Geolife file\Data Flow Task\Add fuel prices.Inputs[Input 0]"
                  name="Output 0"
                  startId="Package\Foreach Geolife file\Data Flow Task\Add weather.Outputs[Output 0]" />
                <path
                  refId="Package\Foreach Geolife file\Data Flow Task.Paths[Output 05]"
                  endId="Package\Foreach Geolife file\Data Flow Task\IdInFile and city columns.Inputs[Derived Column Input]"
                  name="Output 0"
                  startId="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories.Outputs[Output 0]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{2A2AC3A6-5293-4ACE-99B3-BCCCFCCC6E2D}"
          DTS:ObjectName="{2A2AC3A6-5293-4ACE-99B3-BCCCFCCC6E2D}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::GeolifeFilePath" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Geolife Data Flow"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{9B17A609-0FD9-40E8-81B7-56CC2E7B4EE3}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Geolife Data Flow"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Geolife Data Flow\Add Context"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Add Context"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Globalization;
using System.IO;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>

    List<ContextData> contextData = new List<ContextData>();
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        string filePath = "C:\\Users\\Rezerwowy\\Desktop\\Engineering Thesis\\Datasets\\Context_Data\\Context_Data_China_Germany.csv";
        using (StreamReader reader = new StreamReader(filePath))
        {
            string line;
            reader.ReadLine();
            while ((line = reader.ReadLine()) != null)
            {
                string[] fields = line.Split(';'); // Change the delimiter if needed

                if (fields[1] == "CHN")
                {
                    List<string> yearsdata = new List<string>
                    {
                        fields[4],
                        fields[5],
                        fields[6],
                        fields[7],
                        fields[8],
                        fields[9]
                    };

                    ContextData data = new ContextData()
                    {
                        SeriesCode = fields[3],
                        YearsData = yearsdata
                    };

                    contextData.Add(data);
                }
                
            }
        }
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        foreach (ContextData data in contextData)
        {
            if (data.YearsData[Row.StartDate.Year - 2007] != "..")
            {
                switch (data.SeriesCode)
                {
                    case "SH.STA.TRAF.P5":
                        Row.MortalityInRoadTrafficPer100000 = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "SP.POP.TOTL":
                        Row.TotalPopulation = int.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "EN.CO2.TRAN.ZS":
                        Row.CO2EmissionsFromTransportPercentage = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "EN.ATM.CO2E.GF.KT":
                        Row.CO2EmissionsFromGaseousFuelConsumptionPercentage = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "SP.POP.TOTL.MA.ZS":
                        Row.MalePercentage = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "SP.POP.TOTL.FE.ZS":
                        Row.FemalePercentage = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "EN.POP.DNST":
                        Row.CountryDensity = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "NY.GDP.PCAP.KN":
                        Row.GDPPerCapitaConstantLCU = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "NY.GDP.PCAP.CN":
                        Row.GDPPerCapitaCurrentLCU = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "SP.URB.TOTL.ZS":
                        Row.UrbanPercentage = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "SP.RUR.TOTL.ZS":
                        Row.RuralPercentage = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "FP.CPI.TOTL.ZG":
                        Row.Inflation = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "SP.POP.0014.ZS":
                        Row.Age014Percentage = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "SP.POP.1564.ZS":
                        Row.Age1564Percentage = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "SP.POP.65UP.ZS":
                        Row.Age65Percentage = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "IE.PPI.TRAN.CD":
                        Row.PrivateInvestmentsInTransport = ulong.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "ST.INT.DPRT":
                        Row.DeparturesInInternationalTourism = int.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "ST.INT.ARVL":
                        Row.ArrivalsInInternationalTourism = int.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "SL.UEM.TOTL.NE.ZS":
                        Row.UneploymentNationalEstimate = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                    case "SL.UEM.TOTL.ZS":
                        Row.UneploymentModeledILOEstimate = decimal.Parse(data.YearsData[Row.StartDate.Year - 2007], CultureInfo.GetCultureInfo("pl-PL"));
                        break;
                }
            }
        }
    }

    private class ContextData
    {
        public string SeriesCode { get; set;}

        public List<string> YearsData { get; set;}

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public DateTime StartDate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[0]);
        }
    }
    public bool StartDate_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 ArrivalsInInternationalTourism
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ArrivalsInInternationalTourism_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 DeparturesInInternationalTourism
    {
        set
        {
            this[2] = value;
        }
    }
    public bool DeparturesInInternationalTourism_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal UneploymentModeledILOEstimate
    {
        set
        {
            this[3] = value;
        }
    }
    public bool UneploymentModeledILOEstimate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal UneploymentNationalEstimate
    {
        set
        {
            this[4] = value;
        }
    }
    public bool UneploymentNationalEstimate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Inflation
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Inflation_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal GDPPerCapitaCurrentLCU
    {
        set
        {
            this[6] = value;
        }
    }
    public bool GDPPerCapitaCurrentLCU_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal GDPPerCapitaConstantLCU
    {
        set
        {
            this[7] = value;
        }
    }
    public bool GDPPerCapitaConstantLCU_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal MortalityInRoadTrafficPer100000
    {
        set
        {
            this[8] = value;
        }
    }
    public bool MortalityInRoadTrafficPer100000_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Age65Percentage
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Age65Percentage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Age1564Percentage
    {
        set
        {
            this[10] = value;
        }
    }
    public bool Age1564Percentage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Age014Percentage
    {
        set
        {
            this[11] = value;
        }
    }
    public bool Age014Percentage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal RuralPercentage
    {
        set
        {
            this[12] = value;
        }
    }
    public bool RuralPercentage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal UrbanPercentage
    {
        set
        {
            this[13] = value;
        }
    }
    public bool UrbanPercentage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal CountryDensity
    {
        set
        {
            this[14] = value;
        }
    }
    public bool CountryDensity_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal FemalePercentage
    {
        set
        {
            this[15] = value;
        }
    }
    public bool FemalePercentage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal MalePercentage
    {
        set
        {
            this[16] = value;
        }
    }
    public bool MalePercentage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TotalPopulation
    {
        set
        {
            this[17] = value;
        }
    }
    public bool TotalPopulation_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public UInt64 PrivateInvestmentsInTransport
    {
        set
        {
            this[18] = value;
        }
    }
    public bool PrivateInvestmentsInTransport_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal CO2EmissionsFromGaseousFuelConsumptionPercentage
    {
        set
        {
            this[19] = value;
        }
    }
    public bool CO2EmissionsFromGaseousFuelConsumptionPercentage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal CO2EmissionsFromTransportPercentage
    {
        set
        {
            this[20] = value;
        }
    }
    public bool CO2EmissionsFromTransportPercentage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4d0164e849cb4c3fa793f2207015a74d.Properties.Settings.get_Default():SC_4d0164e849cb4c3fa793f2207015a74d.Properties.Sett" +
    "ings")]

namespace SC_4d0164e849cb4c3fa793f2207015a74d.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_4d0164e849cb4c3fa793f2207015a74d</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_4d0164e849cb4c3fa793f2207015a74d</msb:DisplayName>
    <msb:ProjectId>{7DD04FB3-10E4-44EB-B592-D3C13D024233}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_4d0164e849cb4c3fa793f2207015a74d.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_4d0164e849cb4c3fa793f2207015a74d")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_4d0164e849cb4c3fa793f2207015a74d")]
[assembly: AssemblyCopyright("Copyright @ HP 2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_4d0164e849cb4c3fa793f2207015a74d.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{d31f6c43-9da9-4f9f-9795-60fad25321d6}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_4d0164e849cb4c3fa793f2207015a74d</RootNamespace>
    <AssemblyName>SC_9DB22DF88D054B4A961A503190592A8B</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_4d0164e849cb4c3fa793f2207015a74d" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4d0164e849cb4c3fa793f2207015a74d.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4d0164e849cb4c3fa793f2207015a74d.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4d0164e849cb4c3fa793f2207015a74d.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_4d0164e849cb4c3fa793f2207015a74d.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_4d0164e849cb4c3fa793f2207015a74d.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_9DB22DF88D054B4A961A503190592A8B.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAEKdbGUAAAAAAAAAAOAAIiALATAAAC4AAAAIAAAAAAAApk0A
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFRNAABPAAAAAGAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAArC0AAAAgAAAALgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAYAAAAAYAAAAwAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAANgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACI
TQAAAAAAAEgAAAACAAUAAC0AAJwfAAABAAAAAAAAAJxMAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBQC5AAAAAQAAEQIoEAAACnIBAABwcxEAAAoKBm8SAAAK
JjiCAAAABxeNIAAAASUWHzudbxMAAAoMCBeacsgAAHAoFAAACixhcxUAAAolCBqabxYAAAolCBua
bxYAAAolCByabxYAAAolCB2abxYAAAolCB6abxYAAAolCB8Jmm8WAAAKDXNDAAAGJQgZmm9AAAAG
JQlvQgAABhMEAnsBAAAEEQRvFwAACgZvEgAACiULOnH////eCgYsBgZvGAAACtwqAAAAARAAAAIA
EQCdrgAKAAAAAB4CKBkAAAoqGzAEAFQHAAACAAARAnsBAAAEbxoAAAoKOCYHAAASACgbAAAKCwdv
QQAABgNvBgAABgwSAigcAAAKINcHAABZbx0AAApy0AAAcCgeAAAKOfAGAAAHbz8AAAYNCTnjBgAA
CSgfAAAKEwQRBB8LLncRBB8OLg4RBB8RO5QAAAA4wQYAAAkbKCAAAAoTBREFH0I1IBEFHzI7ygAA
ABEFH0E7rAAAABEFH0I7IgEAADiSBgAAEQUfTTUXEQUfSTs4AQAAEQUfTTtUAQAAOHUGAAARBR9Q
O6IAAAARBR9SOwMBAAA4XgYAAAkeKCAAAAoTBREFH05ZRQUAAAA7AQAAJgEAAFABAAA3BgAAZQEA
ADgyBgAACR8MKCAAAAoTBREFH0c1FxEFH0Y7hgEAABEFH0c7UwEAADgLBgAAEQUfTTtaAQAAEQUf
Tjt7AQAAOPQFAAAJctYAAHAoFAAACjp7AQAAON8FAAAJcvQAAHAoFAAACjrYAQAAOMoFAAAJchIB
AHAoFAAACjrgAgAACXIwAQBwKBQAAAo6CQMAAAlyTgEAcCgUAAAKOt0DAAAJcmwBAHAoFAAACjoG
BAAACXKKAQBwKBQAAAo6LwQAADh1BQAACXKoAQBwKBQAAAo6/QIAADhgBQAACXLGAQBwKBQAAAo6
IQMAADhLBQAACXLkAQBwKBQAAAo6RQMAAAlyAgIAcCgUAAAKOhkEAAA4JgUAAAlyIAIAcCgUAAAK
OuIEAAA4EQUAAAlyPgIAcCgUAAAKOtEAAAA4/AQAAAlyVgIAcCgUAAAKOtkBAAA45wQAAAlybgIA
cCgUAAAKOv4DAAA40gQAAAlyhgIAcCgUAAAKOiIEAAA4vQQAAAlyngIAcCgUAAAKOu8AAAA4qAQA
AAlywgIAcCgUAAAKOhMBAAA4kwQAAAly5gIAcCgUAAAKOjcBAAA4fgQAAAlyCgMAcCgUAAAKOgQE
AAA4aQQAAAMHb0EAAAYDbwYAAAYMEgIoHAAACiDXBwAAWW8dAAAKci4DAHAoIQAACigiAAAKbxYA
AAY4MAQAAAMHb0EAAAYDbwYAAAYMEgIoHAAACiDXBwAAWW8dAAAKci4DAHAoIQAACigjAAAKbygA
AAY49wMAAAMHb0EAAAYDbwYAAAYMEgIoHAAACiDXBwAAWW8dAAAKci4DAHAoIQAACigiAAAKby4A
AAY4vgMAAAMHb0EAAAYDbwYAAAYMEgIoHAAACiDXBwAAWW8dAAAKci4DAHAoIQAACigiAAAKbywA
AAY4hQMAAAMHb0EAAAYDbwYAAAYMEgIoHAAACiDXBwAAWW8dAAAKci4DAHAoIQAACigiAAAKbyYA
AAY4TAMAAAMHb0EAAAYDbwYAAAYMEgIoHAAACiDXBwAAWW8dAAAKci4DAHAoIQAACigiAAAKbyQA
AAY4EwMAAAMHb0EAAAYDbwYAAAYMEgIoHAAACiDXBwAAWW8dAAAKci4DAHAoIQAACigiAAAKbyIA
AAY42gIAAAMHb0EAAAYDbwYAAAYMEgIoHAAACiDXBwAAWW8dAAAKci4DAHAoIQAACigiAAAKbxQA
AAY4oQIAAAMHb0EAAAYDbwYAAAYMEgIoHAAACiDXBwAAWW8dAAAKci4DAHAoIQAACigiAAAKbxIA
AAY4aAIAAAMHb0EAAAYDbwYAAAYMEgIoHAAACiDXBwAAWW8dAAAKci4DAHAoIQAACigiAAAKbyAA
AAY4LwIAAAMHb0EAAAYDbwYAAAYMEgIoHAAACiDXBwAAWW8dAAAKci4DAHAoIQAACigiAAAKbx4A
AAY49gEAAAMHb0EAAAYDbwYAAAYMEgIoHAAACiDXBwAAWW8dAAAKci4DAHAoIQAACigiAAAKbxAA
AAY4vQEAAAMHb0EAAAYDbwYAAAYMEgIoHAAACiDXBwAAWW8dAAAKci4DAHAoIQAACigiAAAKbxwA
AAY4hAEAAAMHb0EAAAYDbwYAAAYMEgIoHAAACiDXBwAAWW8dAAAKci4DAHAoIQAACigiAAAKbxoA
AAY4SwEAAAMHb0EAAAYDbwYAAAYMEgIoHAAACiDXBwAAWW8dAAAKci4DAHAoIQAACigiAAAKbxgA
AAY4EgEAAAMHb0EAAAYDbwYAAAYMEgIoHAAACiDXBwAAWW8dAAAKci4DAHAoIQAACigkAAAKbyoA
AAY42QAAAAMHb0EAAAYDbwYAAAYMEgIoHAAACiDXBwAAWW8dAAAKci4DAHAoIQAACigjAAAKbwoA
AAY4oAAAAAMHb0EAAAYDbwYAAAYMEgIoHAAACiDXBwAAWW8dAAAKci4DAHAoIQAACigjAAAKbwgA
AAYragMHb0EAAAYDbwYAAAYMEgIoHAAACiDXBwAAWW8dAAAKci4DAHAoIQAACigiAAAKbw4AAAYr
NAMHb0EAAAYDbwYAAAYMEgIoHAAACiDXBwAAWW8dAAAKci4DAHAoIQAACigiAAAKbwwAAAYSACgl
AAAKOs74///eDhIA/hYDAAAbbxgAAArcKkEcAAACAAAADAAAADkHAABFBwAADgAAAAAAAABKAnMm
AAAKfQEAAAQCKDIAAAYqKgIDBAUoJwAACipSAnsoAAAKAnspAAAKFpRvKgAACioiAhYoKwAACio6
AhcDjCQAAAEoLAAACipaAywIAhcoLQAACipyOgMAcHMuAAAKejoCGAOMJAAAASgsAAAKKloDLAgC
GCgtAAAKKnI6AwBwcy4AAAp6OgIZA4wXAAABKCwAAAoqWgMsCAIZKC0AAAoqcjoDAHBzLgAACno6
AhoDjBcAAAEoLAAACipaAywIAhooLQAACipyOgMAcHMuAAAKejoCGwOMFwAAASgsAAAKKloDLAgC
GygtAAAKKnI6AwBwcy4AAAp6OgIcA4wXAAABKCwAAAoqWgMsCAIcKC0AAAoqcjoDAHBzLgAACno6
Ah0DjBcAAAEoLAAACipaAywIAh0oLQAACipyOgMAcHMuAAAKejoCHgOMFwAAASgsAAAKKloDLAgC
HigtAAAKKnI6AwBwcy4AAAp6PgIfCQOMFwAAASgsAAAKKl4DLAkCHwkoLQAACipyOgMAcHMuAAAK
ej4CHwoDjBcAAAEoLAAACipeAywJAh8KKC0AAAoqcjoDAHBzLgAACno+Ah8LA4wXAAABKCwAAAoq
XgMsCQIfCygtAAAKKnI6AwBwcy4AAAp6PgIfDAOMFwAAASgsAAAKKl4DLAkCHwwoLQAACipyOgMA
cHMuAAAKej4CHw0DjBcAAAEoLAAACipeAywJAh8NKC0AAAoqcjoDAHBzLgAACno+Ah8OA4wXAAAB
KCwAAAoqXgMsCQIfDigtAAAKKnI6AwBwcy4AAAp6PgIfDwOMFwAAASgsAAAKKl4DLAkCHw8oLQAA
CipyOgMAcHMuAAAKej4CHxADjBcAAAEoLAAACipeAywJAh8QKC0AAAoqcjoDAHBzLgAACno+Ah8R
A4wkAAABKCwAAAoqXgMsCQIfESgtAAAKKnI6AwBwcy4AAAp6PgIfEgOMJQAAASgsAAAKKl4DLAkC
HxIoLQAACipyOgMAcHMuAAAKej4CHxMDjBcAAAEoLAAACipeAywJAh8TKC0AAAoqcjoDAHBzLgAA
Cno+Ah8UA4wXAAABKCwAAAoqXgMsCQIfFCgtAAAKKnI6AwBwcy4AAAp6HgIoLwAACioeAigwAAAK
Kn4CKDEAAAoCAnM2AAAGfQIAAAQCAnM3AAAGfQMAAAQqkgRy1wMAcBpvMgAACiwVAgUCAygzAAAK
DgRzBQAABm80AAAGKkorBwIDbzUAAAYDbzAAAAYt8SoGKjoCKDQAAAoCA30EAAAEKjoCKDQAAAoC
A30FAAAEKh4CKDQAAAoqrn4GAAAELR5y5wMAcNAHAAACKDUAAApvNgAACnM3AAAKgAYAAAR+BgAA
BCoafgcAAAQqHgKABwAABCoafggAAAQqHgIoOAAACioucz0AAAaACAAABCoeAnsJAAAEKiICA30J
AAAEKh4CewoAAAQqIgIDfQoAAAQqQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA
vAsAACN+AAAoDAAAiAwAACNTdHJpbmdzAAAAALAYAABcBAAAI1VTAAwdAAAQAAAAI0dVSUQAAAAc
HQAAgAIAACNCbG9iAAAAAAAAAAIAAAFXFaIJCQMAAAD6ATMAFgAAAQAAACoAAAAJAAAACgAAAEMA
AAA3AAAAOAAAABYAAAACAAAABAAAAC8AAAAyAAAAAwAAAAEAAAAEAAAAAQAAAAEAAAAAAIkFAQAA
AAAABgBwBEsKBgAEBUsKBgC8AzgKDwC/CgAABgDpA0YJBgBTBEYJBgA0BEYJBgDrBEYJBgCQBEYJ
BgCpBEYJBgAABEYJBgAbBD8FCgDEBKsCBgAlAOwABgC4CW4AOwAgCgAABgCZApQIBgBSC5QIBgCE
A0sKCgD8CasCDgDtCasCCgCSCasCBgBrBZQICgCVC6sCBgCfAzgKBgANCmsKBgCGCTEJEgBvA3MF
EgDQA3MFEgD5AhwJBgDFCW4ABgCzCZQIBgBZBZQIBgBcApQIBgDQCZQIBgAsAJQIBgAyAJQIBgBY
CZQIBgByCZQIBgDMApQIBgBoApQIBgBRDEYJAAAAADkAAAAAAAEAAQABABAA7wgAABAAAQABAAEA
EADgCQAAUQACAAUAAQAQAHcLAABhAAIAMgABABAAPAsAAEkABAA2AAEAEAD9CgAASQAFADcAAAAQ
AHIKzgpJAAYAOAAAARAALAvOCnkACAA8AAMAEADLAAAASQAJAD8AAQDXAP8ABgA8CwcBBgD9CgsB
AQCFCw8BAQCFCw8BEQDjCBMBEQDpAhcBEQBCARsBAQAmAR8BAQALASIBUCAAAAAAxgAiBQYAAQAo
IQAAAADGAC0FBgABADAhAAAAAMYALgwpAQEArCgAAAAAhhgrCgYAAgC/KAAAAACGGCsKpQACAMoo
AAAAAIYIHwMvAQUA3ygAAAAAhghMB6EABQDoKAAAAACGCMAIAQAFAPcoAAAAAIYI3Qc0AQYADikA
AAAAhgibCAEABwAdKQAAAACGCLEHNAEIADQpAAAAAIYILQM5AQkAQykAAAAAhghhBzQBCgBaKQAA
AACGCE8DOQELAGkpAAAAAIYIigc0AQwAgCkAAAAAhgj6CDkBDQCPKQAAAACGCAcINAEOAKYpAAAA
AIYIlAA5AQ8AtSkAAAAAhgj/BTQBEADMKQAAAACGCHgAOQERANspAAAAAIYI3AU0ARIA8ikAAAAA
hggBADkBEwABKgAAAACGCLEFNAEUABgqAAAAAIYImwE5ARUAKCoAAAAAhghaBjQBFgBAKgAAAACG
CIUBOQEXAFAqAAAAAIYIPQY0ARgAaCoAAAAAhghwATkBGQB4KgAAAACGCCEGNAEaAJAqAAAAAIYI
1wE5ARsAoCoAAAAAhgirBjQBHAC4KgAAAACGCOsBOQEdAMgqAAAAAIYIxgY0AR4A4CoAAAAAhgh0
DDkBHwDwKgAAAACGCGAINAEgAAgrAAAAAIYIwgE5ASEAGCsAAAAAhgiPBjQBIgAwKwAAAACGCK8B
OQEjAEArAAAAAIYIdQY0ASQAWCsAAAAAhggICQEAJQBoKwAAAACGCBwINAEmAIArAAAAAIYIzgs/
AScAkCsAAAAAhgg3CDQBKACoKwAAAACGCP8BOQEpALgrAAAAAIYI4QY0ASoA0CsAAAAAhgg0AjkB
KwDgKwAAAACGCB0HNAEsAPgrAAAAAIYARQyhAC0AACwAAAAAhgBZC6EALQAILAAAAACGGCsKBgAt
ACgsAAAAAMYAGAxEAS0ATSwAAAAAxgERDCkBMQBgLAAAAADGAS4MKQEyAGIsAAAAAIYYKwpOATMA
cSwAAAAAhhgrCk4BNACALAAAAACDGCsKBgA1AIgsAAAAAJMICQpUATUAtCwAAAAAkwjRAlkBNQC7
LAAAAACTCN0CXgE1AMMsAAAAAJYIawtkATYAyiwAAAAAhhgrCgYANgDSLAAAAACRGDEKaQE2AN4s
AAAAAIYIUgEqADYA5iwAAAAAhghhARAANgDvLAAAAACGCK8AbQE3APcsAAAAAIYIvQB1ATcAgCwA
AAAAhhgrCgYAOAAAAAEASQwAAAEAAgoAAAIABwsAAAMAoAkAAAEAOQUAAAEAOQUAAAEAOQUAAAEA
OQUAAAEAOQUAAAEAOQUAAAEAOQUAAAEAOQUAAAEAOQUAAAEAOQUAAAEAOQUAAAEAOQUAAAEAOQUA
AAEAOQUAAAEAOQUAAAEAOQUAAAEAOQUAAAEAOQUAAAEAOQUAAAEAOQUAAAEAOQUAAAEAOQUAAAEA
OQUAAAEAOQUAAAEAOQUAAAEAOQUAAAEAOQUAAAEAOQUAAAEAOQUAAAEAOQUAAAEAOQUAAAEAOQUA
AAEAOQUAAAEAOQUAAAEAOQUAAAEAOQUAAAEAOQUAAAEAOQUAAAEAOQUAAAEAOQUAAAEAZgAAAAIA
jAIAAAMAAgoAAAQAoAkAAAEAAgoAAAEASQwAAAEAmwsAAAEAmwsAAAEAOQUAAAEAOQUAAAEAOQUJ
ACsKAQARACsKBgAZACsKCgApACsKEAAxACsKEAA5ACsKEABBACsKEABJACsKEABRACsKEABZACsK
EABhACsKEABpACsKBgCZACsKBgDJACsKBgDpACsKFQDBACIFBgB5ACsKEAD5AKICKgAJAWULLgAJ
AVoMNQAMACsKBgAMAAcBQQAUAAcBQQARAREDBgDBAC0FBgAUAB0KXgAcAKULbgCJAKoJcwAMAIII
dwAJAWYMNQAJAWAFcwAJAUgLfQDZAIMJggC5ABkDiAAhARkDkQApARkDmQAcACUMoQAUACsKBgCh
ACsKpQChAAIKrwChAAcLswCpAJYCtwChAHMIvQChAIsIwgChAHoIAQAxASsKEAChAEUMoQChAFkL
oQDBACsKBgAJATULyADBABsL0ACRACsKBgBBAXoC1gBBAU0M3wDRACsK5QDxACsKBgAuAAsArwEu
ABMAuAEuABsA1wEuACMA4AEuACsACQIuADMACQIuADsADwIuAEMA4AEuAEsAFwIuAFMACQIuAFsA
MAJDAGMAegLjAHMAegIBAWsAegIhAWsAegJBAWsAegJpBXsA1wGJBXsA1wHgB2sAegIACGsAegIg
CGsAegJACGsAegIbAE4AAwABAAcAKwAIAC0ACQAuAAAAIwN+AQAAUAeDAQAAxAiHAQAA4QeDAQAA
nwiHAQAAtQeDAQAAMQOLAQAAZQeDAQAAUwOLAQAAjgeDAQAA/giLAQAACwiDAQAAmACLAQAAAwaD
AQAAfACLAQAA4AWDAQAABQCLAQAAtQWDAQAAnwGLAQAAXgaDAQAAiQGLAQAAQQaDAQAAdAGLAQAA
JQaDAQAA2wGLAQAArwaDAQAA7wGLAQAAygaDAQAAeAyLAQAAZAiDAQAAxgGLAQAAkwaDAQAAswGL
AQAAeQaDAQAADAmHAQAAIAiDAQAA0guQAQAAOwiDAQAAAwKLAQAA5QaDAQAAOAKLAQAAIQeDAQAA
DQqUAQAA8QKZAQAAbwueAQAAZQGjAQAAwQCnAQIABgADAAIABwAFAAEACAAHAAEACQAJAAEACgAL
AAEACwANAAEADAAPAAEADQARAAEADgATAAEADwAVAAEAEAAXAAEAEQAZAAEAEgAbAAEAEwAdAAEA
FAAfAAEAFQAhAAEAFgAjAAEAFwAlAAEAGAAnAAEAGQApAAEAGgArAAEAGwAtAAEAHAAvAAEAHQAx
AAEAHgAzAAEAHwA1AAEAIAA3AAEAIQA5AAEAIgA7AAEAIwA9AAEAJAA/AAEAJQBBAAEAJgBDAAEA
JwBFAAEAKABHAAEAKQBJAAEAKgBLAAEAKwBNAAEALABPAAEALQBRAAEALgBTAAEALwBVAAIAOQBX
AAIAOgBZAAEAOwBZAAIAPABbAAIAPwBdAAEAQABdAAIAQQBfAAEAQgBfADsARwBnAASAAAABAAAA
AAAAAAAAAAAAAEIAAAAEAAAAAAAAAAAAAADtAOMAAAAAABAAAAAAAAAAAAAAAPYAsQsAAAAAEAAA
AAAAAAAAAAAA9gDwCwAAAAAEAAAAAAAAAAAAAADtAJQIAAAAAAAAAAABAAAAfAoAAAkAAgAAAABz
ZXRfTW9ydGFsaXR5SW5Sb2FkVHJhZmZpY1BlcjEwMDAwMABMaXN0YDEASW50MzIAVUludDY0ADxN
b2R1bGU+AFNDXzlEQjIyREY4OEQwNTRCNEE5NjFBNTAzMTkwNTkyQThCAElucHV0SUQAU3lzdGVt
LklPAHNldF9HRFBQZXJDYXBpdGFDb25zdGFudExDVQBzZXRfR0RQUGVyQ2FwaXRhQ3VycmVudExD
VQBnZXRfWWVhcnNEYXRhAHNldF9ZZWFyc0RhdGEAQ29udGV4dERhdGEAY29udGV4dERhdGEAbXNj
b3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAQWRkADxZZWFyc0RhdGE+a19fQmFja2lu
Z0ZpZWxkADxTZXJpZXNDb2RlPmtfX0JhY2tpbmdGaWVsZABkZWZhdWx0SW5zdGFuY2UAZ2V0X1Nl
cmllc0NvZGUAc2V0X1Nlcmllc0NvZGUAc2V0X0FnZTAxNFBlcmNlbnRhZ2UAc2V0X0FnZTE1NjRQ
ZXJjZW50YWdlAHNldF9BZ2U2NVBlcmNlbnRhZ2UAc2V0X01hbGVQZXJjZW50YWdlAHNldF9GZW1h
bGVQZXJjZW50YWdlAHNldF9SdXJhbFBlcmNlbnRhZ2UAc2V0X1VyYmFuUGVyY2VudGFnZQBzZXRf
Q08yRW1pc3Npb25zRnJvbUdhc2VvdXNGdWVsQ29uc3VtcHRpb25QZXJjZW50YWdlAHNldF9DTzJF
bWlzc2lvbnNGcm9tVHJhbnNwb3J0UGVyY2VudGFnZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhh
bmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBJbnB1dE5hbWUAR2V0RGF0ZVRpbWUAUmVhZExpbmUATWlj
cm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVy
ZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBQYXJzZQBn
ZXRfU3RhcnREYXRlAHNldF9VbmVwbG95bWVudE1vZGVsZWRJTE9Fc3RpbWF0ZQBzZXRfVW5lcGxv
eW1lbnROYXRpb25hbEVzdGltYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJh
dGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJp
YnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlD
b25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGls
YXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1i
bHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1
dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRl
AFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBT
dHJpbmcAZ2V0X0xlbmd0aABEZWNpbWFsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ185REIyMkRG
ODhEMDU0QjRBOTYxQTUwMzE5MDU5MkE4Qi5kbGwAc2V0X01vcnRhbGl0eUluUm9hZFRyYWZmaWNQ
ZXIxMDAwMDBfSXNOdWxsAHNldF9HRFBQZXJDYXBpdGFDb25zdGFudExDVV9Jc051bGwAc2V0X0dE
UFBlckNhcGl0YUN1cnJlbnRMQ1VfSXNOdWxsAHNldF9BZ2UwMTRQZXJjZW50YWdlX0lzTnVsbABz
ZXRfQWdlMTU2NFBlcmNlbnRhZ2VfSXNOdWxsAHNldF9BZ2U2NVBlcmNlbnRhZ2VfSXNOdWxsAHNl
dF9NYWxlUGVyY2VudGFnZV9Jc051bGwAc2V0X0ZlbWFsZVBlcmNlbnRhZ2VfSXNOdWxsAHNldF9S
dXJhbFBlcmNlbnRhZ2VfSXNOdWxsAHNldF9VcmJhblBlcmNlbnRhZ2VfSXNOdWxsAHNldF9DTzJF
bWlzc2lvbnNGcm9tR2FzZW91c0Z1ZWxDb25zdW1wdGlvblBlcmNlbnRhZ2VfSXNOdWxsAHNldF9D
TzJFbWlzc2lvbnNGcm9tVHJhbnNwb3J0UGVyY2VudGFnZV9Jc051bGwAZ2V0X1N0YXJ0RGF0ZV9J
c051bGwAc2V0X1VuZXBsb3ltZW50TW9kZWxlZElMT0VzdGltYXRlX0lzTnVsbABzZXRfVW5lcGxv
eW1lbnROYXRpb25hbEVzdGltYXRlX0lzTnVsbABzZXRfRGVwYXJ0dXJlc0luSW50ZXJuYXRpb25h
bFRvdXJpc21fSXNOdWxsAHNldF9BcnJpdmFsc0luSW50ZXJuYXRpb25hbFRvdXJpc21fSXNOdWxs
AHNldF9JbmZsYXRpb25fSXNOdWxsAHNldF9Ub3RhbFBvcHVsYXRpb25fSXNOdWxsAHNldF9Qcml2
YXRlSW52ZXN0bWVudHNJblRyYW5zcG9ydF9Jc051bGwAc2V0X0NvdW50cnlEZW5zaXR5X0lzTnVs
bABTZXROdWxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQBzZXRfRGVwYXJ0dXJlc0luSW50ZXJu
YXRpb25hbFRvdXJpc20Ac2V0X0Fycml2YWxzSW5JbnRlcm5hdGlvbmFsVG91cmlzbQByZXNvdXJj
ZU1hbgBTY3JpcHRNYWluAHNldF9JbmZsYXRpb24Ac2V0X1RvdGFsUG9wdWxhdGlvbgBTeXN0ZW0u
Q29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZh
bGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AR2V0Q3VsdHVyZUluZm8AT3V0
cHV0TmFtZU1hcABPdXRwdXRNYXAAZ2V0X1llYXIAQ2hhcgBTdHJlYW1SZWFkZXIAVGV4dFJlYWRl
cgBJRm9ybWF0UHJvdmlkZXIASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZl
cgBnZXRfUmVzb3VyY2VNYW5hZ2VyAEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9yAFN5c3RlbS5E
aWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJj
ZXMAU0NfNGQwMTY0ZTg0OWNiNGMzZmE3OTNmMjIwNzAxNWE3NGQuUHJvcGVydGllcy5SZXNvdXJj
ZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNDXzRkMDE2NGU4NDljYjRjM2ZhNzkzZjIyMDcw
MTVhNzRkLlByb3BlcnRpZXMAVmFyaWFibGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1u
SW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAZ2V0X0NoYXJzAE9iamVjdABFbmRP
ZlJvd3NldABTcGxpdABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABT
Y3JpcHRDb21wb25lbnQAZ2V0X0N1cnJlbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABz
ZXRfUHJpdmF0ZUludmVzdG1lbnRzSW5UcmFuc3BvcnQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBl
bGluZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABNb3ZlTmV4dABJbnB1dDBfUHJvY2Vzc0lucHV0
Um93AE5leHRSb3cAZ2V0X0Fzc2VtYmx5AG9wX0VxdWFsaXR5AG9wX0luZXF1YWxpdHkAc2V0X0Nv
dW50cnlEZW5zaXR5AAAAgMVDADoAXABVAHMAZQByAHMAXABSAGUAegBlAHIAdwBvAHcAeQBcAEQA
ZQBzAGsAdABvAHAAXABFAG4AZwBpAG4AZQBlAHIAaQBuAGcAIABUAGgAZQBzAGkAcwBcAEQAYQB0
AGEAcwBlAHQAcwBcAEMAbwBuAHQAZQB4AHQAXwBEAGEAdABhAFwAQwBvAG4AdABlAHgAdABfAEQA
YQB0AGEAXwBDAGgAaQBuAGEAXwBHAGUAcgBtAGEAbgB5AC4AYwBzAHYAAAdDAEgATgAABS4ALgAA
HVMASAAuAFMAVABBAC4AVABSAEEARgAuAFAANQAAHUUATgAuAEMATwAyAC4AVABSAEEATgAuAFoA
UwAAHU4AWQAuAEcARABQAC4AUABDAEEAUAAuAEsATgAAHU4AWQAuAEcARABQAC4AUABDAEEAUAAu
AEMATgAAHVMAUAAuAFAATwBQAC4AMAAwADEANAAuAFoAUwAAHVMAUAAuAFAATwBQAC4AMQA1ADYA
NAAuAFoAUwAAHVMAUAAuAFAATwBQAC4ANgA1AFUAUAAuAFoAUwAAHVMAUAAuAFUAUgBCAC4AVABP
AFQATAAuAFoAUwAAHVMAUAAuAFIAVQBSAC4AVABPAFQATAAuAFoAUwAAHUYAUAAuAEMAUABJAC4A
VABPAFQATAAuAFoARwAAHUkARQAuAFAAUABJAC4AVABSAEEATgAuAEMARAAAHVMATAAuAFUARQBN
AC4AVABPAFQATAAuAFoAUwAAF1MAUAAuAFAATwBQAC4AVABPAFQATAAAF0UATgAuAFAATwBQAC4A
RABOAFMAVAAAF1MAVAAuAEkATgBUAC4ARABQAFIAVAAAF1MAVAAuAEkATgBUAC4AQQBSAFYATAAA
I0UATgAuAEEAVABNAC4AQwBPADIARQAuAEcARgAuAEsAVAAAI1MAUAAuAFAATwBQAC4AVABPAFQA
TAAuAE0AQQAuAFoAUwAAI1MAUAAuAFAATwBQAC4AVABPAFQATAAuAEYARQAuAFoAUwAAI1MATAAu
AFUARQBNAC4AVABPAFQATAAuAE4ARQAuAFoAUwAAC3AAbAAtAFAATAABgJtJAHMATgB1AGwAbAAg
AHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEA
bABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBv
AGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAwAABxUwBDAF8ANABkADAA
MQA2ADQAZQA4ADQAOQBjAGIANABjADMAZgBhADcAOQAzAGYAMgAyADAANwAwADEANQBhADcANABk
AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAAB5D7uRZueDQrp6
zMqiAyM/AAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFxDgcFEj0OHQ4VEjkBDhIkAyAADgYgAR0O
HQMFAAICDg4FFRI5AQ4FIAEBEwAGFRI5ARIkDwcGFRFBARIkEiQRRQ4IAwggABURQQETAAYVEUEB
EiQEIAATAAMgAAgFIAETAAgEIAEDCAUAARJtDggAAhFdDhKAjQcAAggOEoCNBwACCw4SgI0DIAAC
CSADARJVHQgSWQMGElUDBh0IBSABEUUIBCABAggFIAIBCBwHIAICDhGAnQUgAR0ICAgAARKAoRGA
pQUgABKAqQcgAgEOEoCpCLd6XFYZNOCJCImEXc2AgMyRBwYVEjkBEiQDBhIUAwYSGAMGEmEDBhJp
AwYSbQMGEiACBg4GBhUSOQEOBSABARIMBCAAEUUEIAEBAgUgAQERXQQgAQELCSAEAQgOElUSWQUg
AQESYQQAABJpBAAAEm0FAAEBEm0EAAASIAMAAAEHIAAVEjkBDgggAQEVEjkBDgQoABFFAygAAgMo
AAgEKAARXQMoAAsECAASaQQIABJtBAgAEiADKAAOBygAFRI5AQ4IAQAIAAAAAAAeAQABAFQCFldy
YXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NDXzRkMDE2NGU4NDljYjRjM2ZhNzkz
ZjIyMDcwMTVhNzRkAAAFAQAAAAAHAQACSFAAABgBABNDb3B5cmlnaHQgQCBIUCAyMDIzAABJAQAa
Lk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQg
RnJhbWV3b3JrIDQuNwQBAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNv
dXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQ
dWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJl
c291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAB8TQAAAAAAAAAAAACWTQAAACAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAiE0AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA
/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAYAACA
AAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAPQDAAAA
AAAAAAAAAPQDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAABAAAA
AQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIARgBp
AGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARUAwAA
AQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAwAwAAAQAwADAAMAAwADAANABiADAAAAAa
AAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAJgADAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAA
AABIAFAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwA0
AGQAMAAxADYANABlADgANAA5AGMAYgA0AGMAMwBmAGEANwA5ADMAZgAyADIAMAA3ADAAMQA1AGEA
NwA0AGQAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAAAABw
ACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADkARABCADIAMgBEAEYAOAA4AEQA
MAA1ADQAQgA0AEEAOQA2ADEAQQA1ADAAMwAxADkAMAA1ADkAMgBBADgAQgAuAGQAbABsAAAATAAU
AAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAA
SABQACAAMgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAAAAAA
AAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADkARABCADIA
MgBEAEYAOAA4AEQAMAA1ADQAQgA0AEEAOQA2ADEAQQA1ADAAMwAxADkAMAA1ADkAMgBBADgAQgAu
AGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA0AGQAMAAxADYA
NABlADgANAA5AGMAYgA0AGMAMwBmAGEANwA5ADMAZgAyADIAMAA3ADAAMQA1AGEANwA0AGQAAAA0
AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAIAAEA
QQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAACoPQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_9db22df88d054b4a961a503190592a8b</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">43</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Geolife Data Flow\Add Context.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Geolife Data Flow\Add Context.Inputs[Input 0].Columns[StartDate]"
                      cachedDataType="date"
                      cachedName="StartDate"
                      lineageId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[StartDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Geolife Data Flow\Add Context.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Geolife Data Flow\Add Context.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[ArrivalsInInternationalTourism]"
                      dataType="i4"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[ArrivalsInInternationalTourism]"
                      name="ArrivalsInInternationalTourism" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[DeparturesInInternationalTourism]"
                      dataType="i4"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[DeparturesInInternationalTourism]"
                      name="DeparturesInInternationalTourism" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[UneploymentModeledILOEstimate]"
                      dataType="decimal"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[UneploymentModeledILOEstimate]"
                      name="UneploymentModeledILOEstimate" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[UneploymentNationalEstimate]"
                      dataType="decimal"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[UneploymentNationalEstimate]"
                      name="UneploymentNationalEstimate" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[Inflation]"
                      dataType="decimal"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[Inflation]"
                      name="Inflation" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[GDPPerCapitaCurrentLCU]"
                      dataType="decimal"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[GDPPerCapitaCurrentLCU]"
                      name="GDPPerCapitaCurrentLCU" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[GDPPerCapitaConstantLCU]"
                      dataType="decimal"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[GDPPerCapitaConstantLCU]"
                      name="GDPPerCapitaConstantLCU" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[MortalityInRoadTrafficPer100000]"
                      dataType="decimal"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[MortalityInRoadTrafficPer100000]"
                      name="MortalityInRoadTrafficPer100000" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[Age65+Percentage]"
                      dataType="decimal"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[Age65+Percentage]"
                      name="Age65+Percentage" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[Age15-64Percentage]"
                      dataType="decimal"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[Age15-64Percentage]"
                      name="Age15-64Percentage" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[Age0-14Percentage]"
                      dataType="decimal"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[Age0-14Percentage]"
                      name="Age0-14Percentage" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[RuralPercentage]"
                      dataType="decimal"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[RuralPercentage]"
                      name="RuralPercentage" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[UrbanPercentage]"
                      dataType="decimal"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[UrbanPercentage]"
                      name="UrbanPercentage" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[CountryDensity]"
                      dataType="decimal"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[CountryDensity]"
                      name="CountryDensity" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[FemalePercentage]"
                      dataType="decimal"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[FemalePercentage]"
                      name="FemalePercentage" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[MalePercentage]"
                      dataType="decimal"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[MalePercentage]"
                      name="MalePercentage" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[TotalPopulation]"
                      dataType="i4"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[TotalPopulation]"
                      name="TotalPopulation" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[PrivateInvestmentsInTransport]"
                      dataType="ui8"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[PrivateInvestmentsInTransport]"
                      name="PrivateInvestmentsInTransport" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                      dataType="decimal"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                      name="CO2EmissionsFromGaseousFuelConsumptionPercentage" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[CO2EmissionsFromTransportPercentage]"
                      dataType="decimal"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[CO2EmissionsFromTransportPercentage]"
                      name="CO2EmissionsFromTransportPercentage" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Geolife Data Flow\Add fuel prices"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Add fuel prices"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Globalization;
using System.IO;
using System.Linq;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    List<FuelPrice> fuelPrices = new List<FuelPrice>();

    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
        string filePath = "C:\\Users\\Rezerwowy\\Desktop\\Engineering Thesis\\Datasets\\Fuel_Prices_China.csv";

        using (StreamReader reader = new StreamReader(filePath))
        {
            string line;
            reader.ReadLine();
            while ((line = reader.ReadLine()) != null)
            {
                string[] fields = line.Split(';'); // Change the delimiter if needed

                FuelPrice fuelPrice = new FuelPrice()
                {
                    DieselPrice = decimal.Parse(fields[4], CultureInfo.GetCultureInfo("pl-PL")),
                    GasolinePrice = decimal.Parse(fields[5], CultureInfo.GetCultureInfo("pl-PL")),
                    DateTime = DateTime.ParseExact(fields[0], "dd.MM.yyyy", CultureInfo.InvariantCulture),
                };

                fuelPrices.Add(fuelPrice);
                /*if (fuelPrice.DateTime.Year == Row.StartDate.Year && fuelPrice.DateTime.Month == Row.StartDate.Month)
                {
                    Row.DieselPrice = fuelPrice.DieselPrice;
                    Row.GasolinePrice = fuelPrice.GasolinePrice;
                    break;
                }*/
            }
        }

    }
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        var fuelPrice = fuelPrices.FirstOrDefault(fp => fp.DateTime.Year == Row.StartDate.Year && fp.DateTime.Month == Row.StartDate.Month);
    
        if (fuelPrice != null)
        {
            Row.DieselPrice = fuelPrice.DieselPrice;
            Row.GasolinePrice = fuelPrice.GasolinePrice;
        }
    }
    private class FuelPrice
    {
        public decimal DieselPrice { get; set; }
        public decimal GasolinePrice { get; set; }
        public DateTime DateTime { get; set; }

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public DateTime StartDate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[0]);
        }
    }
    public bool StartDate_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Decimal DieselPrice
    {
        set
        {
            this[1] = value;
        }
    }
    public bool DieselPrice_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal GasolinePrice
    {
        set
        {
            this[2] = value;
        }
    }
    public bool GasolinePrice_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bc169b9ae98b433784e83b0991156701.Properties.Settings.get_Default():SC_bc169b9ae98b433784e83b0991156701.Properties.Sett" +
    "ings")]

namespace SC_bc169b9ae98b433784e83b0991156701.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_bc169b9ae98b433784e83b0991156701.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{e0df201c-3b96-43cc-8b1b-a6da642dca8f}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_bc169b9ae98b433784e83b0991156701</RootNamespace>
    <AssemblyName>SC_bc169b9ae98b433784e83b0991156701</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_bc169b9ae98b433784e83b0991156701" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_bc169b9ae98b433784e83b0991156701</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_bc169b9ae98b433784e83b0991156701</msb:DisplayName>
    <msb:ProjectId>{7E6B2445-100B-4FA4-A003-6B52F1EB1A8C}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_bc169b9ae98b433784e83b0991156701.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_bc169b9ae98b433784e83b0991156701")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_bc169b9ae98b433784e83b0991156701")]
[assembly: AssemblyCopyright("Copyright @ HP 2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bc169b9ae98b433784e83b0991156701.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bc169b9ae98b433784e83b0991156701.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_bc169b9ae98b433784e83b0991156701.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_bc169b9ae98b433784e83b0991156701.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_bc169b9ae98b433784e83b0991156701.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_bc169b9ae98b433784e83b0991156701.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAKiYbGUAAAAAAAAAAOAAIiALATAAABoAAAAIAAAAAAAAEjkA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMA4AABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAGBkAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAD0
OAAAAAAAAEgAAAACAAUAXCMAAKwUAAABAAAAAAAAAAg4AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBQCdAAAAAQAAEQIoEAAACnIBAABwcxEAAAoKBm8SAAAK
JitsBxeNHwAAASUWHzudbxMAAAoMcyAAAAYlCBqacpwAAHAoFAAACigVAAAKbxsAAAYlCBuacpwA
AHAoFAAACigVAAAKbx0AAAYlCBaacqgAAHAoFgAACigXAAAKbx8AAAYNAnsBAAAECW8YAAAKBm8S
AAAKJQstit4KBiwGBm8ZAAAK3CoAAAABEAAAAgARAIGSAAoAAAAAEzADAEsAAAACAAARcyEAAAYK
BgN9DAAABAJ7AQAABAb+BiIAAAZzGgAACigBAAArCwcsIgZ7DAAABAdvGgAABm8HAAAGBnsMAAAE
B28cAAAGbwkAAAYqSgJzHAAACn0BAAAEAigNAAAGKioCAwQFKB0AAAoqUgJ7HgAACgJ7HwAAChaU
byAAAAoqIgIWKCEAAAoqOgIXA4wSAAABKCIAAAoqWgMsCAIXKCMAAAoqcr4AAHBzJAAACno6AhgD
jBIAAAEoIgAACipaAywIAhgoIwAACipyvgAAcHMkAAAKeh4CKCUAAAoqHgIoJgAACip+AignAAAK
AgJzEQAABn0CAAAEAgJzEgAABn0DAAAEKpIEclsBAHAabygAAAosFQIFAgMoKQAACg4EcwQAAAZv
DwAABipKKwcCA28QAAAGA28LAAAGLfEqBio6AigqAAAKAgN9BAAABCo6AigqAAAKAgN9BQAABCoe
AigqAAAKKq5+BgAABC0ecmsBAHDQBwAAAigrAAAKbywAAApzLQAACoAGAAAEfgYAAAQqGn4HAAAE
Kh4CgAcAAAQqGn4IAAAEKh4CKC4AAAoqLnMYAAAGgAgAAAQqHgJ7CQAABCoiAgN9CQAABCoeAnsK
AAAEKiICA30KAAAEKh4CewsAAAQqIgIDfQsAAAQqEzACAEkAAAADAAARA28eAAAGChIAKC8AAAoC
ewwAAARvBQAABgoSACgvAAAKMyQDbx4AAAYKEgAoMAAACgJ7DAAABG8FAAAGChIAKDAAAAr+ASoW
KgAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAKgHAAAjfgAAFAgAAFAIAAAj
U3RyaW5ncwAAAABkEAAA4AEAACNVUwBEEgAAEAAAACNHVUlEAAAAVBIAAFgCAAAjQmxvYgAAAAAA
AAACAAABVxWiCQkLAAAA+gEzABYAAAEAAAAqAAAACgAAAAwAAAAiAAAAFQAAADAAAAAaAAAAAwAA
AAQAAAAMAAAAEAAAAAIAAAABAAAABQAAAAEAAAACAAAAAQAAAAAAjgQBAAAAAAAGAIIDZQYGABYE
ZQYGAM4CRwYPANkGAAAGAPsCVAUGAGUDVAUGAEYDVAUGAP0DVAUGAKIDVAUGALsDVAUGABIDVAUG
AC0DRQQKANYD3gEGAGUAlwAGANUFhAAGAG0HDAUGAJYCZQYGAHAEDAUGAMwBDAUKABkG3gEOAAoG
3gEKAKAF3gEKAL8H3gEGALECRwYGACoGhQYGAJQFPwUSAIECeAQSAOICeAQSAE0CKgUGAOIFhAAG
ANAFDAUGAF8EDAUGAO0FDAUGAHUBDAUGAGwADAUWAGoBuwUGAFcAlwAGAGYFDAUGAIAFDAUGAP8B
DAUGAIEBDAUGAEQIVAUAAAAAcwAAAAAAAQABAAEAEAAfBQAAEAABAAEAAQAQAP0FAABRAAIABAAB
ABAAoQcAAF0AAgANAAEAEABWBwAAQQAEABEAAQAQABcHAABBAAUAEgAAABAAjAboBkEABgATAAAB
EABGB+gGdQAIABcAAwAQAFABAABBAAkAGgADARAAAQAAAEEADAAhAAEAWgbyAAYAVgf6AAYAFwf+
AAEArwcCAQEArwcCAREAEwUGAREAKAIKAREAWgEOAQEA1QASAQEAtgASAQEA8gAWAQYAPAgaAVAg
AAAAAMYANAQGAAEADCEAAAAAxgAhCB4BAQBjIQAAAACGGDoGBgACAHYhAAAAAIYYOgaLAAIAgSEA
AAAAhghzAiQBBQCWIQAAAACGCOYErgAFAJ8hAAAAAIYIQAEpAQUAriEAAAAAhgjPBC8BBgDFIQAA
AACGCB4BKQEHANQhAAAAAIYItgQvAQgA6yEAAAAAhgA4CK4ACQDzIQAAAACGAHQHrgAJAPshAAAA
AIYYOgYGAAkAGyIAAAAAxgAUCDQBCQBAIgAAAADGAQ0IHgENAFMiAAAAAMYBIQgeAQ4AVSIAAAAA
hhg6Bj4BDwBkIgAAAACGGDoGPgEQAHMiAAAAAIMYOgYGABEAeyIAAAAAkwgmBkQBEQCnIgAAAACT
CBACPwARAK4iAAAAAJMIHAJJAREAtiIAAAAAlgiGB08BEgC9IgAAAACGGDoGBgASAMUiAAAAAJEY
QAZUARIA0SIAAAAAhggwAVgBEgDZIgAAAACGCEABKQESAOIiAAAAAIYIDAFYARMA6iIAAAAAhgge
ASkBEwDzIgAAAACGCK8BJAEUAPsiAAAAAIYIvAFdARQAcyIAAAAAhhg6BgYAFQBzIgAAAACGGDoG
BgAVAAQjAAAAAIMAFgBjARUAAAABADwIAAABAB8GAAACACEHAAADAK4FAAABAD8EAAABAD8EAAAB
AD8EAAABAD8EAAABAHwAAAACAKUBAAADAB8GAAAEAK4FAAABAB8GAAABADwIAAABAMUHAAABAMUH
AAABAD8EAAABAD8EAAABAD8EAAABAD8EAAABALgFCQA6BgEAEQA6BgYAGQA6BgoAKQA6BhAAMQA6
BhAAOQA6BhAAQQA6BhAASQA6BhAAUQA6BhAAWQA6BhAAYQA6BhAAaQA6BgYAiQA6BgYAwQA6BgYA
4QA6BhUAuQA0BAYAeQA6BhAA8QDVASUAAQGABykA0QCRBTAAkQBtAjYA0QA4Aj8AmQBiB0QADACy
AFUAEQFlAgYAFAA6BmsAIQGSB3EADAA6BgYAoQA6BosAoQAfBpUAoQAhB5kAqQDJAZ0AoQD0BKMA
oQADBagAoQD7BAEAMQE6BhAAoQA4CK4AoQB0B64AuQA6BgYAAQFPB7IAuQA1B7oAgQA6BgYAQQGT
AcAAQQFACMkAyQA6Bs8A6QA6BgYAmQDHBdwAmQBmBNwALgALAIYBLgATAI8BLgAbAK4BLgAjALcB
LgArAOABLgAzAOABLgA7AOYBLgBDALcBLgBLAO4BLgBTAOABLgBbAAcCQwBjAFEC4wBzAFEC6QB7
AK4BAQFrAFECCQF7AK4BIQFrAFECQQFrAFECQwFrAFECYQFrAFECQANrAFECYANrAFECgANrAFEC
oANrAFECwANrAFEC4ANrAFECGwBbANcAAwABAAcABwAIAAkACQAKAAAAdwJpAQAA6gRuAQAARAFy
AQAA0wRuAQAAIgFyAQAAugRuAQAAKgZ3AQAARQJ8AQAAmQeBAQAARAFyAQAAIgFyAQAAzAFpAQIA
BQADAAIABgAFAAEABwAHAAEACAAJAAEACQALAAEACgANAAIAFAAPAAIAFQARAAEAFgARAAIAFwAT
AAIAGgAVAAEAGwAVAAIAHAAXAAEAHQAXAAIAHgAZAAEAHwAZAE4AYgAEgAAAAQAAAAAAAAAAAAAA
AAAzAAAABAAAAAAAAAAAAAAA4ACOAAAAAAAQAAAAAAAAAAAAAADpAM8HAAAAABAAAAAAAAAAAAAA
AOkA7AcAAAAABAAAAAAAAAAAAAAA4AAMBQAAAAAEAAAAAAAAAAAAAADgAAQCAAAAAAAAAAABAAAA
lgYAAAkAAgAKAAIANwCGAAAAAAAAPD5jX19EaXNwbGF5Q2xhc3MyXzAAPElucHV0MF9Qcm9jZXNz
SW5wdXRSb3c+Yl9fMABTQ19iYzE2OWI5YWU5OGI0MzM3ODRlODNiMDk5MTE1NjcwMQBJRW51bWVy
YWJsZWAxAExpc3RgMQBGdW5jYDIAPE1vZHVsZT4ASW5wdXRJRABTeXN0ZW0uSU8AbXNjb3JsaWIA
U3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAQWRkADxHYXNvbGluZVByaWNlPmtfX0JhY2tpbmdG
aWVsZAA8RGllc2VsUHJpY2U+a19fQmFja2luZ0ZpZWxkADxEYXRlVGltZT5rX19CYWNraW5nRmll
bGQAZ2V0X0dhc29saW5lUHJpY2UAc2V0X0dhc29saW5lUHJpY2UAZ2V0X0RpZXNlbFByaWNlAHNl
dF9EaWVzZWxQcmljZQBGdWVsUHJpY2UAZGVmYXVsdEluc3RhbmNlAEVudW1lcmFibGUASURpc3Bv
c2FibGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUASW5wdXROYW1lAGdldF9E
YXRlVGltZQBzZXRfRGF0ZVRpbWUAR2V0RGF0ZVRpbWUAUmVhZExpbmUATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUGlwZWxpbmUAVHlwZQBTeXN0ZW0uQ29yZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVy
ZQByZXNvdXJjZUN1bHR1cmUAZ2V0X0ludmFyaWFudEN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5n
c0Jhc2UARGlzcG9zZQBQYXJzZQBnZXRfU3RhcnREYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENv
bXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVi
dWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0
dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRy
aWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5
UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmls
aXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBT
dHJpbmcAZ2V0X01vbnRoAERlY2ltYWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDX2JjMTY5Yjlh
ZTk4YjQzMzc4NGU4M2IwOTkxMTU2NzAxLmRsbABzZXRfR2Fzb2xpbmVQcmljZV9Jc051bGwAc2V0
X0RpZXNlbFByaWNlX0lzTnVsbABnZXRfU3RhcnREYXRlX0lzTnVsbABTZXROdWxsAHNldF9JdGVt
AFN5c3RlbQByZXNvdXJjZU1hbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3Rl
bS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRp
b24AU3RyaW5nQ29tcGFyaXNvbgBHZXRDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1h
cABmcABTeXN0ZW0uTGlucQBnZXRfWWVhcgBDaGFyAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAElG
b3JtYXRQcm92aWRlcgBJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdl
dF9SZXNvdXJjZU1hbmFnZXIALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBmdWVsUHJp
Y2VzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ19i
YzE2OWI5YWU5OGI0MzM3ODRlODNiMDk5MTE1NjcwMS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNv
dXJjZXMARGVidWdnaW5nTW9kZXMAU0NfYmMxNjliOWFlOThiNDMzNzg0ZTgzYjA5OTExNTY3MDEu
UHJvcGVydGllcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVz
AFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBQYXJzZUV4YWN0AE9iamVjdABFbmRPZlJvd3Nl
dABTcGxpdABnZXRfRGVmYXVsdABGaXJzdE9yRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENv
bXBvbmVudABTY3JpcHRDb21wb25lbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNy
b3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Q
cm9jZXNzSW5wdXRSb3cATmV4dFJvdwBnZXRfQXNzZW1ibHkAAAAAAICZQwA6AFwAVQBzAGUAcgBz
AFwAUgBlAHoAZQByAHcAbwB3AHkAXABEAGUAcwBrAHQAbwBwAFwARQBuAGcAaQBuAGUAZQByAGkA
bgBnACAAVABoAGUAcwBpAHMAXABEAGEAdABhAHMAZQB0AHMAXABGAHUAZQBsAF8AUAByAGkAYwBl
AHMAXwBDAGgAaQBuAGEALgBjAHMAdgAAC3AAbAAtAFAATAABFWQAZAAuAE0ATQAuAHkAeQB5AHkA
AICbSQBzAE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMA
ZQB0ACAAdABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0
AG8AIAB0AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAPSQBuAHAAdQB0ACAA
MAAAcVMAQwBfAGIAYwAxADYAOQBiADkAYQBlADkAOABiADQAMwAzADcAOAA0AGUAOAAzAGIAMAA5
ADkAMQAxADUANgA3ADAAMQAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUA
cwAAAAAA/+RqCFkidkqL6Vmt5844NgAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERbQkHBBI9Dh0O
EiQDIAAOBiABHQ4dAwUAARJpDggAAhFJDhKAhQQAABJpCQADEU0ODhKAhQYVEjkBEiQFIAEBEwAG
BwISKBIkCBUSgI0CEiQCBSACARwYFBABAh4AFRKAlQEeABUSgI0CHgACBAoBEiQJIAMBElUdCBJZ
AwYSVQMGHQgFIAERTQgEIAECCAUgAgEIHAMgAAIHIAICDhGAnQUgAR0ICAgAARKAoRGApQUgABKA
qQcgAgEOEoCpBAcBEU0DIAAICLd6XFYZNOCJCImEXc2AgMyRBwYVEjkBEiQDBhIUAwYSGAMGEl0D
BhJlAwYSaQMGEiADBhFJAwYRTQMGEgwFIAEBEgwEIAARTQUgAQERSQQgAQECCSAEAQgOElUSWQUg
AQESXQQAABJlBQABARJpBAAAEiADAAABBCAAEUkFIAEBEU0FIAECEiQEKAARTQMoAAIEKAARSQQI
ABJlBAgAEmkECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQAC
AAAAAAAoAQAjU0NfYmMxNjliOWFlOThiNDMzNzg0ZTgzYjA5OTExNTY3MDEAAAUBAAAAAAcBAAJI
UAAAGAEAE0NvcHlyaWdodCBAIEhQIDIwMjMAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQu
NwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEAAAAAALQAAADO
yu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZl
cnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5
MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFE
UEFEULQAAADoOAAAAAAAAAAAAAACOQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9DgAAAAAAAAA
AAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAD0AwAAAAAAAAAAAAD0AzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEVAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAMAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACYAAwABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAASABQAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBDAF8AYgBjADEANgA5AGIAOQBhAGUAOQA4AGIANAAzADMANwA4ADQAZQA4ADMAYgAwADkA
OQAxADEANQA2ADcAMAAxAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBiAGMAMQA2ADkA
YgA5AGEAZQA5ADgAYgA0ADMAMwA3ADgANABlADgAMwBiADAAOQA5ADEAMQA1ADYANwAwADEALgBk
AGwAbAAAAEwAFAABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgAEgAUAAgADIAMAAyADMAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQBy
AGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMA
XwBiAGMAMQA2ADkAYgA5AGEAZQA5ADgAYgA0ADMAMwA3ADgANABlADgAMwBiADAAOQA5ADEAMQA1
ADYANwAwADEALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8A
YgBjADEANgA5AGIAOQBhAGUAOQA4AGIANAAzADMANwA4ADQAZQA4ADMAYgAwADkAOQAxADEANQA2
ADcAMAAxAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4A
MAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAw
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAFDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_bc169b9ae98b433784e83b0991156701</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">28</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Geolife Data Flow\Add fuel prices.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Geolife Data Flow\Add fuel prices.Inputs[Input 0].Columns[StartDate]"
                      cachedDataType="date"
                      cachedName="StartDate"
                      lineageId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[StartDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Geolife Data Flow\Add fuel prices.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Geolife Data Flow\Add fuel prices.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Geolife Data Flow\Add fuel prices.Outputs[Output 0].Columns[DieselPrice]"
                      dataType="decimal"
                      lineageId="Package\Geolife Data Flow\Add fuel prices.Outputs[Output 0].Columns[DieselPrice]"
                      name="DieselPrice" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Add fuel prices.Outputs[Output 0].Columns[GasolinePrice]"
                      dataType="decimal"
                      lineageId="Package\Geolife Data Flow\Add fuel prices.Outputs[Output 0].Columns[GasolinePrice]"
                      name="GasolinePrice" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Geolife Data Flow\Add region"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Add region"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="36">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Globalization;
using System.IO;
using System.Linq;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using NetTopologySuite.Geometries;
using NetTopologySuite.IO;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    
    List<Region> regions = new List<Region>();
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        string filePath = "C:\\Users\\Rezerwowy\\Desktop\\Engineering Thesis\\Datasets\\Regions-Beijing.csv";
        using (StreamReader reader = new StreamReader(filePath))
        {
            string line;
            reader.ReadLine();
            while ((line = reader.ReadLine()) != null)
            {
                string[] fields = line.Split(';'); // Change the delimiter if needed

                Region region = new Region()
                {
                    Name = fields[0],
                    Area = decimal.Parse(fields[1], CultureInfo.InvariantCulture),
                    Population = int.Parse(fields[2], CultureInfo.InvariantCulture),
                    Density = decimal.Parse(fields[3], CultureInfo.InvariantCulture),
                    Polygon = CreatePolygon(ReverseCoordinates(fields[4])),
                };

                regions.Add(region);
            }
        }
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        var reader = new WKTReader();

        string pointWkt = $"POINT({Row.Latitude} {Row.Longitude})";
        pointWkt = pointWkt.Replace(",", ".");
        Point point = reader.Read(pointWkt) as Point;

        Region currentRegion = regions.FirstOrDefault(r => r.Polygon.Contains(point));

        if(currentRegion != null)
        {
            Row.RegionName = currentRegion.Name;
            Row.RegionArea = currentRegion.Area;
            Row.RegionPopulation = currentRegion.Population;
            Row.RegionDensity = currentRegion.Density;
        }
        else
        {
            Row.RegionName = "Outside of Beijing";
        }
    }

    private string ReverseCoordinates(string coordinatesString)
    {
        string[] points = coordinatesString.Split(' ');
        List<string> reversedPoints = new List<string>();

        foreach (string point in points)
        {
            string[] coordinates = point.Split(',');
            if (coordinates.Length == 2)
            {
                string reversedPoint = $"{coordinates[1]} {coordinates[0]}";
                reversedPoints.Add(reversedPoint);
            }
        }

        string reversedCoordinates = string.Join(", ", reversedPoints);

        return reversedCoordinates;
    }

    private Polygon CreatePolygon(string coordinates)
    {
        string polygonWkt = $"POLYGON(({coordinates}))";
        var reader = new WKTReader();
        return reader.Read(polygonWkt) as Polygon;
    }

    private class Region
    {
        public string Name { get; set; }
        public decimal Area { get; set; }
        public int Population { get; set; }
        public decimal Density { get; set; }
        public Polygon Polygon { get; set; }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Decimal Latitude
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[0]);
        }
    }
    public bool Latitude_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Decimal Longitude
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[1]);
        }
    }
    public bool Longitude_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Decimal RegionArea
    {
        set
        {
            this[2] = value;
        }
    }
    public bool RegionArea_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String RegionName
    {
        set
        {
            this[3] = value;
        }
    }
    public bool RegionName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 RegionPopulation
    {
        set
        {
            this[4] = value;
        }
    }
    public bool RegionPopulation_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal RegionDensity
    {
        set
        {
            this[5] = value;
        }
    }
    public bool RegionDensity_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2518480992a84ad0830b3674bc6f3f32.Properties.Settings.get_Default():SC_2518480992a84ad0830b3674bc6f3f32.Properties.Sett" +
    "ings")]

namespace SC_2518480992a84ad0830b3674bc6f3f32.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_2518480992a84ad0830b3674bc6f3f32.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0A59C22A-2969-414C-84D6-6BD29984CAC5}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_2518480992a84ad0830b3674bc6f3f32</RootNamespace>
    <AssemblyName>SC_A0600C925BF046448676FC7A3C1E220C</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51" />
    <Reference Include="NetTopologySuite, Version=2.0.0.0, Culture=neutral, PublicKeyToken=f580a05016ebada1, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstakUBqVNBO8USVPU7eNtXp7w\packages\NetTopologySuite.2.5.0\lib\netstandard2.0\NetTopologySuite.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Buffers, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstakUBqVNBO8USVPU7eNtXp7w\packages\System.Buffers.4.5.1\lib\net461\System.Buffers.dll</HintPath>
    </Reference>
    <Reference Include="System.Data" />
    <Reference Include="System.Memory, Version=4.0.1.1, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstakUBqVNBO8USVPU7eNtXp7w\packages\System.Memory.4.5.4\lib\net461\System.Memory.dll</HintPath>
    </Reference>
    <Reference Include="System.Numerics" />
    <Reference Include="System.Numerics.Vectors, Version=4.1.4.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstakUBqVNBO8USVPU7eNtXp7w\packages\System.Numerics.Vectors.4.5.0\lib\net46\System.Numerics.Vectors.dll</HintPath>
    </Reference>
    <Reference Include="System.Runtime.CompilerServices.Unsafe, Version=4.0.4.1, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstakUBqVNBO8USVPU7eNtXp7w\packages\System.Runtime.CompilerServices.Unsafe.4.5.3\lib\net461\System.Runtime.CompilerServices.Unsafe.dll</HintPath>
    </Reference>
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="app.config" />
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_2518480992a84ad0830b3674bc6f3f32</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_2518480992a84ad0830b3674bc6f3f32</msb:DisplayName>
    <msb:ProjectId>{A040B803-C2C1-4AE3-BFF9-EC696B89B152}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_2518480992a84ad0830b3674bc6f3f32.csproj" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="app.config" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_2518480992a84ad0830b3674bc6f3f32")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_2518480992a84ad0830b3674bc6f3f32")]
[assembly: AssemblyCopyright("Copyright @ HP 2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2518480992a84ad0830b3674bc6f3f32.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2518480992a84ad0830b3674bc6f3f32.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2518480992a84ad0830b3674bc6f3f32.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_2518480992a84ad0830b3674bc6f3f32.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_2518480992a84ad0830b3674bc6f3f32.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[app.config]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Buffers" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.3.0" newVersion="4.0.3.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="System.Buffers" version="4.5.1" targetFramework="net47" />
</packages>]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_A0600C925BF046448676FC7A3C1E220C.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHO2UGUAAAAAAAAAAOAAIiALATAAACAAAAAIAAAAAAAAWj4A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAg+AABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAYB4AAAAgAAAAIAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAiAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAKAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA8
PgAAAAAAAEgAAAACAAUAuCQAAJgYAAABAAAAAAAAAFA9AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgCvAAAAAQAAEQIoEAAACnIBAABwcxEAAAoKBm8SAAAK
Jit7BxeNIQAAASUWHzudbxMAAAoMcy0AAAYlCBaabyQAAAYlCBeaKBQAAAooFQAACm8mAAAGJQgY
migUAAAKKBYAAApvKAAABiUIGZooFAAACigVAAAKbyoAAAYlAgIIGpooBAAABigFAAAGbywAAAYN
AnsBAAAECW8XAAAKBm8SAAAKJQs6eP///94KBiwGBm8YAAAK3CoAARAAAAIAEQCTpAAKAAAAAB4C
KBkAAAoqEzADAKgAAAACAAARcy4AAAYKcxoAAAoLcpgAAHADbwgAAAaMFAAAAQNvCgAABowUAAAB
KBsAAAoMCHK2AABwcroAAHBvHAAACgwGBwhvHQAACnUVAAABfQ4AAAQCewEAAAQG/gYvAAAGcx4A
AAooAQAAKw0JLDEDCW8jAAAGbw4AAAYDCW8lAAAGbwwAAAYDCW8nAAAGbxAAAAYDCW8pAAAGbxIA
AAYqA3K+AABwbw4AAAYqEzAFAGYAAAADAAARAxeNIQAAASUWHyCdbxMAAApzIAAACgoLFgwrOAcI
mheNIQAAASUWHyydbxMAAAoNCY5pGDMaCReacuQAAHAJFpooIQAAChMEBhEEbyIAAAoIF1gMCAeO
aTLCcugAAHAGKCMAAAoqAAATMAMAIgAAAAQAABFy7gAAcANyAgEAcCghAAAKCnMaAAAKBm8dAAAK
dREAAAEqSgJzJAAACn0BAAAEAigWAAAGKioCAwQFKCUAAAoqUgJ7JgAACgJ7JwAAChaUbygAAAoq
IgIWKCkAAAoqUgJ7JgAACgJ7JwAACheUbygAAAoqIgIXKCkAAAoqOgIYA4wUAAABKCoAAAoqWgMs
CAIYKCsAAAoqcggBAHBzLAAACnomAhkDKCoAAAoqWgMsCAIZKCsAAAoqcggBAHBzLAAACno6AhoD
jCQAAAEoKgAACipaAywIAhooKwAACipyCAEAcHMsAAAKejoCGwOMFAAAASgqAAAKKloDLAgCGygr
AAAKKnIIAQBwcywAAAp6HgIoLQAACioeAiguAAAKKn4CKC8AAAoCAnMaAAAGfQIAAAQCAnMbAAAG
fQMAAAQqkgRypQEAcBpvMAAACiwVAgUCAygxAAAKDgRzBwAABm8YAAAGKkorBwIDbxkAAAYDbxQA
AAYt8SoGKjoCKDIAAAoCA30EAAAEKjoCKDIAAAoCA30FAAAEKh4CKDIAAAoqrn4GAAAELR5ytQEA
cNAHAAACKDMAAApvNAAACnM1AAAKgAYAAAR+BgAABCoafgcAAAQqHgKABwAABCoafggAAAQqHgIo
NgAACioucyEAAAaACAAABCoeAnsJAAAEKiICA30JAAAEKh4CewoAAAQqIgIDfQoAAAQqHgJ7CwAA
BCoiAgN9CwAABCoeAnsMAAAEKiICA30MAAAEKh4Cew0AAAQqIgIDfQ0AAAQqSgNvKwAABgJ7DgAA
BG83AAAKKgAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAIQJAAAjfgAA8AkA
ALwJAAAjU3RyaW5ncwAAAACsEwAAKAIAACNVUwDUFQAAEAAAACNHVUlEAAAA5BUAALQCAAAjQmxv
YgAAAAAAAAACAAABVxWiCQkLAAAA+gEzABYAAAEAAAAuAAAACgAAAA4AAAAvAAAAHQAAADcAAAAg
AAAABAAAAAQAAAAUAAAAGgAAAAMAAAABAAAABgAAAAEAAAACAAAAAQAAAAAA1QQBAAAAAAAGALkD
RgcGAE0ERgcGAAUDMwcPALoHAAAGADIDRQYGAJwDRQYGAH0DRQYGADQERQYGANkDRQYGAPIDRQYG
AEkDRQYGAGQDiAQKAA0EEgIGAEEA0gAGAMEGngAOALcGigAOANkFyQcGAJ0ImAUGAM0CRgcGALcE
mAUOAP8IyQcKAAUHEgISAPYGEgIKAI4GEgIKAO8IEgIGAOgCMwcGABYHZgcGAIIGMAYWAKcCvwQW
ABkDvwQWAIECGwYGAM4GngAGALIGmAUGAK0EmAUGANkGmAUGAEgAmAUGAK4BmAUOAIkJyQcGAE4A
mAUaAKMBpgYGADMA0gAGAFcGmAUGAHEGmAUGADMCmAUGALoBmAUGAIAJRQYAAAAAVQAAAAAAAQAB
AAEAEACrBQAAEAABAAEAAQAQAOkGAABZAAIABwABABAA0QgAAGUAAgAWAAEAEACDCAAASQAEABoA
AQAQABQIAABJAAUAGwAAABAAbQflB0kABgAcAAABEABiCOUHfQAIACAAAwAQAOEFAABJAAkAIwAD
ARAAAQAAAEkADgAuAAEAewgyAQYAgwg6AQYAFAg+AQEA3whCAQEA3whCAREAnwVGAREAXAJKAREA
eAFOAQEADAFSAQEA9gBVAQEAOwFZAQEAVwFVAQEAIgFcAQYABQlgAVAgAAAAAMYAawQGAAEAHCEA
AAAAxgB2BAYAAQAkIQAAAADGAF0JZAEBANghAAAAAIEAHghqAQIATCIAAAAAgQDTBW8BAwB6IgAA
AACGGCYHBgAEAI0iAAAAAIYYJgfEAAQAmCIAAAAAhgiWAXUBBwCtIgAAAACGCCgF5wAHALYiAAAA
AIYIiAF1AQcAyyIAAAAAhggTBecABwDUIgAAAACGCLoAegEHAOMiAAAAAIYI/QSAAQgA+iIAAAAA
hgjwARAACQAEIwAAAACGCDwFgAEKABsjAAAAAIYIBgYBAAsAKiMAAAAAhghSBYABDABBIwAAAACG
CKoJegENAFAjAAAAAIYIbgWAAQ4AZyMAAAAAhgB0CecADwBvIwAAAACGAKQI5wAPAHcjAAAAAIYY
JgcGAA8AlyMAAAAAxgBQCYUBDwC8IwAAAADGAUkJZAETAM8jAAAAAMYBXQlkARQA0SMAAAAAhhgm
B48BFQDgIwAAAACGGCYHjwEWAO8jAAAAAIMYJgcGABcA9yMAAAAAkwgSB5UBFwAjJAAAAACTCEQC
MAAXACokAAAAAJMIUAKaARcAMiQAAAAAlgi2CKABGAA5JAAAAACGGCYHBgAYAEEkAAAAAJEYLAel
ARgATSQAAAAAhgjeASUAGABVJAAAAACGCOcBEAAYAF4kAAAAAIYIqAB1ARkAZiQAAAAAhgixAHoB
GQBvJAAAAACGCOgFqQEaAHckAAAAAIYI9wUBABoAgCQAAAAAhgiSCXUBGwCIJAAAAACGCJ4JegEb
AJEkAAAAAIYIuwWtARwAmSQAAAAAhgjHBbIBHADvIwAAAACGGCYHBgAdAO8jAAAAAIYYJgcGAB0A
oiQAAAAAgwAWALgBHQAAAAEAeAkAAAEAogQAAAEAMQgAAAEACwcAAAIAPQgAAAMAnAYAAAEAggQA
AAEAggQAAAEAggQAAAEAggQAAAEAggQAAAEAggQAAAEAggQAAAEAggQAAAEAggAAAAIA/wEAAAMA
CwcAAAQAnAYAAAEACwcAAAEAeAkAAAEA9QgAAAEA9QgAAAEAggQAAAEAggQAAAEAggQAAAEAggQA
AAEAggQAAAEAggQAAAEAMQcJACYHAQARACYHBgAZACYHCgApACYHEAAxACYHEAA5ACYHEABBACYH
EABJACYHEABRACYHEABZACYHEABhACYHEABpACYHBgCZACYHBgDRACYHBgDxACYHFQDJAGsEBgB5
ACYHEAABAQkCJQARAbAIKQDhAGwCMAChAKECNQAhAaECPgAMAPIATQApAZkCBgDJAHYEBgCBACYH
BgARAZYIXQARAXABZACBAO0AagAUACYHegBBAcIIgAAcACYHBgARAY8IrgAcAPIATQARAbYFtQAM
ACYHBgCxACYHxACxAAsHzgCxAD0I0gC5ALQE1gCxAIAF3ACxAI8F4QCxAIcFAQBRASYHEACxAHQJ
5wCxAKQI5wDJACYHBgARAWsI6wDJAFEI8wCRACYHBgBhAcwB+QBhAXwJAgHZACYHCAH5ACYHBgAx
AXIIEAEuAAsA4wEuABMA7AEuABsACwIuACMAFAIuACsAPQIuADMAPQIuADsAQwIuAEMAFAIuAEsA
SwIuAFMAPQIuAFsAZAJDAGMArgLjAHMArgIBAWsArgIhAWsArgJBAWsArgJDAWsArgJhAWsArgKB
AWsArgKhAWsArgKpAXsACwLJAXsACwJgBGsArgKABGsArgKgBGsArgLABGsArgLgBGsArgIABWsA
rgIgBWsArgJABWsArgJgBWsArgKABWsArgIbAFMAmgDAAAMAAQAHAA0ACAAPAAkAEAAAAJoBvgEA
ACwFwwEAAIwBvgEAABcFwwEAAL4AvgEAAAEFwwEAAPQBxwEAAEAFwwEAAAoGywEAAFYFwwEAAK4J
vgEAAHIFwwEAABYHzwEAAHkC1AEAAMkI2QEAAAQCxwEAAMQAvgEAABAGywEAALQJvgEAANkF3gEC
AAgAAwACAAkABQACAAoABwACAAsACQABAAwACwABAA0ADQABAA4ADwABAA8AEQABABAAEwABABEA
FQABABIAFwABABMAGQACAB0AGwACAB4AHQABAB8AHQACACAAHwACACMAIQABACQAIQACACUAIwAB
ACYAIwACACcAJQABACgAJQACACkAJwABACoAJwACACsAKQABACwAKQBGAHEAqAAEgAAAAQAAAAAA
AAAAAAAAAABeAAAABAAAAAAAAAAAAAAAFwHJAAAAAAAQAAAAAAAAAAAAAAAgAQsJAAAAAAIAAAAA
AAAAAAAAACkBvAIAAAAAEAAAAAAAAAAAAAAAIAEoCQAAAAAEAAAAAAAAAAAAAAAXAZgFAAAAAAQA
AAAAAAAAAAAAABcBOAIAAAAAAAAAAAEAAAB3BwAACQACAAoAAgA/AJUAAAAAAAA8PmNfX0Rpc3Bs
YXlDbGFzczNfMAA8SW5wdXQwX1Byb2Nlc3NJbnB1dFJvdz5iX18wAElFbnVtZXJhYmxlYDEATGlz
dGAxAEludDMyAEZ1bmNgMgA8TW9kdWxlPgBTQ19BMDYwMEM5MjVCRjA0NjQ0ODY3NkZDN0EzQzFF
MjIwQwBJbnB1dElEAE5ldFRvcG9sb2d5U3VpdGUuSU8AU3lzdGVtLklPAGdldF9BcmVhAHNldF9B
cmVhAHNldF9SZWdpb25BcmVhAG1zY29ybGliAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAFJl
YWQAQWRkADxBcmVhPmtfX0JhY2tpbmdGaWVsZAA8TmFtZT5rX19CYWNraW5nRmllbGQAPFBvbHln
b24+a19fQmFja2luZ0ZpZWxkADxQb3B1bGF0aW9uPmtfX0JhY2tpbmdGaWVsZAA8RGVuc2l0eT5r
X19CYWNraW5nRmllbGQAUmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0xvbmdpdHVkZQBnZXRf
TGF0aXR1ZGUARW51bWVyYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBl
RnJvbUhhbmRsZQBnZXRfTmFtZQBzZXRfTmFtZQBzZXRfUmVnaW9uTmFtZQBJbnB1dE5hbWUAUmVh
ZExpbmUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBTeXN0ZW0uQ29yZQBn
ZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAZ2V0X0ludmFyaWFudEN1bHR1
cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBQYXJzZQBFZGl0b3JCcm93c2FibGVT
dGF0ZQBOZXRUb3BvbG9neVN1aXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2Vy
Tm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVB
dHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0
ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRl
AEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJp
YnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUA
U1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0
cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1
dGUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBjb29yZGluYXRlc1N0cmluZwBHZXRE
ZWNpbWFsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ19BMDYwMEM5MjVCRjA0NjQ0ODY3NkZDN0Ez
QzFFMjIwQy5kbGwAc2V0X1JlZ2lvbkFyZWFfSXNOdWxsAGdldF9Mb25naXR1ZGVfSXNOdWxsAGdl
dF9MYXRpdHVkZV9Jc051bGwAc2V0X1JlZ2lvbk5hbWVfSXNOdWxsAHNldF9SZWdpb25Qb3B1bGF0
aW9uX0lzTnVsbABzZXRfUmVnaW9uRGVuc2l0eV9Jc051bGwAU2V0TnVsbABzZXRfSXRlbQBTeXN0
ZW0AcmVzb3VyY2VNYW4AU2NyaXB0TWFpbgBKb2luAGdldF9Qb2x5Z29uAHNldF9Qb2x5Z29uAENy
ZWF0ZVBvbHlnb24AUmVnaW9uAGdldF9Qb3B1bGF0aW9uAHNldF9Qb3B1bGF0aW9uAHNldF9SZWdp
b25Qb3B1bGF0aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5
c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNv
bgBDdWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABTeXN0ZW0uTGlucQBDaGFyAFdL
VFJlYWRlcgBTdHJlYW1SZWFkZXIAVGV4dFJlYWRlcgBJRm9ybWF0UHJvdmlkZXIASW5wdXQwQnVm
ZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9y
AC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNl
cwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzI1MTg0ODA5OTJhODRhZDA4MzBiMzY3NGJjNmYzZjMyLlBy
b3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBOZXRUb3BvbG9neVN1
aXRlLkdlb21ldHJpZXMAU0NfMjUxODQ4MDk5MmE4NGFkMDgzMGIzNjc0YmM2ZjNmMzIuUHJvcGVy
dGllcwBWYXJpYWJsZXMAUmV2ZXJzZUNvb3JkaW5hdGVzAGNvb3JkaW5hdGVzAEJ1ZmZlckNvbHVt
bkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29udGFpbnMAcmVnaW9u
cwBDb25uZWN0aW9ucwBDb25jYXQARm9ybWF0AE9iamVjdABFbmRPZlJvd3NldABTcGxpdABnZXRf
RGVmYXVsdABGaXJzdE9yRGVmYXVsdABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3Jp
cHRDb21wb25lbnQAUG9pbnQAcG9pbnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABNaWNy
b3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Q
cm9jZXNzSW5wdXRSb3cATmV4dFJvdwBnZXRfQXNzZW1ibHkAR2VvbWV0cnkAZ2V0X0RlbnNpdHkA
c2V0X0RlbnNpdHkAc2V0X1JlZ2lvbkRlbnNpdHkAAICVQwA6AFwAVQBzAGUAcgBzAFwAUgBlAHoA
ZQByAHcAbwB3AHkAXABEAGUAcwBrAHQAbwBwAFwARQBuAGcAaQBuAGUAZQByAGkAbgBnACAAVABo
AGUAcwBpAHMAXABEAGEAdABhAHMAZQB0AHMAXABSAGUAZwBpAG8AbgBzAC0AQgBlAGkAagBpAG4A
ZwAuAGMAcwB2AAEdUABPAEkATgBUACgAewAwAH0AIAB7ADEAfQApAAADLAAAAy4AACVPAHUAdABz
AGkAZABlACAAbwBmACAAQgBlAGkAagBpAG4AZwAAAyAAAAUsACAAABNQAE8ATABZAEcATwBOACgA
KAAABSkAKQAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAA
YgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBs
AHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA9JAG4A
cAB1AHQAIAAwAABxUwBDAF8AMgA1ADEAOAA0ADgAMAA5ADkAMgBhADgANABhAGQAMAA4ADMAMABi
ADMANgA3ADQAYgBjADYAZgAzAGYAMwAyAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8A
dQByAGMAZQBzAAAArhWSLkiYj0esRjKZAJ8BpAAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERdQkH
BBI9Dh0OEiQDIAAOBiABHQ4dAwQAABJxCAACEVEOEoCNBwACCA4SgI0GFRI5ARIkBSABARMACQcE
EigSQQ4SJAYAAw4OHBwFIAIODg4GIAESgJkOCBUSgJ0CEiQCBSACARwYFBABAh4AFRKApQEeABUS
gJ0CHgACBAoBEiQNBwUVEjkBDh0OCB0ODgUVEjkBDgYAAw4ODg4KAAIODhUSgKUBDgMHAQ4JIAMB
El0dCBJhAwYSXQMGHQgFIAERUQgEIAECCAUgAgEIHAMgAAIHIAICDhGArQUgAR0ICAgAARKAsRGA
tQUgABKAuQcgAgEOEoC5BiABAhKAmQi3elxWGTTgiQiJhF3NgIDMkQj1gKBQFuutoQcGFRI5ARIk
AwYSFAMGEhgDBhJlAwYSbQMGEnEDBhIgAgYOAwYRUQIGCAMGEkUDBhJVBSABARIMBCABDg4FIAES
RQ4EIAARUQUgAQERUQQgAQECCSAEAQgOEl0SYQUgAQESZQQAABJtBQABARJxBAAAEiADAAABAyAA
CAQgABJFBSABARJFBSABAhIkBCgAEVEDKAACAygADgMoAAgECAASbQQIABJxBAgAEiAEKAASRQgB
AAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfMjUx
ODQ4MDk5MmE4NGFkMDgzMGIzNjc0YmM2ZjNmMzIAAAUBAAAAAAcBAAJIUAAAGAEAE0NvcHlyaWdo
dCBAIEhQIDIwMjMAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3Jr
RGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0
ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBD
dWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJl
c291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAADA+AAAAAAAA
AAAAAEo+AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8PgAAAAAAAAAAAAAAAF9Db3JEbGxNYWlu
AG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AAD0AwAAAAAAAAAAAAD0AzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAEVAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAMAMAAAEAMAAwADAAMAAwADQA
YgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACYAAwABAEMAbwBtAHAAYQBuAHkATgBh
AG0AZQAAAAAASABQAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBDAF8AMgA1ADEAOAA0ADgAMAA5ADkAMgBhADgANABhAGQAMAA4ADMAMABiADMANgA3ADQAYgBj
ADYAZgAzAGYAMwAyAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAA
LgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBBADAANgAwADAAQwA5
ADIANQBCAEYAMAA0ADYANAA0ADgANgA3ADYARgBDADcAQQAzAEMAMQBFADIAMgAwAEMALgBkAGwA
bAAAAEwAFAABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0
ACAAQAAgAEgAUAAgADIAMAAyADMAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsA
cwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwBB
ADAANgAwADAAQwA5ADIANQBCAEYAMAA0ADYANAA0ADgANgA3ADYARgBDADcAQQAzAEMAMQBFADIA
MgAwAEMALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AMgA1
ADEAOAA0ADgAMAA5ADkAMgBhADgANABhAGQAMAA4ADMAMABiADMANgA3ADQAYgBjADYAZgAzAGYA
MwAyAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAA
ADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAXD4AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_a0600c925bf046448676fc7a3c1e220c</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">5B</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Geolife Data Flow\Add region.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Geolife Data Flow\Add region.Inputs[Input 0].Columns[Latitude]"
                      cachedDataType="decimal"
                      cachedName="Latitude"
                      lineageId="Package\Geolife Data Flow\Script Component.Outputs[Output 0].Columns[Latitude]" />
                    <inputColumn
                      refId="Package\Geolife Data Flow\Add region.Inputs[Input 0].Columns[Longitude]"
                      cachedDataType="decimal"
                      cachedName="Longitude"
                      lineageId="Package\Geolife Data Flow\Script Component.Outputs[Output 0].Columns[Longitude]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Geolife Data Flow\Add region.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Geolife Data Flow\Add region.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Geolife Data Flow\Add region.Outputs[Output 0].Columns[RegionArea]"
                      dataType="decimal"
                      lineageId="Package\Geolife Data Flow\Add region.Outputs[Output 0].Columns[RegionArea]"
                      name="RegionArea" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Add region.Outputs[Output 0].Columns[RegionName]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Geolife Data Flow\Add region.Outputs[Output 0].Columns[RegionName]"
                      name="RegionName" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Add region.Outputs[Output 0].Columns[RegionPopulation]"
                      dataType="i4"
                      lineageId="Package\Geolife Data Flow\Add region.Outputs[Output 0].Columns[RegionPopulation]"
                      name="RegionPopulation" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Add region.Outputs[Output 0].Columns[RegionDensity]"
                      dataType="decimal"
                      lineageId="Package\Geolife Data Flow\Add region.Outputs[Output 0].Columns[RegionDensity]"
                      name="RegionDensity" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Geolife Data Flow\Add weather"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Add weather"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_00cea7baa4a54ec981a668d93eed78b2")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_00cea7baa4a54ec981a668d93eed78b2")]
[assembly: AssemblyCopyright("Copyright @ HP 2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Globalization;
using System.IO;
using System.Linq;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    

    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
        LoadFile("C:\\Users\\Rezerwowy\\Desktop\\Engineering Thesis\\Datasets\\Weather_China_2007_2010.csv");
        LoadFile("C:\\Users\\Rezerwowy\\Desktop\\Engineering Thesis\\Datasets\\Weather_China_2011_2012.csv");

    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>

    List<Measurement> measurements = new List<Measurement>();
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        /*DateTime cutoffDate = new DateTime(2010, 12, 31);
        if (Row.StartDate <= cutoffDate && Row.EndDate <= cutoffDate)
            LoadFile("C:\\Users\\Rezerwowy\\Desktop\\Engineering Thesis\\Datasets\\Weather_China_2007_2010.csv");
        else if (Row.StartDate > cutoffDate && Row.EndDate > cutoffDate)
            LoadFile("C:\\Users\\Rezerwowy\\Desktop\\Engineering Thesis\\Datasets\\Weather_China_2011_2012.csv");
        else
        {
            LoadFile("C:\\Users\\Rezerwowy\\Desktop\\Engineering Thesis\\Datasets\\Weather_China_2007_2010.csv");
            LoadFile("C:\\Users\\Rezerwowy\\Desktop\\Engineering Thesis\\Datasets\\Weather_China_2011_2012.csv");
        }*/

        List<Measurement> measurementsRange = measurements.Where(m =>
        m.MeasurementDate.Date >= Row.StartDate.Date && m.MeasurementDate.Date <= Row.EndDate.Date).OrderBy(m => m.MeasurementDate).ToList();

        if (measurementsRange.Count == 1)
        {
            Row.Temperature = measurementsRange.First().Temperature;
            Row.Precipitation = Row.Duration / 1440 * measurementsRange.First().Precipitation;
        }
        else
        {
            decimal temperature = 0;
            decimal precipitation = 0;

            for (int i = 0; i < measurementsRange.Count; i++)
            {
                TimeSpan timeSpan;
                if (i == 0)
                    timeSpan = measurementsRange[i].MeasurementDate.AddDays(1) - Row.StartDate;
                else if (i == measurementsRange.Count - 1)
                    timeSpan = Row.EndDate - measurementsRange[i].MeasurementDate;
                else
                    timeSpan = new TimeSpan(24, 0, 0);

                temperature += (decimal)timeSpan.TotalMinutes / Row.Duration * measurementsRange[i].Temperature;
                precipitation += (decimal)timeSpan.TotalMinutes / 1440 * measurementsRange[i].Precipitation;
            }
            
            Row.Temperature = temperature;
            Row.Precipitation = precipitation;
        }
    }

    private void LoadFile(string filePath)
    {
        using (StreamReader reader = new StreamReader(filePath))
        {
            string line;
            reader.ReadLine();

            while ((line = reader.ReadLine()) != null)
            {
                line = line.Replace("\"", "");
                string[] fields = line.Split(',');
                if (fields[1] != "BEIJING")
                    continue;

                Measurement measurement = new Measurement
                {
                    Temperature = decimal.Parse(fields[9], CultureInfo.InvariantCulture),
                    Precipitation = decimal.Parse(fields[7], CultureInfo.InvariantCulture),
                    MeasurementDate = DateTime.ParseExact(fields[6], "yyyy-MM-dd", CultureInfo.InvariantCulture)
                };

                measurements.Add(measurement);

            }
        }
    }

    private class Measurement
    {
        public DateTime MeasurementDate { get; set; }
        public decimal Precipitation { get; set; }
        public decimal Temperature { get; set; }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public DateTime StartDate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[0]);
        }
    }
    public bool StartDate_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public DateTime EndDate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[1]);
        }
    }
    public bool EndDate_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Decimal Duration
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[2]);
        }
    }
    public bool Duration_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Decimal Temperature
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Temperature_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Precipitation
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Precipitation_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_00cea7baa4a54ec981a668d93eed78b2.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{06c2d717-b9a3-46b0-9bff-4a5b0fcb5a5b}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_00cea7baa4a54ec981a668d93eed78b2</RootNamespace>
    <AssemblyName>SC_00cea7baa4a54ec981a668d93eed78b2</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_00cea7baa4a54ec981a668d93eed78b2" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_00cea7baa4a54ec981a668d93eed78b2</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_00cea7baa4a54ec981a668d93eed78b2</msb:DisplayName>
    <msb:ProjectId>{77550107-621D-4805-81AC-194F2A19E8AB}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_00cea7baa4a54ec981a668d93eed78b2.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_00cea7baa4a54ec981a668d93eed78b2.Properties.Settings.get_Default():SC_00cea7baa4a54ec981a668d93eed78b2.Properties.Sett" +
    "ings")]

namespace SC_00cea7baa4a54ec981a668d93eed78b2.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_00cea7baa4a54ec981a668d93eed78b2.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_00cea7baa4a54ec981a668d93eed78b2.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_00cea7baa4a54ec981a668d93eed78b2.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_00cea7baa4a54ec981a668d93eed78b2.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_00cea7baa4a54ec981a668d93eed78b2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_00cea7baa4a54ec981a668d93eed78b2.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANWXbGUAAAAAAAAAAOAAIiALATAAACAAAAAIAAAAAAAAWj8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAAg/AABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAYB8AAAAgAAAAIAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAiAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAKAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAA8
PwAAAAAAAEgAAAACAAUAZCUAAOwYAAABAAAAAAAAAFA+AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAHYCKBAAAAoCcgEAAHAoBAAABgJyqAAAcCgEAAAGKh4CKBEA
AAoqAAATMAQAvwEAAAEAABFzKgAABgoGA30OAAAEAnsBAAAEBv4GKwAABnMSAAAKKAEAACt+DQAA
BCUtFyZ+DAAABP4GKQAABnMUAAAKJYANAAAEKAIAACsoAwAAKwsHbxcAAAoXM0wGew4AAAQHKAQA
ACtvJAAABm8NAAAGBnsOAAAEBnsOAAAEbwsAAAYgoAUAAHMZAAAKKBoAAAoHKAQAACtvIgAABigb
AAAKbw8AAAYqEgL+FQ8AAAESA/4VDwAAARYTBDjeAAAAEQQtMwcRBG8cAAAKbyAAAAYTBhIGIwAA
AAAAAPA/KB0AAAoGew4AAARvBwAABigeAAAKEwUrOBEEB28XAAAKF1kzIQZ7DgAABG8JAAAGBxEE
bxwAAApvIAAABigeAAAKEwUrCxIFHxgWFigfAAAKCBIFKCAAAAooIQAACgZ7DgAABG8LAAAGKBoA
AAoHEQRvHAAACm8kAAAGKBsAAAooIgAACgwJEgUoIAAACighAAAKIKAFAABzGQAACigaAAAKBxEE
bxwAAApvIgAABigbAAAKKCIAAAoNEQQXWBMEEQQHbxcAAAo/Ff///wZ7DgAABAhvDQAABgZ7DgAA
BAlvDwAABioAGzAFALAAAAACAAARA3MjAAAKCgZvJAAACiY4gwAAAAdyTwEAcHJTAQBwbyUAAAoL
BxeNJQAAASUWHyydbyYAAAoMCBeaclUBAHAoJwAACi1RcyYAAAYlCB8JmigoAAAKKCkAAApvJQAA
BiUIHZooKAAACigpAAAKbyMAAAYlCByacmUBAHAoKAAACigqAAAKbyEAAAYNAnsBAAAECW8rAAAK
Bm8kAAAKJQs6cP///94KBiwGBm8sAAAK3CoBEAAAAgAHAJ6lAAoAAAAASgJzLQAACn0BAAAEAigT
AAAGKioCAwQFKC4AAAoqUgJ7LwAACgJ7MAAAChaUbzEAAAoqIgIWKDIAAAoqUgJ7LwAACgJ7MAAA
CheUbzEAAAoqIgIXKDIAAAoqUgJ7LwAACgJ7MAAAChiUbzMAAAoqIgIYKDIAAAoqOgIZA4wPAAAB
KDQAAAoqWgMsCAIZKDUAAAoqcnsBAHBzNgAACno6AhoDjA8AAAEoNAAACipaAywIAhooNQAACipy
ewEAcHM2AAAKeh4CKDcAAAoqHgIoOAAACip+Aig5AAAKAgJzFwAABn0CAAAEAgJzGAAABn0DAAAE
KpIEchgCAHAabzoAAAosFQIFAgMoOwAACg4EcwYAAAZvFQAABipKKwcCA28WAAAGA28RAAAGLfEq
Bio6Aig8AAAKAgN9BAAABCo6Aig8AAAKAgN9BQAABCoeAig8AAAKKq5+BgAABC0ecigCAHDQBwAA
Aig9AAAKbz4AAApzPwAACoAGAAAEfgYAAAQqGn4HAAAEKh4CgAcAAAQqGn4IAAAEKh4CKEAAAAoq
LnMeAAAGgAgAAAQqHgJ7CQAABCoiAgN9CQAABCoeAnsKAAAEKiICA30KAAAEKh4CewsAAAQqIgID
fQsAAAQqLnMoAAAGgAwAAAQqHgNvIAAABioAAAATMAIAUQAAAAMAABEDbyAAAAYKEgAoQQAACgJ7
DgAABG8HAAAGChIAKEEAAAooQgAACiwnA28gAAAGChIAKEEAAAoCew4AAARvCQAABgoSAChBAAAK
KEMAAAoqFioAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAAAQCQAAI34AAHwJ
AAC8CQAAI1N0cmluZ3MAAAAAOBMAAJwCAAAjVVMA1BUAABAAAAAjR1VJRAAAAOQVAAAIAwAAI0Js
b2IAAAAAAAAAAgAAAVcVogkJCwAAAPoBMwAWAAABAAAALAAAAAsAAAAOAAAAKwAAABcAAABDAAAA
GwAAAAMAAAAEAAAAEAAAABQAAAADAAAAAQAAAAUAAAABAAAAAwAAAAQAAAAAAB0FAQAAAAAABgDa
A2sHBgBuBGsHBgAmA1gHDwDfBwAABgBTA2gGBgC9A2gGBgCeA2gGBgBVBGgGBgD6A2gGBgATBGgG
BgBqA2gGBgCFA6kECgAuBNMBBgB+ANwABgDWBMsFBgDeBcsFBgDBAcsFBgDmBsUABgCZCMsFBgDu
AmsHBgCFAMsFCgAqB9MBDgAbB9MBCgC9BtMBCgD0CNMBBgAJA1gHBgA7B4sHBgCxBkQGEgDZAgcF
EgA6AwcFEgBoAgsGFgBwAdUGBgBbANwAFgBpANUGBgDzBsUABgDDBMsFBgDhBssFBgD+BssFBgB7
AcsFBgCGBssFBgCgBssFBgD0AcsFBgCHAcsFBgCYCWgGAAAAALQAAAAAAAEAAQABABAA5wUAABAA
AQABAAEAEAAOBwAAWQACAAYAAQAQANYIAABlAAIAEwABABAAbQgAAE0ABAAXAAEAEAAdCAAATQAF
ABgAAAAQAJIH7gdNAAYAGQAAARAAXQjuB30ACAAdAAMAEADKCAAATQAJACAAAyEQANgAAABNAAwA
JwADARAAAQAAAE0ADgAqAAEAeQiSAQYAbQiaAQYAHQieAQEA5AiiAQEA5AiiAREA0gWmAREAQwKq
AREAYAGuAQEAGAGyAQEAOQG2AQEA+wC2ATYAsAC6ARYAMwC+AQYAiAnIAVAgAAAAAMYAjAQGAAEA
biAAAAAAxgCXBAYAAQB4IAAAAADGAG0JzAEBAEQiAAAAAIEAqwEQAAIAECMAAAAAhhhLBwYAAwAj
IwAAAACGGEsHHAEDAC4jAAAAAIYIywJzAQYAQyMAAAAAhghvBUUBBgBMIwAAAACGCJcCcwEGAGEj
AAAAAIYIXAVFAQYAaiMAAAAAhgj+BdIBBgB/IwAAAACGCIQFRQEGAIgjAAAAAIYIGwLXAQYAlyMA
AAAAhghFBd0BBwCuIwAAAACGCDIG1wEIAL0jAAAAAIYImAXdAQkA1CMAAAAAhgCECUUBCgDcIwAA
AACGAKAIRQEKAOQjAAAAAIYYSwcGAAoABCQAAAAAxgBgCeIBCgApJAAAAADGAVkJzAEOADwkAAAA
AMYBbQnMAQ8APiQAAAAAhhhLB+wBEABNJAAAAACGGEsH7AERAFwkAAAAAIMYSwcGABIAZCQAAAAA
kwg3B/IBEgCQJAAAAACTCCsC/gASAJckAAAAAJMINwL3ARIAnyQAAAAAlgi+CP0BEwCmJAAAAACG
GEsHBgATAK4kAAAAAJEYUQcCAhMAuiQAAAAAhgijAnMBEwDCJAAAAACGCLcCBgITAMskAAAAAIYI
IAbSARQA0yQAAAAAhggyBtcBFADcJAAAAACGCAsC0gEVAOQkAAAAAIYIGwLXARUAXCQAAAAAhhhL
BwYAFgDtJAAAAACRGFEHAgIWAFwkAAAAAIYYSwcGABYA+SQAAAAAgwA8AAwCFgBcJAAAAACGGEsH
BgAXAAQlAAAAAIMAFgATAhcAAAABAIgJAAABAMoEAAABADAHAAACADgIAAADAMsGAAABAKMEAAAB
AKMEAAABAKMEAAABAKMEAAABAL0AAAACALQBAAADADAHAAAEAMsGAAABADAHAAABAIgJAAABAPoI
AAABAPoIAAABAKMEAAABAKMEAAABAKMEAAABAKMEAAABANAFAAABANAFCQBLBwEAEQBLBwYAGQBL
BwoAKQBLBxAAMQBLBxAAOQBLBxAAQQBLBxAASQBLBxAAUQBLBxAAWQBLBxAAYQBLBxAAaQBLBwYA
oQBLBwYA0QBLBwYA8QBLBxUAyQCMBAYAyQCXBAYADABLBzcAAQH5AT0AFABLBzcAAQGMCWQAAQEr
CYUAHAAECZ0AAQFTCaEAeQBLBwEAeQDyBa4AeQChCa4AHAC5BbcAiQCGCL0AiQBZBsMAgQBLB8wA
gQAnCNMAeQCsCNcAeQB6Bq4AkQBLBxAAGQHKAecAIQFYAesAIQG4CPEAIQGtCfgA4QBTAv4AeQCI
AgMBiQCOCAwBHAD3ABYBOQGAAgYAHABLBwYAsQBLBxwBsQAwByYBsQA4CCoBuQC+AS4BsQCqBTQB
uQDTBDkBsQDCBT8BsQCxBQEAQQFLBxAAsQCECUUBsQCgCEUByQBLBwYAIQFmCEkByQBMCFEBmQBL
BwYAUQGZAVcBUQGUCWAB2QBLB2YB+QBLBwYAiQCOAnMBiQDeBHgBiQD0BHgBLgALADYCLgATAD8C
LgAbAF4CLgAjAGcCLgArAJACLgAzAJACLgA7AJYCLgBDAGcCLgBLAJ4CLgBTAJACLgBbALcCQwBj
AAED4wBzAAEDAQFrAAEDIQFrAAEDQQFrAAEDQwFrAAEDYQFrAAEDYwFrAAEDaQF7AF4CiQF7AF4C
AARrAAEDIARrAAEDQARrAAEDYARrAAEDgARrAAEDoARrAAEDGwDdAG4BAwABAAcACwAIAA0ACQAO
AAAAzwIZAgAAcwUeAgAAmwIZAgAAYAUeAgAAAgYiAgAAiAUeAgAAHwIiAgAASQUeAgAANgYiAgAA
nAUeAgAAOwcnAgAAYAIsAgAAwggxAgAAuwIZAgAANgYiAgAAHwIiAgIABwADAAIACAAFAAIACQAH
AAIACgAJAAIACwALAAIADAANAAEADQAPAAEADgARAAEADwATAAEAEAAVAAIAGgAXAAIAGwAZAAEA
HAAZAAIAHQAbAAIAIAAdAAEAIQAdAAIAIgAfAAEAIwAfAAIAJAAhAAEAJQAhAC8AWwCWAASAAAAB
AAAAAAAAAAAAAAAAAIwAAAAEAAAAAAAAAAAAAACAAc8AAAAAABAAAAAAAAAAAAAAAIkBDgkAAAAA
EAAAAAAAAAAAAAAAiQEyCQAAAAAEAAAAAAAAAAAAAACAAcsFAAAAAAQAAAAAAAAAAAAAAIAB/wEA
AAAAAAAAAAEAAACcBwAACQACAAoAAgALAAIAJwBWACsAfgAtAFYAMQBWAAAAADw+Y19fRGlzcGxh
eUNsYXNzM18wADxJbnB1dDBfUHJvY2Vzc0lucHV0Um93PmJfXzAAPD45X18zXzEAPElucHV0MF9Q
cm9jZXNzSW5wdXRSb3c+Yl9fM18xAElFbnVtZXJhYmxlYDEASU9yZGVyZWRFbnVtZXJhYmxlYDEA
TGlzdGAxAEZ1bmNgMgBTQ18wMGNlYTdiYWE0YTU0ZWM5ODFhNjY4ZDkzZWVkNzhiMgA8PjkAPE1v
ZHVsZT4ASW5wdXRJRABTeXN0ZW0uSU8AbXNjb3JsaWIAPD5jAFN5c3RlbS5Db2xsZWN0aW9ucy5H
ZW5lcmljAEFkZAA8VGVtcGVyYXR1cmU+a19fQmFja2luZ0ZpZWxkADxNZWFzdXJlbWVudERhdGU+
a19fQmFja2luZ0ZpZWxkADxQcmVjaXBpdGF0aW9uPmtfX0JhY2tpbmdGaWVsZABSZXBsYWNlAGRl
ZmF1bHRJbnN0YW5jZQBFbnVtZXJhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdl
dFR5cGVGcm9tSGFuZGxlAExvYWRGaWxlAElucHV0TmFtZQBHZXREYXRlVGltZQBSZWFkTGluZQBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAFdoZXJlAFN5c3RlbS5Db3JlAGdl
dF9UZW1wZXJhdHVyZQBzZXRfVGVtcGVyYXR1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVz
b3VyY2VDdWx0dXJlAGdldF9JbnZhcmlhbnRDdWx0dXJlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNl
AERpc3Bvc2UAUGFyc2UAZ2V0X0RhdGUAZ2V0X0VuZERhdGUAZ2V0X01lYXN1cmVtZW50RGF0ZQBz
ZXRfTWVhc3VyZW1lbnREYXRlAGdldF9TdGFydERhdGUARWRpdG9yQnJvd3NhYmxlU3RhdGUAQ29t
cGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBEZWJ1
Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRpdGxlQXR0
cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0
ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJp
YnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJp
YnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQ
b2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxp
dHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5W
ZXJzaW9uaW5nAFN0cmluZwBmaWxlUGF0aABHZXREZWNpbWFsAG9wX0dyZWF0ZXJUaGFuT3JFcXVh
bABvcF9MZXNzVGhhbk9yRXF1YWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDXzAwY2VhN2JhYTRh
NTRlYzk4MWE2NjhkOTNlZWQ3OGIyLmRsbABzZXRfVGVtcGVyYXR1cmVfSXNOdWxsAGdldF9FbmRE
YXRlX0lzTnVsbABnZXRfU3RhcnREYXRlX0lzTnVsbABnZXRfRHVyYXRpb25fSXNOdWxsAHNldF9Q
cmVjaXBpdGF0aW9uX0lzTnVsbABTZXROdWxsAGdldF9JdGVtAHNldF9JdGVtAFN5c3RlbQByZXNv
dXJjZU1hbgBUaW1lU3BhbgBTY3JpcHRNYWluAG9wX0RpdmlzaW9uAGdldF9EdXJhdGlvbgBTeXN0
ZW0uQ29uZmlndXJhdGlvbgBnZXRfUHJlY2lwaXRhdGlvbgBzZXRfUHJlY2lwaXRhdGlvbgBTeXN0
ZW0uR2xvYmFsaXphdGlvbgBvcF9TdWJ0cmFjdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBvcF9BZGRp
dGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUlu
Zm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAAU3lzdGVtLkxpbnEAQ2hhcgBTdHJlYW1SZWFkZXIA
VGV4dFJlYWRlcgBJRm9ybWF0UHJvdmlkZXIASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNj
cmlwdEJ1ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25v
c3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFND
XzAwY2VhN2JhYTRhNTRlYzk4MWE2NjhkOTNlZWQ3OGIyLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJl
c291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ18wMGNlYTdiYWE0YTU0ZWM5ODFhNjY4ZDkzZWVkNzhi
Mi5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBnZXRfVG90YWxNaW51dGVzAEJ1ZmZlckNvbHVtbkluZGV4
ZXMAR2V0Q29sdW1uSW5kZXhlcwBTZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAbWVhc3VyZW1l
bnRzAEFkZERheXMAUGFyc2VFeGFjdABPYmplY3QARW5kT2ZSb3dzZXQAb3BfRXhwbGljaXQAU3Bs
aXQAZ2V0X0RlZmF1bHQATWVhc3VyZW1lbnQAVXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQA
U2NyaXB0Q29tcG9uZW50AGdldF9Db3VudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AFRv
TGlzdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABGaXJzdABJbnB1dDBfUHJvY2Vz
c0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXRSb3cATmV4dFJvdwBPcmRlckJ5AGdldF9Bc3NlbWJs
eQBvcF9NdWx0aXBseQBvcF9JbmVxdWFsaXR5AAAAgKVDADoAXABVAHMAZQByAHMAXABSAGUAegBl
AHIAdwBvAHcAeQBcAEQAZQBzAGsAdABvAHAAXABFAG4AZwBpAG4AZQBlAHIAaQBuAGcAIABUAGgA
ZQBzAGkAcwBcAEQAYQB0AGEAcwBlAHQAcwBcAFcAZQBhAHQAaABlAHIAXwBDAGgAaQBuAGEAXwAy
ADAAMAA3AF8AMgAwADEAMAAuAGMAcwB2AACApUMAOgBcAFUAcwBlAHIAcwBcAFIAZQB6AGUAcgB3
AG8AdwB5AFwARABlAHMAawB0AG8AcABcAEUAbgBnAGkAbgBlAGUAcgBpAG4AZwAgAFQAaABlAHMA
aQBzAFwARABhAHQAYQBzAGUAdABzAFwAVwBlAGEAdABoAGUAcgBfAEMAaABpAG4AYQBfADIAMAAx
ADEAXwAyADAAMQAyAC4AYwBzAHYAAAMiAAABAA9CAEUASQBKAEkATgBHAAAVeQB5AHkAeQAtAE0A
TQAtAGQAZAABgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAA
YgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBs
AHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA9JAG4A
cAB1AHQAIAAwAABxUwBDAF8AMAAwAGMAZQBhADcAYgBhAGEANABhADUANABlAGMAOQA4ADEAYQA2
ADYAOABkADkAMwBlAGUAZAA3ADgAYgAyAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8A
dQByAGMAZQBzAAAAAFues4aU8WdIjoLAWCSLjmMABCABAQgDIAABBSABARERBCABAQ4FIAEBEXUT
BwcSLBUSOQESJBE9ET0IEUERRQcVElUCEiQCBSACARwYGBABAhUSgIUBHgAVEoCFAR4AFRJVAh4A
AgQKARIkCBUSVQISJBFFGRACAhUSgIkBHgAVEoCFAR4AFRJVAh4AHgEGCgISJBFFEBABARUSOQEe
ABUSgIUBHgAGFRI5ARIkAyAACAwQAQEeABUSgIUBHgAIAAIRPRE9ET0FIAETAAgFIAERRQ0IAAIR
QRFFEUUGIAMBCAgIAyAADQUAARE9DQkHBBJJDh0OEiQDIAAOBSACDg4OBiABHQ4dAwUAAgIODgQA
ABJxCAACET0OEoCZCQADEUUODhKAmQUgAQETAAkgAwESXR0IEmEDBhJdAwYdCAUgARFFCAQgAQII
BSABET0IBSACAQgcAyAAAgcgAgIOEYClBSABHQgICAABEoCpEYCtBSAAEoCxByACAQ4SgLEEBwER
RQQgABFFBwACAhFFEUUIt3pcVhk04IkIiYRdzYCAzJEHBhUSOQESJAMGEhQDBhIYAwYSZQMGEm0D
BhJxAwYSIAMGEUUDBhE9AwYSKAkGFRJVAhIkEUUDBhIMBSABARIMBCAAET0FIAEBET0EIAEBAgkg
BAEIDhJdEmEFIAEBEmUEAAASbQUAAQEScQQAABIgAwAAAQUgAQERRQYgARFFEiQFIAECEiQEKAAR
RQMoAAIEKAARPQQIABJtBAgAEnEECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlv
blRocm93cwEIAQACAAAAAAAoAQAjU0NfMDBjZWE3YmFhNGE1NGVjOTgxYTY2OGQ5M2VlZDc4YjIA
AAUBAAAAAAcBAAJIUAAAGAEAE0NvcHlyaWdodCBAIEhQIDIwMjMAAEkBABouTkVURnJhbWV3b3Jr
LFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43
BAEAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwg
bXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tl
bj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAA
AAAAAAAAAAAAUEFEUEFEULQAAAAwPwAAAAAAAAAAAABKPwAAACAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAPD8AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AAD0AwAAAAAAAAAAAAD0AzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAEVAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAMAMAAAEAMAAwADAAMAAwADQA
YgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACYAAwABAEMAbwBtAHAAYQBuAHkATgBh
AG0AZQAAAAAASABQAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBDAF8AMAAwAGMAZQBhADcAYgBhAGEANABhADUANABlAGMAOQA4ADEAYQA2ADYAOABkADkAMwBl
AGUAZAA3ADgAYgAyAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAA
LgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwAwADAAYwBlAGEANwBi
AGEAYQA0AGEANQA0AGUAYwA5ADgAMQBhADYANgA4AGQAOQAzAGUAZQBkADcAOABiADIALgBkAGwA
bAAAAEwAFAABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0
ACAAQAAgAEgAUAAgADIAMAAyADMAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsA
cwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwAw
ADAAYwBlAGEANwBiAGEAYQA0AGEANQA0AGUAYwA5ADgAMQBhADYANgA4AGQAOQAzAGUAZQBkADcA
OABiADIALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AMAAw
AGMAZQBhADcAYgBhAGEANABhADUANABlAGMAOQA4ADEAYQA2ADYAOABkADkAMwBlAGUAZAA3ADgA
YgAyAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAA
ADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAXD8AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_00cea7baa4a54ec981a668d93eed78b2</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">F4</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Geolife Data Flow\Add weather.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Geolife Data Flow\Add weather.Inputs[Input 0].Columns[StartDate]"
                      cachedDataType="date"
                      cachedName="StartDate"
                      lineageId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[StartDate]" />
                    <inputColumn
                      refId="Package\Geolife Data Flow\Add weather.Inputs[Input 0].Columns[EndDate]"
                      cachedDataType="date"
                      cachedName="EndDate"
                      lineageId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[EndDate]" />
                    <inputColumn
                      refId="Package\Geolife Data Flow\Add weather.Inputs[Input 0].Columns[Duration]"
                      cachedDataType="decimal"
                      cachedName="Duration"
                      lineageId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[Duration]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Geolife Data Flow\Add weather.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Geolife Data Flow\Add weather.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Geolife Data Flow\Add weather.Outputs[Output 0].Columns[Temperature]"
                      dataType="decimal"
                      lineageId="Package\Geolife Data Flow\Add weather.Outputs[Output 0].Columns[Temperature]"
                      name="Temperature" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Add weather.Outputs[Output 0].Columns[Precipitation]"
                      dataType="decimal"
                      lineageId="Package\Geolife Data Flow\Add weather.Outputs[Output 0].Columns[Precipitation]"
                      name="Precipitation" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Geolife Data Flow\CosmosDB Destination"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="KingswaySoft Inc.; http://www.kingswaysoft.com; support@kingswaysoft.com; Copyright (c) 2021 KingswaySoft Inc."
              description="Write data to a CosmosDB database."
              name="CosmosDB Destination"
              usesDispositions="true"
              validateExternalMetadata="False"
              version="2">
              <properties>
                <property
                  dataType="System.String"
                  name="Design">[{"NodeType":2,"SourceType":"Input","InputOrColumnName":"Root","Children":[{"NodeName":"id","NodeType":3,"SourceType":"Column","InputOrColumnName":"id"},{"NodeName":"IdInFile","NodeType":3,"SourceType":"Column","InputOrColumnName":"IdInFile"},{"NodeName":"StartDate","NodeType":3,"SourceType":"Column","InputOrColumnName":"StartDate"},{"NodeName":"EndDate","NodeType":3,"SourceType":"Column","InputOrColumnName":"EndDate"},{"NodeName":"AverageSpeed","NodeType":3,"SourceType":"Column","InputOrColumnName":"AverageSpeed"},{"NodeName":"Duration","NodeType":3,"SourceType":"Column","InputOrColumnName":"Duration"},{"NodeName":"Length","NodeType":3,"SourceType":"Column","InputOrColumnName":"Length"},{"NodeName":"city","NodeType":3,"SourceType":"Column","InputOrColumnName":"city"},{"NodeName":"Weather","NodeType":2,"SourceType":"None","Children":[{"NodeName":"Temperature","NodeType":3,"SourceType":"Column","InputOrColumnName":"Temperature"},{"NodeName":"Precipitation","NodeType":3,"SourceType":"Column","InputOrColumnName":"Precipitation"}]},{"NodeName":"FuelPrice","NodeType":2,"SourceType":"None","Children":[{"NodeName":"GasolinePrice","NodeType":3,"SourceType":"Column","InputOrColumnName":"GasolinePrice"},{"NodeName":"DieselPrice","NodeType":3,"SourceType":"Column","InputOrColumnName":"DieselPrice"}]},{"NodeName":"CountryPopulation","NodeType":2,"SourceType":"None","Children":[{"NodeName":"Total","NodeType":3,"SourceType":"Column","InputOrColumnName":"Total"},{"NodeName":"MalePercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"MalePercentage"},{"NodeName":"FemalePercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"FemalePercentage"},{"NodeName":"Density","NodeType":3,"SourceType":"Column","InputOrColumnName":"Density"},{"NodeName":"UrbanPercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"UrbanPercentage"},{"NodeName":"RuralPercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"RuralPercentage"},{"NodeName":"Age0-14Percentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"Age0-14Percentage"},{"NodeName":"Age15-64Percentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"Age15-64Percentage"},{"NodeName":"Age65+Percentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"Age65+Percentage"},{"NodeName":"MortalityInRoadTrafficPer100000","NodeType":3,"SourceType":"Column","InputOrColumnName":"MortalityInRoadTrafficPer100000"}]},{"NodeName":"Economic","NodeType":2,"SourceType":"None","Children":[{"NodeName":"GDPPerCapitaConstantLCU","NodeType":3,"SourceType":"Column","InputOrColumnName":"GDPPerCapitaConstantLCU"},{"NodeName":"GDPPerCapitaCurrentLCU","NodeType":3,"SourceType":"Column","InputOrColumnName":"GDPPerCapitaCurrentLCU"},{"NodeName":"Inflation","NodeType":3,"SourceType":"Column","InputOrColumnName":"Inflation"},{"NodeName":"UneploymentNationalEstimate","NodeType":3,"SourceType":"Column","InputOrColumnName":"UneploymentNationalEstimate"},{"NodeName":"UneploymentModeledILOEstimate","NodeType":3,"SourceType":"Column","InputOrColumnName":"UneploymentModeledILOEstimate"},{"NodeName":"DeparturesInInternationalTourism","NodeType":3,"SourceType":"Column","InputOrColumnName":"DeparturesInInternationalTourism"},{"NodeName":"ArrivalsInInternationalTourism","NodeType":3,"SourceType":"Column","InputOrColumnName":"ArrivalsInInternationalTourism"},{"NodeName":"PrivateInvestmentsInTransport","NodeType":3,"SourceType":"Column","InputOrColumnName":"PrivateInvestmentsInTransport"}]},{"NodeName":"Emissions","NodeType":2,"SourceType":"None","Children":[{"NodeName":"CO2EmissionsFromTransportPercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"CO2EmissionsFromTransportPercentage"},{"NodeName":"CO2EmissionsFromGaseousFuelConsumptionPercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"CO2EmissionsFromGaseousFuelConsumptionPercentage"}]},{"NodeName":"Points","NodeType":1,"SourceType":"Input","InputOrColumnName":"Points","Children":[{"NodeType":2,"SourceType":"None","Children":[{"NodeName":"Latitude","NodeType":3,"SourceType":"Column","InputOrColumnName":"Latitude"},{"NodeName":"Longitude","NodeType":3,"SourceType":"Column","InputOrColumnName":"Longitude"},{"NodeName":"Timestamp","NodeType":3,"SourceType":"Column","InputOrColumnName":""},{"NodeName":"Region","NodeType":2,"SourceType":"None","Children":[{"NodeName":"Name","NodeType":3,"SourceType":"Column","InputOrColumnName":"Name"},{"NodeName":"Area","NodeType":3,"SourceType":"Column","InputOrColumnName":"Area"},{"NodeName":"Population","NodeType":3,"SourceType":"Column","InputOrColumnName":"Population"},{"NodeName":"Density","NodeType":3,"SourceType":"Column","InputOrColumnName":"Density"}]}]}]}]}]</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies if the linkId &amp; parentLinkId values used for merging child &amp; parent inputs are scrambled (true) or grouped (false)."
                  expressionType="Notify"
                  name="LinkIdsAreScrambled">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how to write null values in the merged document."
                  expressionType="Notify"
                  name="NullMode"
                  typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.JsonMergeNullMode">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how to write empty arrays in the merged document."
                  expressionType="Notify"
                  name="EmptyArrayMode"
                  typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.JsonEmptyArrayMode">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how to write empty objects in the merged document."
                  expressionType="Notify"
                  name="EmptyObjectMode"
                  typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.JsonEmptyObjectMode">1</property>
                <property
                  dataType="System.String"
                  description="Specifies the text qualifier to use when splitting values to be repeated in the final document."
                  expressionType="Notify"
                  name="IsRepeatedTextQualifier">Double-Quote ( " )</property>
                <property
                  dataType="System.String"
                  description="Specifies the text qualifier to use when splitting values to be repeated in the final document."
                  expressionType="Notify"
                  name="IsRepeatedTextDelimiter">Comma ( , )</property>
                <property
                  dataType="System.String"
                  description="The CosmosDB Database to write to."
                  expressionType="Notify"
                  name="Database">Trajectories</property>
                <property
                  dataType="System.String"
                  description="The CosmosDB Container to write to."
                  expressionType="Notify"
                  name="Container">Trajectories</property>
                <property
                  dataType="System.Int32"
                  description="Specifies which action to perform when writing to CosmosDB Items"
                  expressionType="Notify"
                  name="Action"
                  typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.CosmosDbAction">1</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies to send items as raw text from a DT_NTEXT column."
                  name="InputAsRawText">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the consistency level required for the request in the Azure Cosmos DB service."
                  expressionType="Notify"
                  name="ConsistencyLevel"
                  typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.CosmosDbConsistencyLevel">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the indexing directive (Include or Exclude) for the request in the Azure Cosmos DB service."
                  expressionType="Notify"
                  name="IndexingDirective"
                  typeConverter="Microsoft.Azure.Cosmos.IndexingDirective">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of items that can be sent client side during parallel execution in the Azure Cosmos DB service. A positive property value limits the number of sent items to the set value. If it is set to 0, the system automatically decides the number of items to send."
                  expressionType="Notify"
                  name="MaxDegreeOfParallelism">1</property>
                <property
                  dataType="System.String"
                  description="Specifies the trigger to be invoked after the operation in the Azure Cosmos DB service."
                  expressionType="Notify"
                  name="PostTriggerInclude"></property>
                <property
                  dataType="System.String"
                  description="Specifies the trigger to be invoked before the operation in the Azure Cosmos DB service."
                  expressionType="Notify"
                  name="PreTriggerInclude"></property>
                <property
                  dataType="System.String"
                  description="Specifies the token for use with session consistency in the Azure Cosmos DB service."
                  expressionType="Notify"
                  name="SessionToken"></property>
                <property
                  dataType="System.String"
                  description="Specifies the If-Match (ETag) associated with the request in the Azure Cosmos DB service."
                  expressionType="Notify"
                  name="IfMatchEtag"></property>
                <property
                  dataType="System.String"
                  description="Specifies the If-None-Match (ETag) associated with the request in the Azure Cosmos DB service."
                  expressionType="Notify"
                  name="IfNoneMatchEtag"></property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">KingswaySoft.IntegrationToolkit.ProductivityPack.CosmosDbDestinationComponent</property>
                <property
                  dataType="System.Int32"
                  name="Encoding">65001</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Geolife Data Flow\CosmosDB Destination.Connections[CosmosDB (KingswaySoft)]"
                  connectionManagerID="Package.ConnectionManagers[CosmosDB Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[CosmosDB Connection Manager]"
                  description="CosmosDB Connection Manager"
                  name="CosmosDB (KingswaySoft)" />
              </connections>
              <inputs>
                <input
                  refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="RedirectRow"
                  hasSideEffects="true"
                  name="Root">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="ParentId"
                      name="ParentId">#{Package\Geolife Data Flow\-1:invalid}</property>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="ParentColumnId"
                      name="ParentColumnId">#{Package\Geolife Data Flow\-1:invalid}</property>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="IdField"
                      name="IdField">#{Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[_LinkId]}</property>
                  </properties>
                  <inputColumns>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[Length]"
                      cachedDataType="decimal"
                      cachedName="Length"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Length]"
                      lineageId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[Length]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Length]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Length]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[Duration]"
                      cachedDataType="decimal"
                      cachedName="Duration"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Duration]"
                      lineageId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[Duration]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Duration]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Duration]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[AverageSpeed]"
                      cachedDataType="decimal"
                      cachedName="AverageSpeed"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[AverageSpeed]"
                      lineageId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[AverageSpeed]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[AverageSpeed]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[AverageSpeed]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[EndDate]"
                      cachedDataType="date"
                      cachedName="EndDate"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[EndDate]"
                      lineageId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[EndDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[EndDate]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[EndDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[StartDate]"
                      cachedDataType="date"
                      cachedName="StartDate"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[StartDate]"
                      lineageId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[StartDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[StartDate]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[StartDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[TrajectoryId]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TrajectoryId"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[_LinkId]"
                      lineageId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[TrajectoryId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[TrajectoryId]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[TrajectoryId]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[IdInFile]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="IdInFile"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[IdInFile]"
                      lineageId="Package\Geolife Data Flow\IdInFile and city columns.Outputs[Derived Column Output].Columns[IdInFile]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[IdInFile]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[IdInFile]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[City]"
                      cachedDataType="wstr"
                      cachedLength="7"
                      cachedName="City"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[city]"
                      lineageId="Package\Geolife Data Flow\IdInFile and city columns.Outputs[Derived Column Output].Columns[City]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[City]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[City]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[Temperature]"
                      cachedDataType="decimal"
                      cachedName="Temperature"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Temperature]"
                      lineageId="Package\Geolife Data Flow\Add weather.Outputs[Output 0].Columns[Temperature]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Temperature]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Temperature]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[Precipitation]"
                      cachedDataType="decimal"
                      cachedName="Precipitation"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Precipitation]"
                      lineageId="Package\Geolife Data Flow\Add weather.Outputs[Output 0].Columns[Precipitation]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Precipitation]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Precipitation]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[DieselPrice]"
                      cachedDataType="decimal"
                      cachedName="DieselPrice"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[DieselPrice]"
                      lineageId="Package\Geolife Data Flow\Add fuel prices.Outputs[Output 0].Columns[DieselPrice]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[DieselPrice]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[DieselPrice]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[GasolinePrice]"
                      cachedDataType="decimal"
                      cachedName="GasolinePrice"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[GasolinePrice]"
                      lineageId="Package\Geolife Data Flow\Add fuel prices.Outputs[Output 0].Columns[GasolinePrice]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GasolinePrice]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GasolinePrice]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[ArrivalsInInternationalTourism]"
                      cachedDataType="i4"
                      cachedName="ArrivalsInInternationalTourism"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[ArrivalsInInternationalTourism]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[ArrivalsInInternationalTourism]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ArrivalsInInternationalTourism]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[ArrivalsInInternationalTourism]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[DeparturesInInternationalTourism]"
                      cachedDataType="i4"
                      cachedName="DeparturesInInternationalTourism"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[DeparturesInInternationalTourism]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[DeparturesInInternationalTourism]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[DeparturesInInternationalTourism]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[DeparturesInInternationalTourism]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[UneploymentModeledILOEstimate]"
                      cachedDataType="decimal"
                      cachedName="UneploymentModeledILOEstimate"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[UneploymentModeledILOEstimate]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[UneploymentModeledILOEstimate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UneploymentModeledILOEstimate]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UneploymentModeledILOEstimate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[UneploymentNationalEstimate]"
                      cachedDataType="decimal"
                      cachedName="UneploymentNationalEstimate"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[UneploymentNationalEstimate]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[UneploymentNationalEstimate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UneploymentNationalEstimate]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UneploymentNationalEstimate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[Inflation]"
                      cachedDataType="decimal"
                      cachedName="Inflation"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Inflation]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[Inflation]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Inflation]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Inflation]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[GDPPerCapitaCurrentLCU]"
                      cachedDataType="decimal"
                      cachedName="GDPPerCapitaCurrentLCU"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[GDPPerCapitaCurrentLCU]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[GDPPerCapitaCurrentLCU]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GDPPerCapitaCurrentLCU]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GDPPerCapitaCurrentLCU]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[GDPPerCapitaConstantLCU]"
                      cachedDataType="decimal"
                      cachedName="GDPPerCapitaConstantLCU"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[GDPPerCapitaConstantLCU]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[GDPPerCapitaConstantLCU]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GDPPerCapitaConstantLCU]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GDPPerCapitaConstantLCU]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[MortalityInRoadTrafficPer100000]"
                      cachedDataType="decimal"
                      cachedName="MortalityInRoadTrafficPer100000"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[MortalityInRoadTrafficPer100000]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[MortalityInRoadTrafficPer100000]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[MortalityInRoadTrafficPer100000]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[MortalityInRoadTrafficPer100000]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[Age65+Percentage]"
                      cachedDataType="decimal"
                      cachedName="Age65+Percentage"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Age65+Percentage]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[Age65+Percentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age65+Percentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age65+Percentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[Age15-64Percentage]"
                      cachedDataType="decimal"
                      cachedName="Age15-64Percentage"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Age15-64Percentage]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[Age15-64Percentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age15-64Percentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age15-64Percentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[Age0-14Percentage]"
                      cachedDataType="decimal"
                      cachedName="Age0-14Percentage"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Age0-14Percentage]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[Age0-14Percentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age0-14Percentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age0-14Percentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[RuralPercentage]"
                      cachedDataType="decimal"
                      cachedName="RuralPercentage"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[RuralPercentage]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[RuralPercentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[RuralPercentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[RuralPercentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[UrbanPercentage]"
                      cachedDataType="decimal"
                      cachedName="UrbanPercentage"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[UrbanPercentage]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[UrbanPercentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UrbanPercentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UrbanPercentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[CountryDensity]"
                      cachedDataType="decimal"
                      cachedName="CountryDensity"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Density]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[CountryDensity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CountryDensity]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CountryDensity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[FemalePercentage]"
                      cachedDataType="decimal"
                      cachedName="FemalePercentage"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[FemalePercentage]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[FemalePercentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[FemalePercentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[FemalePercentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[MalePercentage]"
                      cachedDataType="decimal"
                      cachedName="MalePercentage"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[MalePercentage]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[MalePercentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[MalePercentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[MalePercentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[TotalPopulation]"
                      cachedDataType="i4"
                      cachedName="TotalPopulation"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Total]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[TotalPopulation]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[TotalPopulation]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[TotalPopulation]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[PrivateInvestmentsInTransport]"
                      cachedDataType="ui8"
                      cachedName="PrivateInvestmentsInTransport"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[PrivateInvestmentsInTransport]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[PrivateInvestmentsInTransport]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[PrivateInvestmentsInTransport]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[PrivateInvestmentsInTransport]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                      cachedDataType="decimal"
                      cachedName="CO2EmissionsFromGaseousFuelConsumptionPercentage"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[CO2EmissionsFromTransportPercentage]"
                      cachedDataType="decimal"
                      cachedName="CO2EmissionsFromTransportPercentage"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[CO2EmissionsFromTransportPercentage]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[CO2EmissionsFromTransportPercentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CO2EmissionsFromTransportPercentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CO2EmissionsFromTransportPercentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].Columns[CosmosDbId]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="CosmosDbId"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[id]"
                      lineageId="Package\Geolife Data Flow\Derived Column.Outputs[Derived Column Output].Columns[CosmosDbId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CosmosDbId]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CosmosDbId]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[_LinkId]"
                      dataType="wstr"
                      length="255"
                      name="_LinkId" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[id]"
                      dataType="wstr"
                      length="50"
                      name="id" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[IdInFile]"
                      dataType="wstr"
                      length="50"
                      name="IdInFile" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[StartDate]"
                      dataType="dbTimeStamp"
                      name="StartDate" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[EndDate]"
                      dataType="dbTimeStamp"
                      name="EndDate" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[AverageSpeed]"
                      dataType="decimal"
                      name="AverageSpeed" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Duration]"
                      dataType="decimal"
                      name="Duration" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Length]"
                      dataType="decimal"
                      name="Length" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[city]"
                      dataType="wstr"
                      length="50"
                      name="city" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Temperature]"
                      dataType="decimal"
                      name="Temperature" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Precipitation]"
                      dataType="decimal"
                      name="Precipitation" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[GasolinePrice]"
                      dataType="decimal"
                      name="GasolinePrice" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[DieselPrice]"
                      dataType="decimal"
                      name="DieselPrice" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Total]"
                      dataType="i8"
                      name="Total" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[MalePercentage]"
                      dataType="decimal"
                      name="MalePercentage" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[FemalePercentage]"
                      dataType="decimal"
                      name="FemalePercentage" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Density]"
                      dataType="decimal"
                      name="Density" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[UrbanPercentage]"
                      dataType="decimal"
                      name="UrbanPercentage" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[RuralPercentage]"
                      dataType="decimal"
                      name="RuralPercentage" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Age0-14Percentage]"
                      dataType="decimal"
                      name="Age0-14Percentage" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Age15-64Percentage]"
                      dataType="decimal"
                      name="Age15-64Percentage" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Age65+Percentage]"
                      dataType="decimal"
                      name="Age65+Percentage" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[MortalityInRoadTrafficPer100000]"
                      dataType="decimal"
                      name="MortalityInRoadTrafficPer100000" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[GDPPerCapitaConstantLCU]"
                      dataType="decimal"
                      name="GDPPerCapitaConstantLCU" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[GDPPerCapitaCurrentLCU]"
                      dataType="decimal"
                      name="GDPPerCapitaCurrentLCU" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Inflation]"
                      dataType="decimal"
                      name="Inflation" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[UneploymentNationalEstimate]"
                      dataType="decimal"
                      name="UneploymentNationalEstimate" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[UneploymentModeledILOEstimate]"
                      dataType="decimal"
                      name="UneploymentModeledILOEstimate" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[DeparturesInInternationalTourism]"
                      dataType="i8"
                      name="DeparturesInInternationalTourism" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[ArrivalsInInternationalTourism]"
                      dataType="i8"
                      name="ArrivalsInInternationalTourism" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[PrivateInvestmentsInTransport]"
                      dataType="i8"
                      name="PrivateInvestmentsInTransport" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[CO2EmissionsFromTransportPercentage]"
                      dataType="decimal"
                      name="CO2EmissionsFromTransportPercentage" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                      dataType="decimal"
                      name="CO2EmissionsFromGaseousFuelConsumptionPercentage" />
                  </externalMetadataColumns>
                </input>
                <input
                  refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Points]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="Points">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="ParentId"
                      name="ParentId">#{Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root]}</property>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="ParentColumnId"
                      name="ParentColumnId">#{Package\Geolife Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[_Root.LinkId]}</property>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="IdField"
                      name="IdField">#{Package\Geolife Data Flow\-1:invalid}</property>
                  </properties>
                  <inputColumns>
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Points].Columns[TrajectoryId]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TrajectoryId"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[_Root.LinkId]"
                      lineageId="Package\Geolife Data Flow\Script Component.Outputs[Output 0].Columns[TrajectoryId]" />
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Points].Columns[DateTime]"
                      cachedDataType="date"
                      cachedName="DateTime"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[293]"
                      lineageId="Package\Geolife Data Flow\Script Component.Outputs[Output 0].Columns[DateTime]" />
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Points].Columns[Longitude]"
                      cachedDataType="decimal"
                      cachedName="Longitude"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[Longitude]"
                      lineageId="Package\Geolife Data Flow\Script Component.Outputs[Output 0].Columns[Longitude]" />
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Points].Columns[Latitude]"
                      cachedDataType="decimal"
                      cachedName="Latitude"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[Latitude]"
                      lineageId="Package\Geolife Data Flow\Script Component.Outputs[Output 0].Columns[Latitude]" />
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Points].Columns[RegionArea]"
                      cachedDataType="decimal"
                      cachedName="RegionArea"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[Area]"
                      lineageId="Package\Geolife Data Flow\Add region.Outputs[Output 0].Columns[RegionArea]" />
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Points].Columns[RegionName]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="RegionName"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[Name]"
                      lineageId="Package\Geolife Data Flow\Add region.Outputs[Output 0].Columns[RegionName]" />
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Points].Columns[RegionPopulation]"
                      cachedDataType="i4"
                      cachedName="RegionPopulation"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[Population]"
                      lineageId="Package\Geolife Data Flow\Add region.Outputs[Output 0].Columns[RegionPopulation]" />
                    <inputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Points].Columns[RegionDensity]"
                      cachedDataType="decimal"
                      cachedName="RegionDensity"
                      externalMetadataColumnId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[Density]"
                      lineageId="Package\Geolife Data Flow\Add region.Outputs[Output 0].Columns[RegionDensity]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[_Root.LinkId]"
                      dataType="wstr"
                      length="255"
                      name="_Root.LinkId" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[Latitude]"
                      dataType="decimal"
                      name="Latitude" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[Longitude]"
                      dataType="decimal"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[293]"
                      dataType="dbTimeStamp"
                      name="" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[Name]"
                      dataType="wstr"
                      length="50"
                      name="Name" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[Area]"
                      dataType="decimal"
                      name="Area" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[Population]"
                      dataType="i8"
                      name="Population" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[Density]"
                      dataType="decimal"
                      name="Density" />
                  </externalMetadataColumns>
                </input>
                <input
                  refId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[&lt;Create New Input&gt;]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="&lt;Create New Input&gt;">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="ParentId"
                      name="ParentId">-1</property>
                    <property
                      dataType="System.Int32"
                      description="ParentColumnId"
                      name="ParentColumnId">-1</property>
                    <property
                      dataType="System.Int32"
                      description="IdField"
                      name="IdField">-1</property>
                  </properties>
                  <externalMetadataColumns
                    isUsed="True" />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)]"
                  isErrorOut="true"
                  name="Error Output (Load Geolife trajectories)">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ErrorMessage]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ErrorMessage]"
                      name="ErrorMessage" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Length]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Length]"
                      name="Length"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Duration]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Duration]"
                      name="Duration"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[AverageSpeed]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[AverageSpeed]"
                      name="AverageSpeed"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[EndDate]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[EndDate]"
                      name="EndDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[StartDate]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[StartDate]"
                      name="StartDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[TrajectoryId]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[TrajectoryId]"
                      name="TrajectoryId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[IdInFile]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[IdInFile]"
                      name="IdInFile"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[City]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="7"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[City]"
                      name="City"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Temperature]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Temperature]"
                      name="Temperature"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Precipitation]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Precipitation]"
                      name="Precipitation"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[DieselPrice]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[DieselPrice]"
                      name="DieselPrice"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GasolinePrice]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GasolinePrice]"
                      name="GasolinePrice"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ArrivalsInInternationalTourism]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ArrivalsInInternationalTourism]"
                      name="ArrivalsInInternationalTourism"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[DeparturesInInternationalTourism]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[DeparturesInInternationalTourism]"
                      name="DeparturesInInternationalTourism"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UneploymentModeledILOEstimate]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UneploymentModeledILOEstimate]"
                      name="UneploymentModeledILOEstimate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UneploymentNationalEstimate]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UneploymentNationalEstimate]"
                      name="UneploymentNationalEstimate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Inflation]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Inflation]"
                      name="Inflation"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GDPPerCapitaCurrentLCU]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GDPPerCapitaCurrentLCU]"
                      name="GDPPerCapitaCurrentLCU"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GDPPerCapitaConstantLCU]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GDPPerCapitaConstantLCU]"
                      name="GDPPerCapitaConstantLCU"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[MortalityInRoadTrafficPer100000]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[MortalityInRoadTrafficPer100000]"
                      name="MortalityInRoadTrafficPer100000"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age65+Percentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age65+Percentage]"
                      name="Age65+Percentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age15-64Percentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age15-64Percentage]"
                      name="Age15-64Percentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age0-14Percentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age0-14Percentage]"
                      name="Age0-14Percentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[RuralPercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[RuralPercentage]"
                      name="RuralPercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UrbanPercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UrbanPercentage]"
                      name="UrbanPercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CountryDensity]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CountryDensity]"
                      name="CountryDensity"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[FemalePercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[FemalePercentage]"
                      name="FemalePercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[MalePercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[MalePercentage]"
                      name="MalePercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[TotalPopulation]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[TotalPopulation]"
                      name="TotalPopulation"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[PrivateInvestmentsInTransport]"
                      dataType="ui8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[PrivateInvestmentsInTransport]"
                      name="PrivateInvestmentsInTransport"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                      name="CO2EmissionsFromGaseousFuelConsumptionPercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CO2EmissionsFromTransportPercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CO2EmissionsFromTransportPercentage]"
                      name="CO2EmissionsFromTransportPercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CosmosDbId]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CosmosDbId]"
                      name="CosmosDbId"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)]"
                  name="Default Output (Load Geolife trajectories)">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Length]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Length]"
                      name="Length"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Duration]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Duration]"
                      name="Duration"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[AverageSpeed]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[AverageSpeed]"
                      name="AverageSpeed"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[EndDate]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[EndDate]"
                      name="EndDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[StartDate]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[StartDate]"
                      name="StartDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[TrajectoryId]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[TrajectoryId]"
                      name="TrajectoryId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[IdInFile]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[IdInFile]"
                      name="IdInFile"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[City]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="7"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[City]"
                      name="City"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Temperature]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Temperature]"
                      name="Temperature"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Precipitation]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Precipitation]"
                      name="Precipitation"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[DieselPrice]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[DieselPrice]"
                      name="DieselPrice"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GasolinePrice]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GasolinePrice]"
                      name="GasolinePrice"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[ArrivalsInInternationalTourism]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[ArrivalsInInternationalTourism]"
                      name="ArrivalsInInternationalTourism"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[DeparturesInInternationalTourism]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[DeparturesInInternationalTourism]"
                      name="DeparturesInInternationalTourism"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UneploymentModeledILOEstimate]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UneploymentModeledILOEstimate]"
                      name="UneploymentModeledILOEstimate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UneploymentNationalEstimate]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UneploymentNationalEstimate]"
                      name="UneploymentNationalEstimate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Inflation]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Inflation]"
                      name="Inflation"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GDPPerCapitaCurrentLCU]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GDPPerCapitaCurrentLCU]"
                      name="GDPPerCapitaCurrentLCU"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GDPPerCapitaConstantLCU]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GDPPerCapitaConstantLCU]"
                      name="GDPPerCapitaConstantLCU"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[MortalityInRoadTrafficPer100000]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[MortalityInRoadTrafficPer100000]"
                      name="MortalityInRoadTrafficPer100000"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age65+Percentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age65+Percentage]"
                      name="Age65+Percentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age15-64Percentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age15-64Percentage]"
                      name="Age15-64Percentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age0-14Percentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age0-14Percentage]"
                      name="Age0-14Percentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[RuralPercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[RuralPercentage]"
                      name="RuralPercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UrbanPercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UrbanPercentage]"
                      name="UrbanPercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CountryDensity]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CountryDensity]"
                      name="CountryDensity"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[FemalePercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[FemalePercentage]"
                      name="FemalePercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[MalePercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[MalePercentage]"
                      name="MalePercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[TotalPopulation]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[TotalPopulation]"
                      name="TotalPopulation"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[PrivateInvestmentsInTransport]"
                      dataType="ui8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[PrivateInvestmentsInTransport]"
                      name="PrivateInvestmentsInTransport"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                      name="CO2EmissionsFromGaseousFuelConsumptionPercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CO2EmissionsFromTransportPercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CO2EmissionsFromTransportPercentage]"
                      name="CO2EmissionsFromTransportPercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CosmosDbId]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CosmosDbId]"
                      name="CosmosDbId"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output]"
                  isErrorOut="true"
                  name="Orphaned Children Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Input Name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Input Name]"
                      name="Input Name" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Column Name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Column Name]"
                      name="Column Name" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Column Value]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Column Value]"
                      name="Column Value" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Parent Input Name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Parent Input Name]"
                      name="Parent Input Name" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Parent Column Name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Parent Column Name]"
                      name="Parent Column Name" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorMessage]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Geolife Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorMessage]"
                      name="ErrorMessage" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Geolife Data Flow\Derived Column"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Derived Column"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Geolife Data Flow\Derived Column.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Geolife Data Flow\Derived Column.Inputs[Derived Column Input].Columns[TrajectoryId]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TrajectoryId"
                      lineageId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[TrajectoryId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Geolife Data Flow\Derived Column.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Geolife Data Flow\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Geolife Data Flow\Derived Column.Outputs[Derived Column Output].Columns[CosmosDbId]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Geolife Data Flow\Derived Column.Outputs[Derived Column Output].Columns[CosmosDbId]"
                      name="CosmosDbId"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[TrajectoryId]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">TrajectoryId</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Geolife Data Flow\Derived Column.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Geolife Data Flow\Derived Column.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Geolife Data Flow\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Geolife Data Flow\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Geolife Data Flow\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Geolife Data Flow\IdInFile and city columns"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="IdInFile and city columns"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Geolife Data Flow\IdInFile and city columns.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Geolife Data Flow\IdInFile and city columns.Inputs[Derived Column Input].Columns[TrajectoryId]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TrajectoryId"
                      lineageId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[TrajectoryId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Geolife Data Flow\IdInFile and city columns.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Geolife Data Flow\IdInFile and city columns.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Geolife Data Flow\IdInFile and city columns.Outputs[Derived Column Output].Columns[IdInFile]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Geolife Data Flow\IdInFile and city columns.Outputs[Derived Column Output].Columns[IdInFile]"
                      name="IdInFile"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">#{Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[TrajectoryId]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">TrajectoryId</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Geolife Data Flow\IdInFile and city columns.Outputs[Derived Column Output].Columns[City]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="7"
                      lineageId="Package\Geolife Data Flow\IdInFile and city columns.Outputs[Derived Column Output].Columns[City]"
                      name="City"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Beijing"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Beijing"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Geolife Data Flow\IdInFile and city columns.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Geolife Data Flow\IdInFile and city columns.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Geolife Data Flow\IdInFile and city columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Geolife Data Flow\IdInFile and city columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\IdInFile and city columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Geolife Data Flow\IdInFile and city columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Geolife Data Flow\Load Geolife trajectories"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Load Geolife trajectories"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="36">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

    public String GeolifeFilePath
    {
        get
        {
            return (String)(ParentComponent.ReadOnlyVariables["GeolifeFilePath"].GetValueWithContext(ScriptComponent.EvaluatorContext));
        }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Device.Location;
using System.Globalization;
using System.IO;
using System.Linq;
using CsvHelper;
using ProjNet.CoordinateSystems;
using ProjNet.CoordinateSystems.Transformations;
using ProjNet.IO.CoordinateSystems;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    
    List<string> paths = new List<string>();
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        string path = "C:\\Users\\Rezerwowy\\Desktop\\Engineering Thesis\\Datasets\\Geolife Trajectories 1.3\\Geolife Trajectories 1.3\\Data\\";

        var subdirectories = Directory.GetDirectories(path);


        foreach ( var subdir in subdirectories )
        {
            var trajectoryFolder = Directory.GetDirectories(subdir).First();
            var files = Directory.GetFiles(trajectoryFolder);
            paths.AddRange(files);
        }
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".

        */

        foreach (var path in paths)
        {

            //string filePath = Variables.GeolifeFilePath;

            List<Row> rows = new List<Row>();
            using (StreamReader reader = new StreamReader(path))
            {
                string line;
                for (int i = 0; i < 6; i++)
                    reader.ReadLine();

                bool outsideBeijing = false;

                while ((line = reader.ReadLine()) != null)
                {
                    //line = line.Replace("\"", "");

                    string[] values = line.Split(',');
                    DateTime dateTime;
                    if (!DateTime.TryParseExact(values[5] + " " + values[6], "yyyy-MM-dd HH:mm:ss", CultureInfo.InvariantCulture, DateTimeStyles.None, out dateTime))
                        return;

                    Row row = new Row
                    {
                        Latitude = double.Parse(values[0], CultureInfo.InvariantCulture),
                        Longitude = double.Parse(values[1], CultureInfo.InvariantCulture),
                        DateTime = dateTime
                    };

                    if (!(row.Latitude > 39.4 && row.Latitude < 41.1 && row.Longitude > 115.4 && row.Longitude < 117.6))
                    {
                        outsideBeijing = true;
                        break;
                    }

                    rows.Add(row);

                }

                if (outsideBeijing)
                    continue;

                string trajectoryNumber = path.Substring(path.IndexOf("Data\\") + 5, 3);
                string fileNumber = path.Substring(path.IndexOf("Trajectory") + 11, 14);
                var id = trajectoryNumber + "-" + fileNumber;

                rows.OrderBy(r => r.DateTime);

                DateTime startDate = rows.First().DateTime;

                DateTime endDate = rows.Last().DateTime;

                if (startDate == endDate || (endDate - startDate).Days > 0
                    || startDate.Year < 2007 || startDate.Year > 2012 || endDate.Year < 2007 || endDate.Year > 2012)
                    continue;

                decimal duration = (decimal)(endDate - startDate).TotalMilliseconds;


                double distance = 0;
                for (int i = 0; i < rows.Count - 1; i++)
                {
                    GeoCoordinate firstCoordinate = new GeoCoordinate(rows[i].Latitude, rows[i].Longitude);
                    GeoCoordinate secondCoordinate = new GeoCoordinate(rows[i + 1].Latitude, rows[i + 1].Longitude);

                    distance += firstCoordinate.GetDistanceTo(secondCoordinate);
                }

                if (distance < 1)
                    continue;

                Output0Buffer.AddRow();
                Output0Buffer.TrajectoryId = id;
                Output0Buffer.StartDate = startDate;
                Output0Buffer.EndDate = endDate;
                Output0Buffer.Duration = duration / 60000;
                Output0Buffer.Length = (decimal)distance;
                Output0Buffer.AverageSpeed = (decimal)distance / (duration / 1000);

            }
        }

    }

    private class Row
    {
        public DateTime DateTime { get; set; }
        public double Latitude { get; set; }
        public double Longitude { get; set; }

    }

}


]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Decimal Length
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Length_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Duration
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Duration_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal AverageSpeed
    {
        set
        {
            this[2] = value;
        }
    }
    public bool AverageSpeed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime EndDate
    {
        set
        {
            this[3] = value;
        }
    }
    public bool EndDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime StartDate
    {
        set
        {
            this[4] = value;
        }
    }
    public bool StartDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String TrajectoryId
    {
        set
        {
            this[5] = value;
        }
    }
    public bool TrajectoryId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_4b3e21b7e2814983820047a9351d1a8d.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{E2ACFF07-6902-465F-80AA-339BAE39ADD8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_4b3e21b7e2814983820047a9351d1a8d</RootNamespace>
    <AssemblyName>SC_922AC83EFC81489395CAFFD344B0F8F7</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="CsvHelper, Version=30.0.0.0, Culture=neutral, PublicKeyToken=8c4959082be5c823, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\Vstab0gGcwMDd0e3RgbcCCYGYg\packages\CsvHelper.30.0.1\lib\net47\CsvHelper.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.Bcl.AsyncInterfaces, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\Vstab0gGcwMDd0e3RgbcCCYGYg\packages\Microsoft.Bcl.AsyncInterfaces.1.0.0\lib\net461\Microsoft.Bcl.AsyncInterfaces.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.Bcl.HashCode, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstakmqZthJmpkiI5idHB__iazA\packages\Microsoft.Bcl.HashCode.1.1.1\lib\net461\Microsoft.Bcl.HashCode.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51" />
    <Reference Include="ProjNET, Version=2.0.0.0, Culture=neutral, PublicKeyToken=a1f5bdcd9c6f5740, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstawM8P8Qs04USj__Dzjh4P1lw\packages\ProjNET.2.0.0\lib\netstandard2.0\ProjNET.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Buffers, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstawM8P8Qs04USj__Dzjh4P1lw\packages\System.Buffers.4.5.1\lib\net461\System.Buffers.dll</HintPath>
    </Reference>
    <Reference Include="System.Data" />
    <Reference Include="System.Device" />
    <Reference Include="System.Memory, Version=4.0.1.2, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstawM8P8Qs04USj__Dzjh4P1lw\packages\System.Memory.4.5.5\lib\net461\System.Memory.dll</HintPath>
    </Reference>
    <Reference Include="System.Numerics" />
    <Reference Include="System.Numerics.Vectors, Version=4.1.3.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstawM8P8Qs04USj__Dzjh4P1lw\packages\System.Numerics.Vectors.4.5.0\lib\net46\System.Numerics.Vectors.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="System.Runtime.CompilerServices.Unsafe, Version=4.0.4.1, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstawM8P8Qs04USj__Dzjh4P1lw\packages\System.Runtime.CompilerServices.Unsafe.4.5.3\lib\net461\System.Runtime.CompilerServices.Unsafe.dll</HintPath>
    </Reference>
    <Reference Include="System.Threading.Tasks.Extensions, Version=4.2.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\Vstab0gGcwMDd0e3RgbcCCYGYg\packages\System.Threading.Tasks.Extensions.4.5.2\lib\netstandard2.0\System.Threading.Tasks.Extensions.dll</HintPath>
    </Reference>
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="app.config" />
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[app.config]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Runtime.CompilerServices.Unsafe" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.4.1" newVersion="4.0.4.1" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Microsoft.Bcl.HashCode" version="1.0.0" targetFramework="net472" />
</packages>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4b3e21b7e2814983820047a9351d1a8d.Properties.Settings.get_Default():SC_4b3e21b7e2814983820047a9351d1a8d.Properties.Sett" +
    "ings")]

namespace SC_4b3e21b7e2814983820047a9351d1a8d.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_4b3e21b7e2814983820047a9351d1a8d</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_4b3e21b7e2814983820047a9351d1a8d</msb:DisplayName>
    <msb:ProjectId>{62AB657E-5E4B-4BBF-BF6C-D0ADAC5EE834}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_4b3e21b7e2814983820047a9351d1a8d.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="app.config" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="packages.config" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_4b3e21b7e2814983820047a9351d1a8d")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_4b3e21b7e2814983820047a9351d1a8d")]
[assembly: AssemblyCopyright("Copyright @ HP 2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4b3e21b7e2814983820047a9351d1a8d.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4b3e21b7e2814983820047a9351d1a8d.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4b3e21b7e2814983820047a9351d1a8d.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_4b3e21b7e2814983820047a9351d1a8d.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_4b3e21b7e2814983820047a9351d1a8d.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_922AC83EFC81489395CAFFD344B0F8F7.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDACydbGUAAAAAAAAAAOAAIiALATAAACQAAAAIAAAAAAAAdkIA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACRCAABPAAAAAGAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAfCIAAAAgAAAAJAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAYAAAAAYAAAAmAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABY
QgAAAAAAAEgAAAACAAUAzCYAAKAaAAABAAAAAAAAAGxBAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAgA/AAAAAQAAEQIoEAAACnIBAABwKBEAAAoKFgsrIwYH
migRAAAKKAEAACsoEwAACgwCewEAAAQIbxQAAAoHF1gLBwaOaTLXKh4CKBUAAAoqABswBQBUAwAA
AgAAEQJ7AQAABG8WAAAKCjgmAwAAEgAoFwAACgtzGAAACgwHcxkAAAoNFhMNKw0JbxoAAAomEQ0X
WBMNEQ0cMu4WEwU4ywAAABEEF40mAAABJRYfLJ1vGwAAChMOEQ4bmnLgAABwEQ4cmigcAAAKcuQA
AHAoHQAAChYSDygeAAAKLQXdzwIAAHMqAAAGJREOFpooHQAACigfAAAKbycAAAYlEQ4XmigdAAAK
KB8AAApvKQAABiURD28lAAAGExAREG8mAAAGIzMzMzMzs0NANjYREG8mAAAGI83MzMzMjERANCQR
EG8oAAAGI5qZmZmZ2VxANhIREG8oAAAGI2ZmZmZmZl1AMgUXEwUrFggREG8gAAAKCW8aAAAKJRME
Oif///8RBSwF3RACAAAHB3IMAQBwbyEAAAobWBlvIgAAChMGBwdyGAEAcG8hAAAKHwtYHw5vIgAA
ChMHEQZyLgEAcBEHKBwAAAoTCAh+DgAABCUtFyZ+DQAABP4GLQAABnMjAAAKJYAOAAAEKAIAACsm
CCgDAAArbyQAAAYTCQgoBAAAK28kAAAGEwoRCREKKCYAAAotTREKEQkoJwAAChMREhEoKAAAChYw
OBIJKCkAAAog1wcAADIqEgkoKQAACiDcBwAAMBwSCigpAAAKINcHAAAyDhIKKCkAAAog3AcAADEF
3TUBAAARChEJKCcAAAoTERIRKCoAAAooKwAAChMLIwAAAAAAAAAAEwwWExIrWggREm8sAAAKbyYA
AAYIERJvLAAACm8oAAAGcy0AAAoTEwgREhdYbywAAApvJgAABggREhdYbywAAApvKAAABnMtAAAK
ExQRDBETERRvLgAAClgTDBESF1gTEhESCG8vAAAKF1kymhEMIwAAAAAAAPA/NAXdlAAAAAJ7BAAA
BG8SAAAGAnsEAAAEEQhvEAAABgJ7BAAABBEJbw4AAAYCewQAAAQRCm8MAAAGAnsEAAAEEQsgYOoA
AHMwAAAKKDEAAApvCAAABgJ7BAAABBEMKCsAAApvBgAABgJ7BAAABBEMKCsAAAoRCyDoAwAAczAA
AAooMQAACigxAAAKbwoAAAbeCgksBglvMgAACtwSACgzAAAKOs78///eDhIA/hYCAAAbbzIAAArc
KkE0AAACAAAAJgAAAAcDAAAtAwAACgAAAAAAAAACAAAADAAAADkDAABFAwAADgAAAAAAAABKAnM0
AAAKfQEAAAQCKBUAAAYqKgIDBAUoNQAACio6AhYDjBIAAAEoNgAACipaAywIAhYoNwAACipyMgEA
cHM4AAAKejoCFwOMEgAAASg2AAAKKloDLAgCFyg3AAAKKnIyAQBwczgAAAp6OgIYA4wSAAABKDYA
AAoqWgMsCAIYKDcAAAoqcjIBAHBzOAAACno6AhkDjBEAAAEoNgAACipaAywIAhkoNwAACipyMgEA
cHM4AAAKejoCGgOMEQAAASg2AAAKKloDLAgCGig3AAAKKnIyAQBwczgAAAp6JgIbAyg2AAAKKloD
LAgCGyg3AAAKKnIyAQBwczgAAAp6HgIoOQAACioeAig6AAAKKh4CKDsAAAoqfgIoPAAACgICcxoA
AAZ9AgAABAICcxsAAAZ9AwAABCoGKm4CewQAAAQsEgJ7BAAABG8TAAAGAhR9BAAABCoAEzAFAEkA
AAADAAARFgorLgQGlA4Ecs8BAHAoPQAACjMZAgUGmgIEBpQoPgAACg4EcwUAAAZ9BAAABAYXWAoG
AzLOAm8ZAAAGAm8WAAAGAigXAAAGKjoCKD8AAAoCA30FAAAEKjoCKD8AAAoCA30GAAAEKpYCewYA
AARvQAAACnLhAQBwb0EAAAooQgAACm9DAAAKdCcAAAEqHgIoPwAACiqufgcAAAQtHnIBAgBw0AcA
AAIoRAAACm9FAAAKc0YAAAqABwAABH4HAAAEKhp+CAAABCoeAoAIAAAEKhp+CQAABCoeAihHAAAK
Ki5zIgAABoAJAAAEKh4CewoAAAQqIgIDfQoAAAQqHgJ7CwAABCoiAgN9CwAABCoeAnsMAAAEKiIC
A30MAAAEKi5zLAAABoANAAAEKh4DbyQAAAYqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAA
AAAFAGwAAADACQAAI34AACwKAADUCgAAI1N0cmluZ3MAAAAAABUAAHQCAAAjVVMAdBcAABAAAAAj
R1VJRAAAAIQXAAAcAwAAI0Jsb2IAAAAAAAAAAgAAAVcVogkJCwAAAPoBMwAWAAABAAAANAAAAAoA
AAAOAAAALQAAABoAAABHAAAAGgAAAAMAAAAFAAAAEwAAABcAAAAEAAAAAQAAAAcAAAABAAAAAgAA
AAQAAAAAAEcFAQAAAAAABgAIBA4IBgCcBA4IBgBUA+UHDwCCCAAABgCBA5cGBgDrA5cGBgDMA5cG
BgCDBJcGBgAoBJcGBgBBBJcGBgCYA5cGBgCzA98ECgBcBEoCBgCCAOQAOwDDBwAABgAyB80ABgA4
AgcGBgApBQcGBgAaBgcGDgD5AjoGBgCFCQcGBgAcAw4IBgCJAAcGCgB3B0oCEgBoB0oCCgDdBkoC
CgDXCUoCBgA3A+UHBgCIBy4IBgDRBnMGFgAHAzEFFgBoAzEFFgC5Al4GBgC7Cs0AGgDlARgHBgBf
AOQABgA/B80ABgAtBwcGBgD5BAcGBgBKBwcGBgDuCHMGBgD8AQcGGgBtABgHBgDwAQcGBgCpBgcG
HgARAJgHHgABAJgHbwBvCgAAHgAiAJgHBgBrAgcGBgADAgcGBgCyCpcGAAAAALgAAAAAAAEAAQAB
ABAAIwYAABAAAQABAAEAEABaBwAAYQACAAUAAQAQALkJAABtAAIAFQABABAAMQkAAFUABQAaAAEA
EADbCAAAVQAGABsAAAAQADUIoAhVAAcAHQAAARAAIgmgCIUACQAhAAMAEACiCgAAVQAKACQAAyEQ
AOAAAABVAA0AKwABACsJpwEGADEJrgEGANsIsgEGAFoHtgEBAMcJugEBAMcJugERAA4GvgERAJQC
wgERAJYBxgEBAG4BygEBAFQBzgEBADkBzgE2ALQA0QEWADoA1QFQIAAAAADGALoEBgABAJsgAAAA
AMYAxQQGAAEApCAAAAAAxgBTCQYAAQA4JAAAAACGGM4HBgABAEskAAAAAIYYzgdDAQEAViQAAAAA
hggeBd8BBABlJAAAAACGCMcF5QEFAHwkAAAAAIYIUQbfAQYAiyQAAAAAhgjZBeUBBwCiJAAAAACG
CBQB3wEIALEkAAAAAIYIhwXlAQkAyCQAAAAAhgjfAuoBCgDXJAAAAACGCJ8F5QELAO4kAAAAAIYI
6wLqAQwA/SQAAAAAhgiyBeUBDQAUJQAAAACGCP8AEAAOAB4lAAAAAIYIbwXlAQ8ANSUAAAAAhgCf
CgYAEAA9JQAAAACGAIwJBgAQAEUlAAAAAIYAjwk/ARAATSUAAAAAhhjOBwYAEABtJQAAAADGAUUJ
BgAQAG8lAAAAAIEAJQEGABAAjCUAAAAAxgBGCvABEABtJQAAAADGAVMJBgAUAOElAAAAAIYYzgf8
ARQA8CUAAAAAhhjOB/wBFQD/JQAAAACGCAoFkQAWACUmAAAAAIMYzgcGABYALSYAAAAAkwiEBwIC
FgBZJgAAAACTCHwCowAWAGAmAAAAAJMIiAIHAhYAaCYAAAAAlgitCQ0CFwBvJgAAAACGGM4HBgAX
AHcmAAAAAJEY1AcSAhcAgyYAAAAAhggnAhYCFwCLJgAAAACGCDQC6gEXAJQmAAAAAIYIwgEaARgA
nCYAAAAAhgjPARsCGAClJgAAAACGCKYBGgEZAK0mAAAAAIYItAEbAhkAJSYAAAAAhhjOBwYAGgC2
JgAAAACRGNQHEgIaACUmAAAAAIYYzgcGABoAwiYAAAAAgwBDACACGgAAAAEAfQcAAAIA/QgAAAMA
6wYAAAEA0QQAAAEA0QQAAAEA0QQAAAEA0QQAAAEA0QQAAAEA0QQAAAEA0QQAAAEA0QQAAAEA0QQA
AAEA0QQAAAEA0QQAAAEA0QQAAAEASwkAAAIA2wcAAAMAPQkAAAQA6wYAAAEA3QkAAAEA3QkAAAEA
0QQAAAEA0QQAAAEA0QQAAAEA0QQAAAEA2QcJAM4HAQARAM4HBgAZAM4HCgApAM4HEAAxAM4HEAA5
AM4HEABBAM4HEABJAM4HEABRAM4HEABZAM4HEABhAM4HEABpAM4HBgCxAM4HBgDhAM4HBgABAc4H
FQDZALoEBgARAZEIIwAZAUAKKQARAeUIIwAMANwBQADZAMUEBgAMAMAHdgAUAOcJhQAcAM4HBgCB
AM4HEAApAUECkQA5AacJlQA5AXAJnADxAKQCowCJAHcJqABRAdkCtwAcABABvwA5AdcExQA5AQAF
ygAkAM4H2QAZAaYK3wAZARoKKQCJAMUKBQGJAIgGDQGZAGcJFgGJACQHFgGZAPgHGgGRAJsJHgEc
APUFJAGhAM4HKgGhAMMGMAEcAPMJFgGRAM4HAQCRAC4GNgFhAdECBgAUAFIKPwEMAM4HBgDBAM4H
QwHBAP4FTQHBAO0FAQBpAc4HEADBAJ8KBgDBAIwJBgDBAI8JPwHZAM4HBgDZAMEAVwHZABEJXgGp
AM4HBgDZAM8IZAFxAfUFagHZAIoKcQF5AVsKdwGRARUCfgGRAa4KhwHpAM4HjQEJAc4HBgAuAAsA
TAIuABMAVQIuABsAdAIuACMAfQIuACsApgIuADMApgIuADsArAIuAEMAfQIuAEsAtAIuAFMApgIu
AFsAzQJDAGMAFwPjAHMAFwMhAWsAFwNBAWsAFwNDAWsAFwNhAWsAFwOBAWsAFwPJAXsAdALpAXsA
dAKABGsAFwOgBGsAFwPABGsAFwPgBGsAFwMABWsAFwMgBWsAFwMbAEsAUwEDAAEABgANAAcADgAI
ABAACQARAAAAIgUnAgAAywUsAgAAVQYnAgAA3QUsAgAAGAEnAgAAiwUsAgAA4wIwAgAAowUsAgAA
7wIwAgAAtgUsAgAAAwE1AgAAcwUsAgAADgU1AgAAiAc5AgAAsQI+AgAAsQlDAgAAOAIwAgAA0wFI
AgAAuAFIAgEABgADAAEABwAFAAEACAAHAAEACQAJAAEACgALAAEACwANAAEADAAPAAEADQARAAEA
DgATAAEADwAVAAEAEAAXAAEAEQAZAAIAHAAbAAIAHgAdAAIAHwAfAAEAIAAfAAIAIQAhAAIAJAAj
AAEAJQAjAAIAJgAlAAEAJwAlAAIAKAAnAAEAKQAnADoAfwCKANAABIAAAAEAAAAAAAAAAAAAAAAA
kAAAAAQAAAAAAAAAAAAAAJUB1wAAAAAAEAAAAAAAAAAAAAAAngH9CQAAAAAEAAAAAAAAAAAAAACV
AYgBAAAAABAAAAAAAAAAAAAAAJ4BHwoAAAAABAAAAAAAAAAAAAAAlQEHBgAAAAAEAAAAAAAAAAAA
AACVAXACAAAAABAAAAAAAAAAAAAAAJ4B9QYAAAAAAAAAAAEAAAA/CAAACQACAAoAAgAlADYASQD5
ACUAAAFLAAABAAAASURUU1ZhcmlhYmxlMTAwAElEVFNWYXJpYWJsZXMxMDAASURUU0V2YWx1YXRv
ckNvbnRleHQxMDAAPD45X18zXzAAPENyZWF0ZU5ld091dHB1dFJvd3M+Yl9fM18wAElFbnVtZXJh
YmxlYDEASU9yZGVyZWRFbnVtZXJhYmxlYDEATGlzdGAxAEZ1bmNgMgBTQ185MjJBQzgzRUZDODE0
ODkzOTVDQUZGRDM0NEIwRjhGNwA8PjkAPE1vZHVsZT4AR2V0T3V0cHV0SUQAU3lzdGVtLklPAG1z
Y29ybGliADw+YwBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBzZXRfVHJhamVjdG9yeUlkAEFk
ZABzZXRfQXZlcmFnZVNwZWVkAE1hcmtPdXRwdXRzRmluaXNoZWQAPExvbmdpdHVkZT5rX19CYWNr
aW5nRmllbGQAPExhdGl0dWRlPmtfX0JhY2tpbmdGaWVsZAA8RGF0ZVRpbWU+a19fQmFja2luZ0Zp
ZWxkAFN5c3RlbS5EZXZpY2UAZGVmYXVsdEluc3RhbmNlAGdldF9Mb25naXR1ZGUAc2V0X0xvbmdp
dHVkZQBnZXRfTGF0aXR1ZGUAc2V0X0xhdGl0dWRlAEFkZFJhbmdlAEVudW1lcmFibGUASURpc3Bv
c2FibGUARG91YmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAGdldF9EYXRl
VGltZQBzZXRfRGF0ZVRpbWUAUmVhZExpbmUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxp
bmUAVHlwZQBTeXN0ZW0uQ29yZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1
cmUAZ2V0X0ludmFyaWFudEN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBQ
YXJzZQBzZXRfRW5kRGF0ZQBzZXRfU3RhcnREYXRlAEdlb0Nvb3JkaW5hdGUARWRpdG9yQnJvd3Nh
YmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0
dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3Nl
bWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1l
d29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNj
cmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5
UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29t
cG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGlt
ZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBJbmRl
eE9mAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5nAFN1YnN0cmluZwBnZXRfR2VvbGlm
ZUZpbGVQYXRoAHNldF9MZW5ndGgARGVjaW1hbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU0NfOTIy
QUM4M0VGQzgxNDg5Mzk1Q0FGRkQzNDRCMEY4RjcuZGxsAHNldF9UcmFqZWN0b3J5SWRfSXNOdWxs
AHNldF9BdmVyYWdlU3BlZWRfSXNOdWxsAHNldF9FbmREYXRlX0lzTnVsbABzZXRfU3RhcnREYXRl
X0lzTnVsbABzZXRfTGVuZ3RoX0lzTnVsbABzZXRfRHVyYXRpb25fSXNOdWxsAFNldE51bGwAZ2V0
X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFRpbWVTcGFuAFNjcmlwdE1haW4Ab3Bf
RGl2aXNpb24AU3lzdGVtLkRldmljZS5Mb2NhdGlvbgBzZXRfRHVyYXRpb24AU3lzdGVtLkNvbmZp
Z3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24Ab3BfU3VidHJhY3Rpb24AU3lzdGVtLlJlZmxl
Y3Rpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBHZXREaXN0YW5jZVRvAEN1bHR1cmVJbmZv
AE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUnVudGltZVdy
YXAAU3lzdGVtLkxpbnEAZ2V0X1llYXIAQ2hhcgBTdHJlYW1SZWFkZXIAVGV4dFJlYWRlcgBJRm9y
bWF0UHJvdmlkZXIAT3V0cHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0
X1Jlc291cmNlTWFuYWdlcgBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lLldyYXBwZXIA
R2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IAT3V0cHV0SURzAFN5c3RlbS5EaWFnbm9zdGljcwBn
ZXRfVG90YWxNaWxsaXNlY29uZHMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0
ZW0uUmVzb3VyY2VzAFNDXzRiM2UyMWI3ZTI4MTQ5ODM4MjAwNDdhOTM1MWQxYThkLlByb3BlcnRp
ZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBHZXREaXJlY3RvcmllcwBTQ180
YjNlMjFiN2UyODE0OTgzODIwMDQ3YTkzNTFkMWE4ZC5Qcm9wZXJ0aWVzAGdldF9SZWFkT25seVZh
cmlhYmxlcwBHZXRGaWxlcwBEYXRlVGltZVN0eWxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENv
bHVtbkluZGV4ZXMAU2V0dGluZ3MAcGF0aHMAQ29ubmVjdGlvbnMAQnVmZmVycwBGaW5pc2hPdXRw
dXRzAENyZWF0ZU5ld091dHB1dFJvd3MAZ2V0X0RheXMAQ29uY2F0AFRyeVBhcnNlRXhhY3QAT2Jq
ZWN0AFNldEVuZE9mUm93c2V0AG9wX0V4cGxpY2l0AFNwbGl0AGdldF9EZWZhdWx0AFVzZXJDb21w
b25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABnZXRfQ3VycmVudABnZXRfQ291
bnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABMYXN0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIu
UGlwZWxpbmVIb3N0AEZpcnN0AFByaW1lT3V0cHV0AE1vdmVOZXh0AEdldFZhbHVlV2l0aENvbnRl
eHQAU2NyaXB0Q29tcG9uZW50RXZhbENvbnRleHQAZ2V0X0V2YWx1YXRvckNvbnRleHQAQWRkUm93
AE9yZGVyQnkAZ2V0X0Fzc2VtYmx5AERpcmVjdG9yeQBvcF9FcXVhbGl0eQAAAAAAgN1DADoAXABV
AHMAZQByAHMAXABSAGUAegBlAHIAdwBvAHcAeQBcAEQAZQBzAGsAdABvAHAAXABFAG4AZwBpAG4A
ZQBlAHIAaQBuAGcAIABUAGgAZQBzAGkAcwBcAEQAYQB0AGEAcwBlAHQAcwBcAEcAZQBvAGwAaQBm
AGUAIABUAHIAYQBqAGUAYwB0AG8AcgBpAGUAcwAgADEALgAzAFwARwBlAG8AbABpAGYAZQAgAFQA
cgBhAGoAZQBjAHQAbwByAGkAZQBzACAAMQAuADMAXABEAGEAdABhAFwAAAMgAAAneQB5AHkAeQAt
AE0ATQAtAGQAZAAgAEgASAA6AG0AbQA6AHMAcwABC0QAYQB0AGEAXAAAFVQAcgBhAGoAZQBjAHQA
bwByAHkAAAMtAAGAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQA
IABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBh
AGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAEU8A
dQB0AHAAdQB0ACAAMAAAH0cAZQBvAGwAaQBmAGUARgBpAGwAZQBQAGEAdABoAABxUwBDAF8ANABi
ADMAZQAyADEAYgA3AGUAMgA4ADEANAA5ADgAMwA4ADIAMAAwADQANwBhADkAMwA1ADEAZAAxAGEA
OABkAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAtgBfDVMu4UuQ
ve7woUrwcQAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERfQcHAx0OCB0OBQABHQ4ODBABAR4AFRKA
kQEeAAMKAQ4FFRI5AQ4KIAEBFRKAkQETACoHFRURPQEODhUSOQESJBJBDgIODg4RRRFFEUkNCB0O
EUUSJBFNCBJRElEIIAAVET0BEwAFFRE9AQ4EIAATAAYVEjkBEiQDIAAOBiABHQ4dAwYAAw4ODg4E
AAASeQ4ABQIODhKAoRGApRARRQcAAg0OEoChBSABARMABCABCA4FIAIOCAgIFRJdAhIkEUUFIAIB
HBgZEAICFRKArQEeABUSgJEBHgAVEl0CHgAeAQYKAhIkEUUECgESJAcAAgIRRRFFCAACEU0RRRFF
AyAACAMgAA0FAAERSQ0FIAETAAgFIAIBDQ0FIAENElEIAAIRSRFJEUkDIAACCSADARJlHQgSaQUg
AgEIHAMHAQgGAAIIEmkOBSABHQgIBSAAEoC5BiABEoC9HAUAABKAwQYgARwSgMUIAAESgMkRgM0F
IAASgNEHIAIBDhKA0Qi3elxWGTTgiQiJhF3NgIDMkQYGFRI5AQ4DBhIUAwYSGAMGEgwDBhJtAwYS
dQMGEnkDBhIgAwYRRQIGDQMGEigJBhUSXQISJBFFBSABARFJBCABAQIFIAEBEUULIAQBCB0IHRJl
EmkFIAEBEm0EAAASdQUAAQESeQQAABIgAwAAAQQgABFFBCABAQ0GIAERRRIkBCgAEUkDKAACBCgA
EUUDKAAOBAgAEnUECAASeQQIABIgAygADQgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlv
blRocm93cwEIAQACAAAAAAAoAQAjU0NfNGIzZTIxYjdlMjgxNDk4MzgyMDA0N2E5MzUxZDFhOGQA
AAUBAAAAAAcBAAJIUAAAGAEAE0NvcHlyaWdodCBAIEhQIDIwMjMAAEkBABouTkVURnJhbWV3b3Jr
LFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43
BAEAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1z
Y29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49
Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAA
AAAAAAAAAFBBRFBBRFC0AAAATEIAAAAAAAAAAAAAZkIAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AFhCAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
9AMAAAAAAAAAAAAA9AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BFQDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAADADAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAmAAMAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAEgAUAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
QwBfADQAYgAzAGUAMgAxAGIANwBlADIAOAAxADQAOQA4ADMAOAAyADAAMAA0ADcAYQA5ADMANQAx
AGQAMQBhADgAZAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4A
MAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AOQAyADIAQQBDADgAMwBF
AEYAQwA4ADEANAA4ADkAMwA5ADUAQwBBAEYARgBEADMANAA0AEIAMABGADgARgA3AC4AZABsAGwA
AABMABQAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAg
AEAAIABIAFAAIAAyADAAMgAzAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AOQAy
ADIAQQBDADgAMwBFAEYAQwA4ADEANAA4ADkAMwA5ADUAQwBBAEYARgBEADMANAA0AEIAMABGADgA
RgA3AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADQAYgAz
AGUAMgAxAGIANwBlADIAOAAxADQAOQA4ADMAOAAyADAAMAA0ADcAYQA5ADMANQAxAGQAMQBhADgA
ZAAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4
AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAHgyAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_922ac83efc81489395caffd344b0f8f7</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg">User::GeolifeFilePath</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">29</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[Length]"
                      dataType="decimal"
                      lineageId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[Length]"
                      name="Length" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[Duration]"
                      dataType="decimal"
                      lineageId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[Duration]"
                      name="Duration" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[AverageSpeed]"
                      dataType="decimal"
                      lineageId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[AverageSpeed]"
                      name="AverageSpeed" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[EndDate]"
                      dataType="date"
                      lineageId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[EndDate]"
                      name="EndDate" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[StartDate]"
                      dataType="date"
                      lineageId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[StartDate]"
                      name="StartDate" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[TrajectoryId]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[TrajectoryId]"
                      name="TrajectoryId" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Geolife Data Flow\MongoDB Destination"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="KingswaySoft Inc.; http://www.kingswaysoft.com; support@kingswaysoft.com; Copyright (c) 2021 KingswaySoft Inc."
              description="Write data to a MongoDB database."
              name="MongoDB Destination"
              usesDispositions="true"
              validateExternalMetadata="False"
              version="3">
              <properties>
                <property
                  dataType="System.String"
                  name="Design">[{"NodeType":2,"SourceType":"Input","InputOrColumnName":"Root","Children":[{"NodeName":"IdInFile","NodeType":3,"SourceType":"Column","InputOrColumnName":"IdInFile"},{"NodeName":"StartDate","NodeType":3,"SourceType":"Column","InputOrColumnName":"StartDate"},{"NodeName":"EndDate","NodeType":3,"SourceType":"Column","InputOrColumnName":"EndDate"},{"NodeName":"AverageSpeed","NodeType":3,"SourceType":"Column","InputOrColumnName":"AverageSpeed"},{"NodeName":"Duration","NodeType":3,"SourceType":"Column","InputOrColumnName":"Duration"},{"NodeName":"Length","NodeType":3,"SourceType":"Column","InputOrColumnName":"Length"},{"NodeName":"city","NodeType":3,"SourceType":"Column","InputOrColumnName":"city"},{"NodeName":"Weather","NodeType":2,"SourceType":"None","Children":[{"NodeName":"Temperature","NodeType":3,"SourceType":"Column","InputOrColumnName":"Temperature"},{"NodeName":"Precipitation","NodeType":3,"SourceType":"Column","InputOrColumnName":"Precipitation"}]},{"NodeName":"FuelPrice","NodeType":2,"SourceType":"None","Children":[{"NodeName":"GasolinePrice","NodeType":3,"SourceType":"Column","InputOrColumnName":"GasolinePrice"},{"NodeName":"DieselPrice","NodeType":3,"SourceType":"Column","InputOrColumnName":"DieselPrice"}]},{"NodeName":"CountryPopulation","NodeType":2,"SourceType":"None","Children":[{"NodeName":"Total","NodeType":3,"SourceType":"Column","InputOrColumnName":"Total"},{"NodeName":"MalePercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"MalePercentage"},{"NodeName":"FemalePercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"FemalePercentage"},{"NodeName":"Density","NodeType":3,"SourceType":"Column","InputOrColumnName":"Density"},{"NodeName":"UrbanPercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"UrbanPercentage"},{"NodeName":"RuralPercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"RuralPercentage"},{"NodeName":"Age0-14Percentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"Age0-14Percentage"},{"NodeName":"Age15-64Percentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"Age15-64Percentage"},{"NodeName":"Age65+Percentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"Age65+Percentage"},{"NodeName":"MortalityInRoadTrafficPer100000","NodeType":3,"SourceType":"Column","InputOrColumnName":"MortalityInRoadTrafficPer100000"}]},{"NodeName":"Economic","NodeType":2,"SourceType":"None","Children":[{"NodeName":"GDPPerCapitaConstantLCU","NodeType":3,"SourceType":"Column","InputOrColumnName":"GDPPerCapitaConstantLCU"},{"NodeName":"GDPPerCapitaCurrentLCU","NodeType":3,"SourceType":"Column","InputOrColumnName":"GDPPerCapitaCurrentLCU"},{"NodeName":"Inflation","NodeType":3,"SourceType":"Column","InputOrColumnName":"Inflation"},{"NodeName":"UneploymentNationalEstimate","NodeType":3,"SourceType":"Column","InputOrColumnName":"UneploymentNationalEstimate"},{"NodeName":"UneploymentModeledILOEstimate","NodeType":3,"SourceType":"Column","InputOrColumnName":"UneploymentModeledILOEstimate"},{"NodeName":"DeparturesInInternationalTourism","NodeType":3,"SourceType":"Column","InputOrColumnName":"DeparturesInInternationalTourism"},{"NodeName":"ArrivalsInInternationalTourism","NodeType":3,"SourceType":"Column","InputOrColumnName":"ArrivalsInInternationalTourism"},{"NodeName":"PrivateInvestmentsInTransport","NodeType":3,"SourceType":"Column","InputOrColumnName":"PrivateInvestmentsInTransport"}]},{"NodeName":"Emissions","NodeType":2,"SourceType":"None","Children":[{"NodeName":"CO2EmissionsFromTransportPercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"CO2EmissionsFromTransportPercentage"},{"NodeName":"CO2EmissionsFromGaseousFuelConsumptionPercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"CO2EmissionsFromGaseousFuelConsumptionPercentage"}]},{"NodeName":"Points","NodeType":1,"SourceType":"Input","InputOrColumnName":"Points","Children":[{"NodeType":2,"SourceType":"None","Children":[{"NodeName":"Latitude","NodeType":3,"SourceType":"Column","InputOrColumnName":"Latitude"},{"NodeName":"Longitude","NodeType":3,"SourceType":"Column","InputOrColumnName":"Longitude"},{"NodeName":"Timestamp","NodeType":3,"SourceType":"Column","InputOrColumnName":"Timestamp"},{"NodeName":"Region","NodeType":2,"SourceType":"None","Children":[{"NodeName":"Name","NodeType":3,"SourceType":"Column","InputOrColumnName":"Name"},{"NodeName":"Area","NodeType":3,"SourceType":"Column","InputOrColumnName":"Area"},{"NodeName":"Population","NodeType":3,"SourceType":"Column","InputOrColumnName":"Population"},{"NodeName":"Density","NodeType":3,"SourceType":"Column","InputOrColumnName":"Density"}]}]}]}]}]</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies if the linkId &amp; parentLinkId values used for merging child &amp; parent inputs are scrambled (true) or grouped (false)."
                  expressionType="Notify"
                  name="LinkIdsAreScrambled">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how to write null values in the merged document."
                  expressionType="Notify"
                  name="NullMode"
                  typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.JsonMergeNullMode">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how to write empty arrays in the merged document."
                  expressionType="Notify"
                  name="EmptyArrayMode"
                  typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.JsonEmptyArrayMode">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how to write empty objects in the merged document."
                  expressionType="Notify"
                  name="EmptyObjectMode"
                  typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.JsonEmptyObjectMode">1</property>
                <property
                  dataType="System.String"
                  description="Specifies the text qualifier to use when splitting values to be repeated in the final document."
                  expressionType="Notify"
                  name="IsRepeatedTextQualifier">Double-Quote ( " )</property>
                <property
                  dataType="System.String"
                  description="Specifies the text qualifier to use when splitting values to be repeated in the final document."
                  expressionType="Notify"
                  name="IsRepeatedTextDelimiter">Comma ( , )</property>
                <property
                  dataType="System.String"
                  description="The MongoDB Database to write to."
                  expressionType="Notify"
                  name="Database">Trajectories</property>
                <property
                  dataType="System.String"
                  description="The MongoDB Collection to write to."
                  expressionType="Notify"
                  name="Collection">Trajectory</property>
                <property
                  dataType="System.Int32"
                  description="Time Zone."
                  expressionType="Notify"
                  name="InputTimezone"
                  typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.TimeZone">2</property>
                <property
                  dataType="System.Int32"
                  description="The action to perform when writing to MongoDB."
                  expressionType="Notify"
                  name="Action"
                  typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.MongoDbAction">2</property>
                <property
                  dataType="System.Int32"
                  description="The number of documents to send at a time. Only applies to Insert action."
                  expressionType="Notify"
                  name="BatchSize">1000</property>
                <property
                  dataType="System.Int32"
                  description="The maximum number of operations that can be performed at a time. Specify 1 for no concurrency. Specify 0 for unlimited concurrent operations, although this may exceed thread pool limits."
                  expressionType="Notify"
                  name="MaxDegreeOfParallelism">1</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies to send documents as raw text from a DT_NTEXT column."
                  name="InputAsRawText">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how to match target documents for Update/Replace/Delete actions."
                  expressionType="Notify"
                  name="MatchByMode"
                  typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.MongoDbMatchByMode">0</property>
                <property
                  dataType="System.String"
                  description="They query to use for matching documents for Update/Replace/Delete actions when 'Match By Mode' is 'Construct Query'"
                  expressionType="Notify"
                  name="MatchByQuery"></property>
                <property
                  dataType="System.Boolean"
                  description="Specifies if only one document should be Updated/Replaced/Deleted or if all matched documents should."
                  expressionType="Notify"
                  name="LimitMatchesToOne">false</property>
                <property
                  dataType="System.Boolean"
                  description="When matches yield no results, the record is inserted."
                  expressionType="Notify"
                  name="UseUpsert">true</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">KingswaySoft.IntegrationToolkit.ProductivityPack.MongoDbDestinationComponent</property>
                <property
                  dataType="System.Int32"
                  name="Encoding">65001</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Geolife Data Flow\MongoDB Destination.Connections[MongoDB (KingswaySoft)]"
                  connectionManagerID="Package.ConnectionManagers[MongoDB Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[MongoDB Connection Manager]"
                  description="MongoDB Connection Manager"
                  name="MongoDB (KingswaySoft)" />
              </connections>
              <inputs>
                <input
                  refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="RedirectRow"
                  hasSideEffects="true"
                  name="Root">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="ParentId"
                      name="ParentId">#{Package\Geolife Data Flow\-1:invalid}</property>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="ParentColumnId"
                      name="ParentColumnId">#{Package\Geolife Data Flow\-1:invalid}</property>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="IdField"
                      name="IdField">#{Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[_LinkId]}</property>
                  </properties>
                  <inputColumns>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[Length]"
                      cachedDataType="decimal"
                      cachedName="Length"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Length]"
                      lineageId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[Length]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Length]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Length]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[Duration]"
                      cachedDataType="decimal"
                      cachedName="Duration"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Duration]"
                      lineageId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[Duration]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Duration]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Duration]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[AverageSpeed]"
                      cachedDataType="decimal"
                      cachedName="AverageSpeed"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[AverageSpeed]"
                      lineageId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[AverageSpeed]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[AverageSpeed]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[AverageSpeed]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[EndDate]"
                      cachedDataType="date"
                      cachedName="EndDate"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[EndDate]"
                      lineageId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[EndDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[EndDate]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[EndDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[StartDate]"
                      cachedDataType="date"
                      cachedName="StartDate"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[StartDate]"
                      lineageId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[StartDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[StartDate]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[StartDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[TrajectoryId]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TrajectoryId"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[_LinkId]"
                      lineageId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0].Columns[TrajectoryId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[TrajectoryId]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[TrajectoryId]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[IdInFile]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="IdInFile"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[IdInFile]"
                      lineageId="Package\Geolife Data Flow\IdInFile and city columns.Outputs[Derived Column Output].Columns[IdInFile]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[IdInFile]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[IdInFile]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[City]"
                      cachedDataType="wstr"
                      cachedLength="7"
                      cachedName="City"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[city]"
                      lineageId="Package\Geolife Data Flow\IdInFile and city columns.Outputs[Derived Column Output].Columns[City]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[City]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[City]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[Temperature]"
                      cachedDataType="decimal"
                      cachedName="Temperature"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Temperature]"
                      lineageId="Package\Geolife Data Flow\Add weather.Outputs[Output 0].Columns[Temperature]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Temperature]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Temperature]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[Precipitation]"
                      cachedDataType="decimal"
                      cachedName="Precipitation"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Precipitation]"
                      lineageId="Package\Geolife Data Flow\Add weather.Outputs[Output 0].Columns[Precipitation]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Precipitation]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Precipitation]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[DieselPrice]"
                      cachedDataType="decimal"
                      cachedName="DieselPrice"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[DieselPrice]"
                      lineageId="Package\Geolife Data Flow\Add fuel prices.Outputs[Output 0].Columns[DieselPrice]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[DieselPrice]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[DieselPrice]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[GasolinePrice]"
                      cachedDataType="decimal"
                      cachedName="GasolinePrice"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[GasolinePrice]"
                      lineageId="Package\Geolife Data Flow\Add fuel prices.Outputs[Output 0].Columns[GasolinePrice]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GasolinePrice]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GasolinePrice]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[ArrivalsInInternationalTourism]"
                      cachedDataType="i4"
                      cachedName="ArrivalsInInternationalTourism"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[ArrivalsInInternationalTourism]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[ArrivalsInInternationalTourism]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ArrivalsInInternationalTourism]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[ArrivalsInInternationalTourism]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[DeparturesInInternationalTourism]"
                      cachedDataType="i4"
                      cachedName="DeparturesInInternationalTourism"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[DeparturesInInternationalTourism]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[DeparturesInInternationalTourism]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[DeparturesInInternationalTourism]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[DeparturesInInternationalTourism]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[UneploymentModeledILOEstimate]"
                      cachedDataType="decimal"
                      cachedName="UneploymentModeledILOEstimate"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[UneploymentModeledILOEstimate]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[UneploymentModeledILOEstimate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UneploymentModeledILOEstimate]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UneploymentModeledILOEstimate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[UneploymentNationalEstimate]"
                      cachedDataType="decimal"
                      cachedName="UneploymentNationalEstimate"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[UneploymentNationalEstimate]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[UneploymentNationalEstimate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UneploymentNationalEstimate]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UneploymentNationalEstimate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[Inflation]"
                      cachedDataType="decimal"
                      cachedName="Inflation"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Inflation]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[Inflation]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Inflation]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Inflation]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[GDPPerCapitaCurrentLCU]"
                      cachedDataType="decimal"
                      cachedName="GDPPerCapitaCurrentLCU"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[GDPPerCapitaCurrentLCU]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[GDPPerCapitaCurrentLCU]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GDPPerCapitaCurrentLCU]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GDPPerCapitaCurrentLCU]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[GDPPerCapitaConstantLCU]"
                      cachedDataType="decimal"
                      cachedName="GDPPerCapitaConstantLCU"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[GDPPerCapitaConstantLCU]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[GDPPerCapitaConstantLCU]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GDPPerCapitaConstantLCU]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GDPPerCapitaConstantLCU]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[MortalityInRoadTrafficPer100000]"
                      cachedDataType="decimal"
                      cachedName="MortalityInRoadTrafficPer100000"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[MortalityInRoadTrafficPer100000]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[MortalityInRoadTrafficPer100000]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[MortalityInRoadTrafficPer100000]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[MortalityInRoadTrafficPer100000]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[Age65+Percentage]"
                      cachedDataType="decimal"
                      cachedName="Age65+Percentage"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Age65+Percentage]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[Age65+Percentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age65+Percentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age65+Percentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[Age15-64Percentage]"
                      cachedDataType="decimal"
                      cachedName="Age15-64Percentage"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Age15-64Percentage]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[Age15-64Percentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age15-64Percentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age15-64Percentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[Age0-14Percentage]"
                      cachedDataType="decimal"
                      cachedName="Age0-14Percentage"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Age0-14Percentage]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[Age0-14Percentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age0-14Percentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age0-14Percentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[RuralPercentage]"
                      cachedDataType="decimal"
                      cachedName="RuralPercentage"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[RuralPercentage]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[RuralPercentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[RuralPercentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[RuralPercentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[UrbanPercentage]"
                      cachedDataType="decimal"
                      cachedName="UrbanPercentage"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[UrbanPercentage]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[UrbanPercentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UrbanPercentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UrbanPercentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[CountryDensity]"
                      cachedDataType="decimal"
                      cachedName="CountryDensity"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[CountryDensity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CountryDensity]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CountryDensity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[FemalePercentage]"
                      cachedDataType="decimal"
                      cachedName="FemalePercentage"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[FemalePercentage]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[FemalePercentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[FemalePercentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[FemalePercentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[MalePercentage]"
                      cachedDataType="decimal"
                      cachedName="MalePercentage"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[MalePercentage]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[MalePercentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[MalePercentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[MalePercentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[TotalPopulation]"
                      cachedDataType="i4"
                      cachedName="TotalPopulation"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[TotalPopulation]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[TotalPopulation]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[TotalPopulation]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[PrivateInvestmentsInTransport]"
                      cachedDataType="ui8"
                      cachedName="PrivateInvestmentsInTransport"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[PrivateInvestmentsInTransport]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[PrivateInvestmentsInTransport]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[PrivateInvestmentsInTransport]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[PrivateInvestmentsInTransport]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                      cachedDataType="decimal"
                      cachedName="CO2EmissionsFromGaseousFuelConsumptionPercentage"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].Columns[CO2EmissionsFromTransportPercentage]"
                      cachedDataType="decimal"
                      cachedName="CO2EmissionsFromTransportPercentage"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[CO2EmissionsFromTransportPercentage]"
                      lineageId="Package\Geolife Data Flow\Add Context.Outputs[Output 0].Columns[CO2EmissionsFromTransportPercentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CO2EmissionsFromTransportPercentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CO2EmissionsFromTransportPercentage]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[_LinkId]"
                      dataType="wstr"
                      length="255"
                      name="_LinkId" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[IdInFile]"
                      dataType="wstr"
                      length="50"
                      name="IdInFile">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsMatchingField">true</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[StartDate]"
                      dataType="dbTimeStamp"
                      name="StartDate" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[EndDate]"
                      dataType="dbTimeStamp"
                      name="EndDate" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[AverageSpeed]"
                      dataType="decimal"
                      name="AverageSpeed" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Duration]"
                      dataType="decimal"
                      name="Duration" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Length]"
                      dataType="decimal"
                      name="Length" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[city]"
                      dataType="wstr"
                      length="50"
                      name="city" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Temperature]"
                      dataType="decimal"
                      name="Temperature" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Precipitation]"
                      dataType="decimal"
                      name="Precipitation" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[GasolinePrice]"
                      dataType="decimal"
                      name="GasolinePrice" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[DieselPrice]"
                      dataType="decimal"
                      name="DieselPrice" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Total]"
                      dataType="i8"
                      name="Total" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[MalePercentage]"
                      dataType="decimal"
                      name="MalePercentage" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[FemalePercentage]"
                      dataType="decimal"
                      name="FemalePercentage" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Density]"
                      dataType="decimal"
                      name="Density" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[UrbanPercentage]"
                      dataType="decimal"
                      name="UrbanPercentage" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[RuralPercentage]"
                      dataType="decimal"
                      name="RuralPercentage" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Age0-14Percentage]"
                      dataType="decimal"
                      name="Age0-14Percentage" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Age15-64Percentage]"
                      dataType="decimal"
                      name="Age15-64Percentage" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Age65+Percentage]"
                      dataType="decimal"
                      name="Age65+Percentage" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[MortalityInRoadTrafficPer100000]"
                      dataType="decimal"
                      name="MortalityInRoadTrafficPer100000" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[GDPPerCapitaConstantLCU]"
                      dataType="decimal"
                      name="GDPPerCapitaConstantLCU" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[GDPPerCapitaCurrentLCU]"
                      dataType="decimal"
                      name="GDPPerCapitaCurrentLCU" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Inflation]"
                      dataType="decimal"
                      name="Inflation" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[UneploymentNationalEstimate]"
                      dataType="decimal"
                      name="UneploymentNationalEstimate" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[UneploymentModeledILOEstimate]"
                      dataType="decimal"
                      name="UneploymentModeledILOEstimate" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[DeparturesInInternationalTourism]"
                      dataType="i8"
                      name="DeparturesInInternationalTourism" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[ArrivalsInInternationalTourism]"
                      dataType="i8"
                      name="ArrivalsInInternationalTourism" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[PrivateInvestmentsInTransport]"
                      dataType="i8"
                      name="PrivateInvestmentsInTransport" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[CO2EmissionsFromTransportPercentage]"
                      dataType="decimal"
                      name="CO2EmissionsFromTransportPercentage" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                      dataType="decimal"
                      name="CO2EmissionsFromGaseousFuelConsumptionPercentage" />
                  </externalMetadataColumns>
                </input>
                <input
                  refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Points]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="Points">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="ParentId"
                      name="ParentId">#{Package\Geolife Data Flow\MongoDB Destination.Inputs[Root]}</property>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="ParentColumnId"
                      name="ParentColumnId">#{Package\Geolife Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[_Root.LinkId]}</property>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="IdField"
                      name="IdField">#{Package\Geolife Data Flow\-1:invalid}</property>
                  </properties>
                  <inputColumns>
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Points].Columns[TrajectoryId]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="TrajectoryId"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[_Root.LinkId]"
                      lineageId="Package\Geolife Data Flow\Script Component.Outputs[Output 0].Columns[TrajectoryId]" />
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Points].Columns[Longitude]"
                      cachedDataType="decimal"
                      cachedName="Longitude"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[Longitude]"
                      lineageId="Package\Geolife Data Flow\Script Component.Outputs[Output 0].Columns[Longitude]" />
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Points].Columns[Latitude]"
                      cachedDataType="decimal"
                      cachedName="Latitude"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[Latitude]"
                      lineageId="Package\Geolife Data Flow\Script Component.Outputs[Output 0].Columns[Latitude]" />
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Points].Columns[RegionArea]"
                      cachedDataType="decimal"
                      cachedName="RegionArea"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[Area]"
                      lineageId="Package\Geolife Data Flow\Add region.Outputs[Output 0].Columns[RegionArea]" />
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Points].Columns[RegionName]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="RegionName"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[Name]"
                      lineageId="Package\Geolife Data Flow\Add region.Outputs[Output 0].Columns[RegionName]" />
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Points].Columns[RegionPopulation]"
                      cachedDataType="i4"
                      cachedName="RegionPopulation"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[Population]"
                      lineageId="Package\Geolife Data Flow\Add region.Outputs[Output 0].Columns[RegionPopulation]" />
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Points].Columns[RegionDensity]"
                      cachedDataType="decimal"
                      cachedName="RegionDensity"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[Density]"
                      lineageId="Package\Geolife Data Flow\Add region.Outputs[Output 0].Columns[RegionDensity]" />
                    <inputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Points].Columns[DateTime]"
                      cachedDataType="date"
                      cachedName="DateTime"
                      externalMetadataColumnId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[Timestamp]"
                      lineageId="Package\Geolife Data Flow\Script Component.Outputs[Output 0].Columns[DateTime]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[_Root.LinkId]"
                      dataType="wstr"
                      length="255"
                      name="_Root.LinkId" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[Latitude]"
                      dataType="decimal"
                      name="Latitude" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[Longitude]"
                      dataType="decimal"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[Timestamp]"
                      dataType="dbTimeStamp"
                      name="Timestamp" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[Name]"
                      dataType="wstr"
                      length="50"
                      name="Name" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[Area]"
                      dataType="decimal"
                      name="Area" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[Population]"
                      dataType="i8"
                      name="Population" />
                    <externalMetadataColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[Density]"
                      dataType="decimal"
                      name="Density" />
                  </externalMetadataColumns>
                </input>
                <input
                  refId="Package\Geolife Data Flow\MongoDB Destination.Inputs[&lt;Create New Input&gt;]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="&lt;Create New Input&gt;">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="ParentId"
                      name="ParentId">-1</property>
                    <property
                      dataType="System.Int32"
                      description="ParentColumnId"
                      name="ParentColumnId">-1</property>
                    <property
                      dataType="System.Int32"
                      description="IdField"
                      name="IdField">-1</property>
                  </properties>
                  <externalMetadataColumns
                    isUsed="True" />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)]"
                  isErrorOut="true"
                  name="Error Output (Load Geolife trajectories)">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ErrorMessage]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ErrorMessage]"
                      name="ErrorMessage" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Length]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Length]"
                      name="Length"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Duration]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Duration]"
                      name="Duration"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[AverageSpeed]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[AverageSpeed]"
                      name="AverageSpeed"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[EndDate]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[EndDate]"
                      name="EndDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[StartDate]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[StartDate]"
                      name="StartDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[TrajectoryId]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[TrajectoryId]"
                      name="TrajectoryId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[IdInFile]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[IdInFile]"
                      name="IdInFile"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[City]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="7"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[City]"
                      name="City"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Temperature]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Temperature]"
                      name="Temperature"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Precipitation]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Precipitation]"
                      name="Precipitation"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[DieselPrice]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[DieselPrice]"
                      name="DieselPrice"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GasolinePrice]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GasolinePrice]"
                      name="GasolinePrice"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ArrivalsInInternationalTourism]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[ArrivalsInInternationalTourism]"
                      name="ArrivalsInInternationalTourism"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[DeparturesInInternationalTourism]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[DeparturesInInternationalTourism]"
                      name="DeparturesInInternationalTourism"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UneploymentModeledILOEstimate]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UneploymentModeledILOEstimate]"
                      name="UneploymentModeledILOEstimate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UneploymentNationalEstimate]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UneploymentNationalEstimate]"
                      name="UneploymentNationalEstimate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Inflation]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Inflation]"
                      name="Inflation"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GDPPerCapitaCurrentLCU]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GDPPerCapitaCurrentLCU]"
                      name="GDPPerCapitaCurrentLCU"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GDPPerCapitaConstantLCU]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[GDPPerCapitaConstantLCU]"
                      name="GDPPerCapitaConstantLCU"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[MortalityInRoadTrafficPer100000]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[MortalityInRoadTrafficPer100000]"
                      name="MortalityInRoadTrafficPer100000"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age65+Percentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age65+Percentage]"
                      name="Age65+Percentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age15-64Percentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age15-64Percentage]"
                      name="Age15-64Percentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age0-14Percentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[Age0-14Percentage]"
                      name="Age0-14Percentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[RuralPercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[RuralPercentage]"
                      name="RuralPercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UrbanPercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[UrbanPercentage]"
                      name="UrbanPercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CountryDensity]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CountryDensity]"
                      name="CountryDensity"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[FemalePercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[FemalePercentage]"
                      name="FemalePercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[MalePercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[MalePercentage]"
                      name="MalePercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[TotalPopulation]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[TotalPopulation]"
                      name="TotalPopulation"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[PrivateInvestmentsInTransport]"
                      dataType="ui8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[PrivateInvestmentsInTransport]"
                      name="PrivateInvestmentsInTransport"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                      name="CO2EmissionsFromGaseousFuelConsumptionPercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CO2EmissionsFromTransportPercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Error Output (Load Geolife trajectories)].Columns[CO2EmissionsFromTransportPercentage]"
                      name="CO2EmissionsFromTransportPercentage"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)]"
                  name="Default Output (Load Geolife trajectories)">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Length]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Length]"
                      name="Length"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Duration]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Duration]"
                      name="Duration"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[AverageSpeed]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[AverageSpeed]"
                      name="AverageSpeed"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[EndDate]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[EndDate]"
                      name="EndDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[StartDate]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[StartDate]"
                      name="StartDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[TrajectoryId]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[TrajectoryId]"
                      name="TrajectoryId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[IdInFile]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[IdInFile]"
                      name="IdInFile"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[City]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="7"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[City]"
                      name="City"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Temperature]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Temperature]"
                      name="Temperature"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Precipitation]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Precipitation]"
                      name="Precipitation"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[DieselPrice]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[DieselPrice]"
                      name="DieselPrice"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GasolinePrice]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GasolinePrice]"
                      name="GasolinePrice"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[ArrivalsInInternationalTourism]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[ArrivalsInInternationalTourism]"
                      name="ArrivalsInInternationalTourism"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[DeparturesInInternationalTourism]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[DeparturesInInternationalTourism]"
                      name="DeparturesInInternationalTourism"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UneploymentModeledILOEstimate]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UneploymentModeledILOEstimate]"
                      name="UneploymentModeledILOEstimate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UneploymentNationalEstimate]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UneploymentNationalEstimate]"
                      name="UneploymentNationalEstimate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Inflation]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Inflation]"
                      name="Inflation"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GDPPerCapitaCurrentLCU]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GDPPerCapitaCurrentLCU]"
                      name="GDPPerCapitaCurrentLCU"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GDPPerCapitaConstantLCU]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[GDPPerCapitaConstantLCU]"
                      name="GDPPerCapitaConstantLCU"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[MortalityInRoadTrafficPer100000]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[MortalityInRoadTrafficPer100000]"
                      name="MortalityInRoadTrafficPer100000"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age65+Percentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age65+Percentage]"
                      name="Age65+Percentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age15-64Percentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age15-64Percentage]"
                      name="Age15-64Percentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age0-14Percentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[Age0-14Percentage]"
                      name="Age0-14Percentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[RuralPercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[RuralPercentage]"
                      name="RuralPercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UrbanPercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[UrbanPercentage]"
                      name="UrbanPercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CountryDensity]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CountryDensity]"
                      name="CountryDensity"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[FemalePercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[FemalePercentage]"
                      name="FemalePercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[MalePercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[MalePercentage]"
                      name="MalePercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[TotalPopulation]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[TotalPopulation]"
                      name="TotalPopulation"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[PrivateInvestmentsInTransport]"
                      dataType="ui8"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[PrivateInvestmentsInTransport]"
                      name="PrivateInvestmentsInTransport"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CO2EmissionsFromGaseousFuelConsumptionPercentage]"
                      name="CO2EmissionsFromGaseousFuelConsumptionPercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CO2EmissionsFromTransportPercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Default Output (Load Geolife trajectories)].Columns[CO2EmissionsFromTransportPercentage]"
                      name="CO2EmissionsFromTransportPercentage"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output]"
                  isErrorOut="true"
                  name="Orphaned Children Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Input Name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Input Name]"
                      name="Input Name" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Column Name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Column Name]"
                      name="Column Name" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Column Value]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Column Value]"
                      name="Column Value" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Parent Input Name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Parent Input Name]"
                      name="Parent Input Name" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Parent Column Name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Parent Column Name]"
                      name="Parent Column Name" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorMessage]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Geolife Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorMessage]"
                      name="ErrorMessage" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Geolife Data Flow\Multicast"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast">
              <inputs>
                <input
                  refId="Package\Geolife Data Flow\Multicast.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Geolife Data Flow\Multicast.Outputs[Multicast Output 1]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Geolife Data Flow\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Geolife Data Flow\Multicast.Outputs[Multicast Output 2]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Geolife Data Flow\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Geolife Data Flow\Multicast.Outputs[Multicast Output 3]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Geolife Data Flow\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Geolife Data Flow\Multicast 1"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast 1">
              <inputs>
                <input
                  refId="Package\Geolife Data Flow\Multicast 1.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Geolife Data Flow\Multicast 1.Outputs[Multicast Output 1]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Geolife Data Flow\Multicast 1.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Geolife Data Flow\Multicast 1.Outputs[Multicast Output 2]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Geolife Data Flow\Multicast 1.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Geolife Data Flow\Multicast 1.Outputs[Multicast Output 3]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Geolife Data Flow\Multicast 1.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Geolife Data Flow\Script Component"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Script Component"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Device.Location;
using System.Globalization;
using System.IO;
using System.Linq;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>

    List<string> paths = new List<string>();
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        string path = "C:\\Users\\Rezerwowy\\Desktop\\Engineering Thesis\\Datasets\\Geolife Trajectories 1.3\\Geolife Trajectories 1.3\\Data\\";

        var subdirectories = Directory.GetDirectories(path);


        foreach (var subdir in subdirectories)
        {
            var trajectoryFolder = Directory.GetDirectories(subdir).First();
            var files = Directory.GetFiles(trajectoryFolder);
            paths.AddRange(files);
        }
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".

        */

        foreach (var path in paths)
        {

            //string filePath = Variables.GeolifeFilePath;

            List<Row> rows = new List<Row>();
            using (StreamReader reader = new StreamReader(path))
            {
                string line;
                for (int i = 0; i < 6; i++)
                    reader.ReadLine();

                string trajectoryNumber = path.Substring(path.IndexOf("Data\\") + 5, 3);
                string fileNumber = path.Substring(path.IndexOf("Trajectory") + 11, 14);
                var id = trajectoryNumber + "-" + fileNumber;

                while ((line = reader.ReadLine()) != null)
                {
                    //line = line.Replace("\"", "");

                    string[] values = line.Split(',');
                    var latitude = decimal.Parse(values[0], CultureInfo.InvariantCulture);
                    var longitude = decimal.Parse(values[1], CultureInfo.InvariantCulture);
                    if (!(latitude > 39.4m && latitude < 41.1m && longitude > 115.4m && longitude < 117.6m))
                        break;

                    DateTime dateTime;
                    if (!DateTime.TryParseExact(values[5] + " " + values[6], "yyyy-MM-dd HH:mm:ss", CultureInfo.InvariantCulture, DateTimeStyles.None, out dateTime))
                        break;



                    Output0Buffer.AddRow();
                    Output0Buffer.Latitude = latitude;
                    Output0Buffer.Longitude = longitude;
                    Output0Buffer.DateTime = dateTime;
                    Output0Buffer.TrajectoryId = id;

                }

            }
        }

    }

    private class Row
    {
        public DateTime DateTime { get; set; }
        public double Latitude { get; set; }
        public double Longitude { get; set; }

    }

}


]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public String TrajectoryId
    {
        set
        {
            this[0] = value;
        }
    }
    public bool TrajectoryId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime DateTime
    {
        set
        {
            this[1] = value;
        }
    }
    public bool DateTime_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Longitude
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Longitude_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Latitude
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Latitude_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_4b1ffa12976b42ecb4ed027b53b5929a.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{7AC299C8-3018-41C4-996F-6AD2D70AE0F3}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_4b1ffa12976b42ecb4ed027b53b5929a</RootNamespace>
    <AssemblyName>SC_4b1ffa12976b42ecb4ed027b53b5929a</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Device" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4b1ffa12976b42ecb4ed027b53b5929a.Properties.Settings.get_Default():SC_4b1ffa12976b42ecb4ed027b53b5929a.Properties.Sett" +
    "ings")]

namespace SC_4b1ffa12976b42ecb4ed027b53b5929a.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_4b1ffa12976b42ecb4ed027b53b5929a</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_4b1ffa12976b42ecb4ed027b53b5929a</msb:DisplayName>
    <msb:ProjectId>{03D0CBA3-DD92-418A-9E94-FDAFBA2C9257}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_4b1ffa12976b42ecb4ed027b53b5929a.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_4b1ffa12976b42ecb4ed027b53b5929a")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_4b1ffa12976b42ecb4ed027b53b5929a")]
[assembly: AssemblyCopyright("Copyright @ HP 2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4b1ffa12976b42ecb4ed027b53b5929a.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4b1ffa12976b42ecb4ed027b53b5929a.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4b1ffa12976b42ecb4ed027b53b5929a.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_4b1ffa12976b42ecb4ed027b53b5929a.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_4b1ffa12976b42ecb4ed027b53b5929a.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_4b1ffa12976b42ecb4ed027b53b5929a.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAPaSbGUAAAAAAAAAAOAAIiALATAAABwAAAAIAAAAAAAAfjsA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAACw7AABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAhBsAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABg
OwAAAAAAAEgAAAACAAUArCQAAMgVAAABAAAAAAAAAHQ6AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABMwAgA/AAAAAQAAEQIoEAAACnIBAABwKBEAAAoKFgsrIwYH
migRAAAKKAEAACsoEwAACgwCewEAAAQIbxQAAAoHF1gLBwaOaTLXKh4CKBUAAAoqABswBgC6AQAA
AgAAEQJ7AQAABG8WAAAKCjiMAQAAEgAoFwAACgtzGAAACiYHcxkAAAoMFhMHKw0IbxoAAAomEQcX
WBMHEQccMu4HB3LgAABwbxsAAAobWBlvHAAAChMEBwdy7AAAcG8bAAAKHwtYHw5vHAAAChMFEQRy
AgEAcBEFKB0AAAoTBjgEAQAACReNJAAAASUWHyydbx4AAAoTCBEIFpooHwAACiggAAAKEwkRCBea
KB8AAAooIAAAChMKEQkgigEAABYWFhdzIQAACigiAAAKOcQAAAARCSCbAQAAFhYWF3MhAAAKKCMA
AAo5qgAAABEKIIIEAAAWFhYXcyEAAAooIgAACjmQAAAAEQogmAQAABYWFhdzIQAACigjAAAKLQXd
gAAAABEIG5pyBgEAcBEIHJooHQAACnIKAQBwKB8AAAoWEgsoJAAACi0C3lgCewQAAARvDgAABgJ7
BAAABBEJbwwAAAYCewQAAAQRCm8KAAAGAnsEAAAEEQtvCAAABgJ7BAAABBEGbwYAAAYIbxoAAAol
DTrv/v//3goILAYIbyUAAArcEgAoJgAACjpo/v//3g4SAP4WAgAAG28lAAAK3CoAAEE0AAACAAAA
JgAAAG0BAACTAQAACgAAAAAAAAACAAAADAAAAJ8BAACrAQAADgAAAAAAAABKAnMnAAAKfQEAAAQC
KBEAAAYqKgIDBAUoKAAACiomAhYDKCkAAAoqWgMsCAIWKCoAAAoqcjIBAHBzKwAACno6AhcDjBIA
AAEoKQAACipaAywIAhcoKgAACipyMgEAcHMrAAAKejoCGAOMEQAAASgpAAAKKloDLAgCGCgqAAAK
KnIyAQBwcysAAAp6OgIZA4wRAAABKCkAAAoqWgMsCAIZKCoAAAoqcjIBAHBzKwAACnoeAigsAAAK
Kh4CKC0AAAoqHgIoLgAACip+AigvAAAKAgJzFgAABn0CAAAEAgJzFwAABn0DAAAEKgYqbgJ7BAAA
BCwSAnsEAAAEbw8AAAYCFH0EAAAEKgATMAUASQAAAAMAABEWCisuBAaUDgRyzwEAcCgwAAAKMxkC
BQaaAgQGlCgxAAAKDgRzBQAABn0EAAAEBhdYCgYDMs4CbxUAAAYCbxIAAAYCKBMAAAYqOgIoMgAA
CgIDfQUAAAQqOgIoMgAACgIDfQYAAAQqHgIoMgAACiqufgcAAAQtHnLhAQBw0AcAAAIoMwAACm80
AAAKczUAAAqABwAABH4HAAAEKhp+CAAABCoeAoAIAAAEKhp+CQAABCoeAig2AAAKKi5zHQAABoAJ
AAAEKh4CewoAAAQqIgIDfQoAAAQqHgJ7CwAABCoiAgN9CwAABCoeAnsMAAAEKiICA30MAAAEKkJT
SkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAAPwHAAAjfgAAaAgAAIAIAAAjU3RyaW5n
cwAAAADoEAAAVAIAACNVUwA8EwAAEAAAACNHVUlEAAAATBMAAHwCAAAjQmxvYgAAAAAAAAACAAAB
VxWiCQkLAAAA+gEzABYAAAEAAAArAAAACQAAAAwAAAAlAAAAFQAAADYAAAAZAAAAAwAAAAQAAAAO
AAAAEgAAAAMAAAABAAAABQAAAAEAAAABAAAAAQAAAAAAVAQBAAAAAAAGADQDRAYGAMgDRAYGAIAC
MQYPALgGAAAGAK0CRQUGABcDRQUGAPgCRQUGAK8DRQUGAFQDRQUGAG0DRQUGAMQCRQUGAN8CCwQK
AIgDngEGAA8AYgA7AA8GAAAGAKYFKwAGADYE4gQGAIwB4gQGAKYH4gQGAEgCRAYKAOsFngEOANwF
ngEKAH0FngEKAOwHngEGAGMCMQYGAPwFZAYGAHEFMAUSADMCPgQSAJQCPgQSAA0CGwUGAHUIKwAW
AEABlQUGAAEAYgAGALMFKwAGACUE4gQGAKEF4gQGAL4F4gQGABgHMAUGAEsB4gQGAFcF4gQGAL8B
4gQGAFcB4gQGAGwIRQUAAAAAFgAAAAAAAQABAAEAEAAQBQAAEAABAAEAAQAQAM4FAABVAAIABQAB
ABAAzgcAAGEAAgARAAEAEABbBwAATQAFABYAAQAQAAUHAABNAAYAFwAAABAAawbWBk0ABwAYAAAB
EABMB9YGeQAJABwAAwAQAGQIAABNAAoAHwABAFUHFwEGAFsHHgEGAAUHIgEGAM4FJgEBANwHKgEB
ANwHKgERAOkELgERAOgBMgERAPEANgEBANcAOgEBAL0APgEBAKIAPgFQIAAAAADGAOYDBgABAJsg
AAAAAMYA8QMGAAEApCAAAAAAxgB9BwYAAQCgIgAAAACGGBoGBgABALMiAAAAAIYYGgbNAAEAviIA
AAAAhgh9ABAABADIIgAAAACGCHwEQQEFAN8iAAAAAIYIiAFGAQYA7iIAAAAAhgi9BEEBBwAFIwAA
AACGCA8BTAEIABQjAAAAAIYIlARBAQkAKyMAAAAAhggqAUwBCgA6IwAAAACGCKkEQQELAFEjAAAA
AIYAYQgGAAwAWSMAAAAAhgCtBwYADABhIwAAAACGALAHyQAMAGkjAAAAAIYYGgYGAAwAiSMAAAAA
xgFvBwYADACLIwAAAACBAI4ABgAMAKgjAAAAAMYATAhSAQwAiSMAAAAAxgF9BwYAEAD9IwAAAACG
GBoGXgEQAAwkAAAAAIYYGgZeAREAGyQAAAAAgxgaBgYAEgAjJAAAAACTCPgFZAESAE8kAAAAAJMI
0AGbABIAViQAAAAAkwjcAWkBEgBeJAAAAACWCMIHbwETAGUkAAAAAIYYGgYGABMAbSQAAAAAkRgg
BnQBEwB5JAAAAACGCHsBeAETAIEkAAAAAIYIiAFGARMAiiQAAAAAhggdAX0BFACSJAAAAACGCCoB
gQEUAJskAAAAAIYIAQF9ARUAoyQAAAAAhggPAYEBFQAbJAAAAACGGBoGBgAWAAAAAQDxBQAAAgAn
BwAAAwCLBQAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9AwAA
AQB1BwAAAgAnBgAAAwBnBwAABACLBQAAAQDyBwAAAQDyBwAAAQD9AwAAAQD9AwAAAQD9AwAAAQD9
AwkAGgYBABEAGgYGABkAGgYKACkAGgYQADEAGgYQADkAGgYQAEEAGgYQAEkAGgYQAFEAGgYQAFkA
GgYQAGEAGgYQAGkAGgYGAKEAGgYGAMkAGgYGAOkAGgYVAMEA5gMGAPkAxwYjAAEBRggpAPkADwcj
AAwANwFAAMEA8QMGAAwADAZjABQA/AdyABwAGgYGAIEAGgYQABEBlQF+ABkBAwSCABkBLASHABkB
kQeNABkBvAeUANkA+AGbAIkALQKgAIkAGgapAIkA9QSyAIkABAWyAJEAmAe6ADkBJQIGABQAWAjJ
AAwAGgYGAKkAGgbNAKkA2QTXAKkA0QQBAEEBGgYQAKkAYQgGAKkArQcGAKkAsAfJAMEAGgYGAMEA
HwDhAMEAOwfoAJkAGgYGAEkBaQHuAEkBaAj3ANEAGgb9APEAGgYGAC4ACwCrAS4AEwC0AS4AGwDT
AS4AIwDcAS4AKwAFAi4AMwAFAi4AOwALAi4AQwDcAS4ASwATAi4AUwAFAi4AWwAsAkMAYwB2AuMA
cwB2AiEBawB2AikBewDTAUEBawB2AkkBewDTAWEBawB2AoEBawB2AuADawB2AgAEawB2AiAEawB2
AkAEawB2AmAEawB2AoAEawB2AhsASwDdAAMAAQAHAAkACAALAAkADAAAAIEAhgEAAIAEigEAAIwB
jgEAAMEEigEAABMBkwEAAJgEigEAAC4BkwEAAK0EigEAAPwFmAEAAAUCnQEAAMYHogEAAIwBjgEA
AC4BpwEAABMBpwEBAAYAAwABAAcABQABAAgABwABAAkACQABAAoACwABAAsADQABAAwADwABAA0A
EQACABkAEwACABoAFQABABsAFQACABwAFwACAB8AGQABACAAGQACACEAGwABACIAGwACACMAHQAB
ACQAHQA6AGwAdwAEgAAAAQAAAAAAAAAAAAAAAAA1AAAABAAAAAAAAAAAAAAABQFZAAAAAAAQAAAA
AAAAAAAAAAAOAQgIAAAAABAAAAAAAAAAAAAAAA4BJQgAAAAABAAAAAAAAAAAAAAABQHiBAAAAAAE
AAAAAAAAAAAAAAAFAcQBAAAAAAAAAAABAAAAdQYAAAkAAgAlADYAAAAASUVudW1lcmFibGVgMQBM
aXN0YDEAPE1vZHVsZT4AR2V0T3V0cHV0SUQAU3lzdGVtLklPAFNDXzRiMWZmYTEyOTc2YjQyZWNi
NGVkMDI3YjUzYjU5MjlhAG1zY29ybGliAFN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljAHNldF9U
cmFqZWN0b3J5SWQATWFya091dHB1dHNGaW5pc2hlZAA8TG9uZ2l0dWRlPmtfX0JhY2tpbmdGaWVs
ZAA8TGF0aXR1ZGU+a19fQmFja2luZ0ZpZWxkADxEYXRlVGltZT5rX19CYWNraW5nRmllbGQAZGVm
YXVsdEluc3RhbmNlAGdldF9Mb25naXR1ZGUAc2V0X0xvbmdpdHVkZQBnZXRfTGF0aXR1ZGUAc2V0
X0xhdGl0dWRlAEFkZFJhbmdlAEVudW1lcmFibGUASURpc3Bvc2FibGUAUnVudGltZVR5cGVIYW5k
bGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X0RhdGVUaW1lAHNldF9EYXRlVGltZQBSZWFkTGluZQBN
aWNyb3NvZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAFN5c3RlbS5Db3JlAGdldF9DdWx0
dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBnZXRfSW52YXJpYW50Q3VsdHVyZQBBcHBs
aWNhdGlvblNldHRpbmdzQmFzZQBEaXNwb3NlAFBhcnNlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENv
bXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVi
dWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0
dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1
dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRy
aWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRy
aWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5
UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmls
aXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFsdWUASW5kZXhPZgBTeXN0ZW0u
UnVudGltZS5WZXJzaW9uaW5nAFN0cmluZwBTdWJzdHJpbmcARGVjaW1hbABTeXN0ZW0uQ29tcG9u
ZW50TW9kZWwAU0NfNGIxZmZhMTI5NzZiNDJlY2I0ZWQwMjdiNTNiNTkyOWEuZGxsAHNldF9UcmFq
ZWN0b3J5SWRfSXNOdWxsAHNldF9Mb25naXR1ZGVfSXNOdWxsAHNldF9MYXRpdHVkZV9Jc051bGwA
c2V0X0RhdGVUaW1lX0lzTnVsbABTZXROdWxsAHNldF9JdGVtAFN5c3RlbQByZXNvdXJjZU1hbgBv
cF9HcmVhdGVyVGhhbgBvcF9MZXNzVGhhbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9u
AFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRPcGVyYXRpb25F
eGNlcHRpb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAAU3lzdGVtLkxpbnEA
Q2hhcgBTdHJlYW1SZWFkZXIAVGV4dFJlYWRlcgBJRm9ybWF0UHJvdmlkZXIAT3V0cHV0MEJ1ZmZl
cgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgBHZXRFbnVt
ZXJhdG9yAC5jdG9yAC5jY3RvcgBPdXRwdXRJRHMAU3lzdGVtLkRpYWdub3N0aWNzAFN5c3RlbS5S
dW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ180YjFmZmExMjk3NmI0
MmVjYjRlZDAyN2I1M2I1OTI5YS5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVidWdn
aW5nTW9kZXMAR2V0RGlyZWN0b3JpZXMAU0NfNGIxZmZhMTI5NzZiNDJlY2I0ZWQwMjdiNTNiNTky
OWEuUHJvcGVydGllcwBWYXJpYWJsZXMAR2V0RmlsZXMARGF0ZVRpbWVTdHlsZXMAQnVmZmVyQ29s
dW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdzAHBhdGhzAENvbm5lY3Rpb25zAEJ1
ZmZlcnMARmluaXNoT3V0cHV0cwBDcmVhdGVOZXdPdXRwdXRSb3dzAENvbmNhdABUcnlQYXJzZUV4
YWN0AE9iamVjdABTZXRFbmRPZlJvd3NldABTcGxpdABnZXRfRGVmYXVsdABVc2VyQ29tcG9uZW50
AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21wb25lbnQAZ2V0X0N1cnJlbnQATWljcm9zb2Z0LlNx
bFNlcnZlci5UeFNjcmlwdABNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABGaXJzdABQ
cmltZU91dHB1dABNb3ZlTmV4dABBZGRSb3cAZ2V0X0Fzc2VtYmx5AERpcmVjdG9yeQAAAIDdQwA6
AFwAVQBzAGUAcgBzAFwAUgBlAHoAZQByAHcAbwB3AHkAXABEAGUAcwBrAHQAbwBwAFwARQBuAGcA
aQBuAGUAZQByAGkAbgBnACAAVABoAGUAcwBpAHMAXABEAGEAdABhAHMAZQB0AHMAXABHAGUAbwBs
AGkAZgBlACAAVAByAGEAagBlAGMAdABvAHIAaQBlAHMAIAAxAC4AMwBcAEcAZQBvAGwAaQBmAGUA
IABUAHIAYQBqAGUAYwB0AG8AcgBpAGUAcwAgADEALgAzAFwARABhAHQAYQBcAAALRABhAHQAYQBc
AAAVVAByAGEAagBlAGMAdABvAHIAeQAAAy0AAQMgAAAneQB5AHkAeQAtAE0ATQAtAGQAZAAgAEgA
SAA6AG0AbQA6AHMAcwABgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4A
bwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAg
AHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4A
ABFPAHUAdABwAHUAdAAgADAAAHFTAEMAXwA0AGIAMQBmAGYAYQAxADIAOQA3ADYAYgA0ADIAZQBj
AGIANABlAGQAMAAyADcAYgA1ADMAYgA1ADkAMgA5AGEALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4A
UgBlAHMAbwB1AHIAYwBlAHMAAABGFebwJxECTbNby/6G2xrvAAQgAQEIAyAAAQUgAQEREQQgAQEO
BSABARFxBwcDHQ4IHQ4FAAEdDg4MEAEBHgAVEoCFAR4AAwoBDgUVEjkBDgogAQEVEoCFARMAFwcM
FRE9AQ4OEkEODg4OCB0OEUURRRFJCCAAFRE9ARMABRURPQEOBCAAEwAGFRI5ARIkAyAADgQgAQgO
BSACDggIBgADDg4ODgYgAR0OHQMEAAASbQgAAhFFDhKAlQggBQEICAgCBQcAAgIRRRFFDgAFAg4O
EoCVEYCZEBFJAyAAAgkgAwESWR0IEl0FIAIBCBwDBwEIBgACCBJdDgUgAR0ICAgAARKApRGAqQUg
ABKArQcgAgEOEoCtCLd6XFYZNOCJCImEXc2AgMyRBgYVEjkBDgMGEhQDBhIYAwYSDAMGEmEDBhJp
AwYSbQMGEiADBhFJAgYNBCABAQIFIAEBEUkFIAEBEUULIAQBCB0IHRJZEl0FIAEBEmEEAAASaQUA
AQESbQQAABIgAwAAAQQgABFJAyAADQQgAQENAygADgMoAAIEKAARSQQoABFFBAgAEmkECAASbQQI
ABIgAygADQgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAo
AQAjU0NfNGIxZmZhMTI5NzZiNDJlY2I0ZWQwMjdiNTNiNTkyOWEAAAUBAAAAAAcBAAJIUAAAGAEA
E0NvcHlyaWdodCBAIEhQIDIwMjMAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4U
RnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEAAAAAtAAAAM7K774BAAAA
kQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00
LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkj
U3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAA
AFQ7AAAAAAAAAAAAAG47AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgOwAAAAAAAAAAAAAAAF9D
b3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAAPQDAAAAAAAAAAAAAPQDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsARUAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAwAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAJgADAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAABIAFAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAEMAXwA0AGIAMQBmAGYAYQAxADIAOQA3ADYAYgA0ADIAZQBjAGIANABlAGQAMAAyADcAYgA1
ADMAYgA1ADkAMgA5AGEAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
MAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADQAYgAxAGYAZgBh
ADEAMgA5ADcANgBiADQAMgBlAGMAYgA0AGUAZAAwADIANwBiADUAMwBiADUAOQAyADkAYQAuAGQA
bABsAAAATAAUAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAASABQACAAMgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIA
awBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBf
ADQAYgAxAGYAZgBhADEAMgA5ADcANgBiADQAMgBlAGMAYgA0AGUAZAAwADIANwBiADUAMwBiADUA
OQAyADkAYQAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA0
AGIAMQBmAGYAYQAxADIAOQA3ADYAYgA0ADIAZQBjAGIANABlAGQAMAAyADcAYgA1ADMAYgA1ADkA
MgA5AGEAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAw
AAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACAOwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_4b1ffa12976b42ecb4ed027b53b5929a</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">57</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Geolife Data Flow\Script Component.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Geolife Data Flow\Script Component.Outputs[Output 0].Columns[TrajectoryId]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Geolife Data Flow\Script Component.Outputs[Output 0].Columns[TrajectoryId]"
                      name="TrajectoryId" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Script Component.Outputs[Output 0].Columns[DateTime]"
                      dataType="date"
                      lineageId="Package\Geolife Data Flow\Script Component.Outputs[Output 0].Columns[DateTime]"
                      name="DateTime" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Script Component.Outputs[Output 0].Columns[Longitude]"
                      dataType="decimal"
                      lineageId="Package\Geolife Data Flow\Script Component.Outputs[Output 0].Columns[Longitude]"
                      name="Longitude" />
                    <outputColumn
                      refId="Package\Geolife Data Flow\Script Component.Outputs[Output 0].Columns[Latitude]"
                      dataType="decimal"
                      lineageId="Package\Geolife Data Flow\Script Component.Outputs[Output 0].Columns[Latitude]"
                      name="Latitude" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Geolife Data Flow.Paths[Derived Column Output]"
              endId="Package\Geolife Data Flow\Add weather.Inputs[Input 0]"
              name="Derived Column Output"
              startId="Package\Geolife Data Flow\IdInFile and city columns.Outputs[Derived Column Output]" />
            <path
              refId="Package\Geolife Data Flow.Paths[Derived Column Output1]"
              endId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Root]"
              name="Derived Column Output"
              startId="Package\Geolife Data Flow\Derived Column.Outputs[Derived Column Output]" />
            <path
              refId="Package\Geolife Data Flow.Paths[Multicast Output 1]"
              endId="Package\Geolife Data Flow\Derived Column.Inputs[Derived Column Input]"
              name="Multicast Output 1"
              startId="Package\Geolife Data Flow\Multicast.Outputs[Multicast Output 1]" />
            <path
              refId="Package\Geolife Data Flow.Paths[Multicast Output 11]"
              endId="Package\Geolife Data Flow\CosmosDB Destination.Inputs[Points]"
              name="Multicast Output 1"
              startId="Package\Geolife Data Flow\Multicast 1.Outputs[Multicast Output 1]" />
            <path
              refId="Package\Geolife Data Flow.Paths[Multicast Output 2]"
              endId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Root]"
              name="Multicast Output 2"
              startId="Package\Geolife Data Flow\Multicast.Outputs[Multicast Output 2]" />
            <path
              refId="Package\Geolife Data Flow.Paths[Multicast Output 21]"
              endId="Package\Geolife Data Flow\MongoDB Destination.Inputs[Points]"
              name="Multicast Output 2"
              startId="Package\Geolife Data Flow\Multicast 1.Outputs[Multicast Output 2]" />
            <path
              refId="Package\Geolife Data Flow.Paths[Output 0]"
              endId="Package\Geolife Data Flow\IdInFile and city columns.Inputs[Derived Column Input]"
              name="Output 0"
              startId="Package\Geolife Data Flow\Load Geolife trajectories.Outputs[Output 0]" />
            <path
              refId="Package\Geolife Data Flow.Paths[Output 01]"
              endId="Package\Geolife Data Flow\Add fuel prices.Inputs[Input 0]"
              name="Output 0"
              startId="Package\Geolife Data Flow\Add weather.Outputs[Output 0]" />
            <path
              refId="Package\Geolife Data Flow.Paths[Output 02]"
              endId="Package\Geolife Data Flow\Add Context.Inputs[Input 0]"
              name="Output 0"
              startId="Package\Geolife Data Flow\Add fuel prices.Outputs[Output 0]" />
            <path
              refId="Package\Geolife Data Flow.Paths[Output 03]"
              endId="Package\Geolife Data Flow\Multicast.Inputs[Multicast Input 1]"
              name="Output 0"
              startId="Package\Geolife Data Flow\Add Context.Outputs[Output 0]" />
            <path
              refId="Package\Geolife Data Flow.Paths[Output 04]"
              endId="Package\Geolife Data Flow\Add region.Inputs[Input 0]"
              name="Output 0"
              startId="Package\Geolife Data Flow\Script Component.Outputs[Output 0]" />
            <path
              refId="Package\Geolife Data Flow.Paths[Output 05]"
              endId="Package\Geolife Data Flow\Multicast 1.Inputs[Multicast Input 1]"
              name="Output 0"
              startId="Package\Geolife Data Flow\Add region.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Hannover Data Flow"
      DTS:CreationName="Microsoft.Pipeline"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{D398097E-0C00-4B23-A517-F7B57DFC3C76}"
      DTS:ExecutableType="Microsoft.Pipeline"
      DTS:LocaleID="-1"
      DTS:ObjectName="Hannover Data Flow"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          version="1">
          <components>
            <component
              refId="Package\Hannover Data Flow\Add Context"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Add Context"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Globalization;
using System.IO;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>

    List<ContextData> contextData = new List<ContextData>();
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        string filePath = "C:\\Users\\Rezerwowy\\Desktop\\Engineering Thesis\\Datasets\\Context_Data\\Context_Data_China_Germany.csv";
        using (StreamReader reader = new StreamReader(filePath))
        {
            string line;
            reader.ReadLine();
            while ((line = reader.ReadLine()) != null)
            {
                string[] fields = line.Split(';'); // Change the delimiter if needed

                if (fields[1] == "DEU")
                {
                    List<string> yearsdata = new List<string>
                    {
                        fields[10],
                        fields[11],
                        fields[12]
                    };

                    ContextData data = new ContextData()
                    {
                        SeriesCode = fields[3],
                        YearsData = yearsdata
                    };

                    contextData.Add(data);
                }
                
            }
        }
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        foreach (ContextData data in contextData)
        {
            switch(data.SeriesCode)
            {
                case "SH.STA.TRAF.P5":
                    Row.MortalityInRoadTrafficPer100000 = decimal.Parse(data.YearsData[Row.StartDate.Year - 2017], CultureInfo.GetCultureInfo("pl-PL"));
                    break;
                case "SP.POP.TOTL":
                    Row.TotalPopulation = int.Parse(data.YearsData[Row.StartDate.Year - 2017], CultureInfo.GetCultureInfo("pl-PL"));
                    break;
                case "SP.POP.TOTL.MA.ZS":
                    Row.MalePercentage = decimal.Parse(data.YearsData[Row.StartDate.Year - 2017], CultureInfo.GetCultureInfo("pl-PL"));
                    break;
                case "SP.POP.TOTL.FE.ZS":
                    Row.FemalePercentage = decimal.Parse(data.YearsData[Row.StartDate.Year - 2017], CultureInfo.GetCultureInfo("pl-PL"));
                    break;
                case "EN.POP.DNST":
                    Row.CountryDensity = decimal.Parse(data.YearsData[Row.StartDate.Year - 2017], CultureInfo.GetCultureInfo("pl-PL"));
                    break;
                case "NY.GDP.PCAP.KN":
                    Row.GDPPerCapitaConstantLCU = decimal.Parse(data.YearsData[Row.StartDate.Year - 2017], CultureInfo.GetCultureInfo("pl-PL"));
                    break;
                case "NY.GDP.PCAP.CN":
                    Row.GDPPerCapitaCurrentLCU = decimal.Parse(data.YearsData[Row.StartDate.Year - 2017], CultureInfo.GetCultureInfo("pl-PL"));
                    break;
                case "SP.URB.TOTL.ZS":
                    Row.UrbanPercentage = decimal.Parse(data.YearsData[Row.StartDate.Year - 2017], CultureInfo.GetCultureInfo("pl-PL"));
                    break;
                case "SP.RUR.TOTL.ZS":
                    Row.RuralPercentage = decimal.Parse(data.YearsData[Row.StartDate.Year - 2017], CultureInfo.GetCultureInfo("pl-PL"));
                    break;
                case "FP.CPI.TOTL.ZG":
                    Row.Inflation = decimal.Parse(data.YearsData[Row.StartDate.Year - 2017], CultureInfo.GetCultureInfo("pl-PL"));
                    break;
                case "SP.POP.0014.ZS":
                    Row.Age014Percentage = decimal.Parse(data.YearsData[Row.StartDate.Year - 2017], CultureInfo.GetCultureInfo("pl-PL"));
                    break;
                case "SP.POP.1564.ZS":
                    Row.Age1564Percentage = decimal.Parse(data.YearsData[Row.StartDate.Year - 2017], CultureInfo.GetCultureInfo("pl-PL"));
                    break;
                case "SP.POP.65UP.ZS":
                    Row.Age65Percentage = decimal.Parse(data.YearsData[Row.StartDate.Year - 2017], CultureInfo.GetCultureInfo("pl-PL"));
                    break;
                case "ST.INT.DPRT":
                    Row.DeparturesInInternationalTourism = int.Parse(data.YearsData[Row.StartDate.Year - 2017], CultureInfo.GetCultureInfo("pl-PL"));
                    break;
                case "ST.INT.ARVL":
                    Row.ArrivalsInInternationalTourism = int.Parse(data.YearsData[Row.StartDate.Year - 2017], CultureInfo.GetCultureInfo("pl-PL"));
                    break;
                case "SL.UEM.TOTL.NE.ZS":
                    Row.UneploymentNationalEstimate = decimal.Parse(data.YearsData[Row.StartDate.Year - 2017], CultureInfo.GetCultureInfo("pl-PL"));
                    break;
                case "SL.UEM.TOTL.ZS":
                    Row.UneploymentModeledILOEstimate = decimal.Parse(data.YearsData[Row.StartDate.Year - 2017], CultureInfo.GetCultureInfo("pl-PL"));
                    break;
            }
        }
    }

    private class ContextData
    {
        public string SeriesCode { get; set;}

        public List<string> YearsData { get; set;}

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public DateTime StartDate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[0]);
        }
    }
    public bool StartDate_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Int32 ArrivalsInInternationalTourism
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ArrivalsInInternationalTourism_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 DeparturesInInternationalTourism
    {
        set
        {
            this[2] = value;
        }
    }
    public bool DeparturesInInternationalTourism_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal UneploymentModeledILOEstimate
    {
        set
        {
            this[3] = value;
        }
    }
    public bool UneploymentModeledILOEstimate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal UneploymentNationalEstimate
    {
        set
        {
            this[4] = value;
        }
    }
    public bool UneploymentNationalEstimate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Inflation
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Inflation_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal GDPPerCapitaCurrentLCU
    {
        set
        {
            this[6] = value;
        }
    }
    public bool GDPPerCapitaCurrentLCU_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal GDPPerCapitaConstantLCU
    {
        set
        {
            this[7] = value;
        }
    }
    public bool GDPPerCapitaConstantLCU_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal MortalityInRoadTrafficPer100000
    {
        set
        {
            this[8] = value;
        }
    }
    public bool MortalityInRoadTrafficPer100000_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Age65Percentage
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Age65Percentage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Age1564Percentage
    {
        set
        {
            this[10] = value;
        }
    }
    public bool Age1564Percentage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(10);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Age014Percentage
    {
        set
        {
            this[11] = value;
        }
    }
    public bool Age014Percentage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal RuralPercentage
    {
        set
        {
            this[12] = value;
        }
    }
    public bool RuralPercentage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal UrbanPercentage
    {
        set
        {
            this[13] = value;
        }
    }
    public bool UrbanPercentage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal CountryDensity
    {
        set
        {
            this[14] = value;
        }
    }
    public bool CountryDensity_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal FemalePercentage
    {
        set
        {
            this[15] = value;
        }
    }
    public bool FemalePercentage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(15);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal MalePercentage
    {
        set
        {
            this[16] = value;
        }
    }
    public bool MalePercentage_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TotalPopulation
    {
        set
        {
            this[17] = value;
        }
    }
    public bool TotalPopulation_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4d0164e849cb4c3fa793f2207015a74d.Properties.Settings.get_Default():SC_4d0164e849cb4c3fa793f2207015a74d.Properties.Sett" +
    "ings")]

namespace SC_4d0164e849cb4c3fa793f2207015a74d.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_4d0164e849cb4c3fa793f2207015a74d</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_4d0164e849cb4c3fa793f2207015a74d</msb:DisplayName>
    <msb:ProjectId>{AC2CBB25-9C03-4344-808A-4C4CF4B02E06}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_4d0164e849cb4c3fa793f2207015a74d.csproj" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_4d0164e849cb4c3fa793f2207015a74d")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_4d0164e849cb4c3fa793f2207015a74d")]
[assembly: AssemblyCopyright("Copyright @ HP 2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_4d0164e849cb4c3fa793f2207015a74d.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{d31f6c43-9da9-4f9f-9795-60fad25321d6}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_4d0164e849cb4c3fa793f2207015a74d</RootNamespace>
    <AssemblyName>SC_4d0164e849cb4c3fa793f2207015a74d</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_4d0164e849cb4c3fa793f2207015a74d" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4d0164e849cb4c3fa793f2207015a74d.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4d0164e849cb4c3fa793f2207015a74d.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4d0164e849cb4c3fa793f2207015a74d.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_4d0164e849cb4c3fa793f2207015a74d.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_4d0164e849cb4c3fa793f2207015a74d.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_4d0164e849cb4c3fa793f2207015a74d.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANkbWmUAAAAAAAAAAOAAIiALATAAACoAAAAIAAAAAAAAakkA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABhJAABPAAAAAGAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAcCkAAAAgAAAAKgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAYAAAAAYAAAAsAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAMgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABM
SQAAAAAAAEgAAAACAAUANCsAACwdAAABAAAAAAAAAGBIAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBQCaAAAAAQAAEQIoEAAACnIBAABwcxEAAAoKBm8SAAAK
JitpBxeNIAAAASUWHzudbxMAAAoMCBeacsgAAHAoFAAACixIcxUAAAolCB8Kmm8WAAAKJQgfC5pv
FgAACiUIHwyabxYAAAoNcz0AAAYlCBmabzoAAAYlCW88AAAGEwQCewEAAAQRBG8XAAAKBm8SAAAK
JQstjd4KBiwGBm8YAAAK3CoAAAEQAAACABEAfo8ACgAAAAAeAigZAAAKKhswBAAfBgAAAgAAEQJ7
AQAABG8aAAAKCjjxBQAAEgAoGwAACgsHbzkAAAYMCDncBQAACCgcAAAKDQkfCy5VCR8OLgoJHxEu
dzjBBQAACBooHQAAChMEEQQfRDufAAAAEQQfRTsvAQAAEQQfT1lFBwAAANQAAAC/AAAAgAUAAJUA
AACABQAAWwAAAKoAAAA4ewUAAAgeKB0AAAoTBBEEH05ZRQUAAAAHAQAA8gAAABwBAABUBQAAMQEA
ADhPBQAACB8MKB0AAAoTBBEEH0Y7QwEAABEEH007JQEAABEEH047RgEAADglBQAACHLQAABwKBQA
AAo6RgEAADgQBQAACHLuAABwKBQAAAo6UwIAAAhyDAEAcCgUAAAKOn0CAAA46wQAAAhyKgEAcCgU
AAAKOqICAAA41gQAAAhySAEAcCgUAAAKOscCAAA4wQQAAAhyZgEAcCgUAAAKOuwCAAA4rAQAAAhy
hAEAcCgUAAAKOhEDAAAIcqIBAHAoFAAACjo7AwAACHLAAQBwKBQAAAo6ZQMAADh3BAAACHLeAQBw
KBQAAAo6MgQAADhiBAAACHL8AQBwKBQAAAo6vQAAADhNBAAACHIUAgBwKBQAAAo6VgEAADg4BAAA
CHIsAgBwKBQAAAo6SwMAADgjBAAACHJEAgBwKBQAAAo6cAMAADgOBAAACHJcAgBwKBQAAAo6owAA
ADj5AwAACHKAAgBwKBQAAAo6yAAAADjkAwAACHKkAgBwKBQAAAo6aAMAADjPAwAAAwdvOwAABgNv
BgAABhMFEgUoHgAACiDhBwAAWW8fAAAKcsgCAHAoIAAACighAAAKbxYAAAY4lQMAAAMHbzsAAAYD
bwYAAAYTBRIFKB4AAAog4QcAAFlvHwAACnLIAgBwKCAAAAooIgAACm8oAAAGOFsDAAADB287AAAG
A28GAAAGEwUSBSgeAAAKIOEHAABZbx8AAApyyAIAcCggAAAKKCEAAApvJgAABjghAwAAAwdvOwAA
BgNvBgAABhMFEgUoHgAACiDhBwAAWW8fAAAKcsgCAHAoIAAACighAAAKbyQAAAY45wIAAAMHbzsA
AAYDbwYAAAYTBRIFKB4AAAog4QcAAFlvHwAACnLIAgBwKCAAAAooIQAACm8iAAAGOK0CAAADB287
AAAGA28GAAAGEwUSBSgeAAAKIOEHAABZbx8AAApyyAIAcCggAAAKKCEAAApvFAAABjhzAgAAAwdv
OwAABgNvBgAABhMFEgUoHgAACiDhBwAAWW8fAAAKcsgCAHAoIAAACighAAAKbxIAAAY4OQIAAAMH
bzsAAAYDbwYAAAYTBRIFKB4AAAog4QcAAFlvHwAACnLIAgBwKCAAAAooIQAACm8gAAAGOP8BAAAD
B287AAAGA28GAAAGEwUSBSgeAAAKIOEHAABZbx8AAApyyAIAcCggAAAKKCEAAApvHgAABjjFAQAA
AwdvOwAABgNvBgAABhMFEgUoHgAACiDhBwAAWW8fAAAKcsgCAHAoIAAACighAAAKbxAAAAY4iwEA
AAMHbzsAAAYDbwYAAAYTBRIFKB4AAAog4QcAAFlvHwAACnLIAgBwKCAAAAooIQAACm8cAAAGOFEB
AAADB287AAAGA28GAAAGEwUSBSgeAAAKIOEHAABZbx8AAApyyAIAcCggAAAKKCEAAApvGgAABjgX
AQAAAwdvOwAABgNvBgAABhMFEgUoHgAACiDhBwAAWW8fAAAKcsgCAHAoIAAACighAAAKbxgAAAY4
3QAAAAMHbzsAAAYDbwYAAAYTBRIFKB4AAAog4QcAAFlvHwAACnLIAgBwKCAAAAooIgAACm8KAAAG
OKMAAAADB287AAAGA28GAAAGEwUSBSgeAAAKIOEHAABZbx8AAApyyAIAcCggAAAKKCIAAApvCAAA
BitsAwdvOwAABgNvBgAABhMFEgUoHgAACiDhBwAAWW8fAAAKcsgCAHAoIAAACighAAAKbw4AAAYr
NQMHbzsAAAYDbwYAAAYTBRIFKB4AAAog4QcAAFlvHwAACnLIAgBwKCAAAAooIQAACm8MAAAGEgAo
IwAACjoD+v//3g4SAP4WAwAAG28YAAAK3CoAQRwAAAIAAAAMAAAABAYAABAGAAAOAAAAAAAAAEoC
cyQAAAp9AQAABAIoLAAABioqAgMEBSglAAAKKlICeyYAAAoCeycAAAoWlG8oAAAKKiICFigpAAAK
KjoCFwOMJAAAASgqAAAKKloDLAgCFygrAAAKKnLUAgBwcywAAAp6OgIYA4wkAAABKCoAAAoqWgMs
CAIYKCsAAAoqctQCAHBzLAAACno6AhkDjBcAAAEoKgAACipaAywIAhkoKwAACipy1AIAcHMsAAAK
ejoCGgOMFwAAASgqAAAKKloDLAgCGigrAAAKKnLUAgBwcywAAAp6OgIbA4wXAAABKCoAAAoqWgMs
CAIbKCsAAAoqctQCAHBzLAAACno6AhwDjBcAAAEoKgAACipaAywIAhwoKwAACipy1AIAcHMsAAAK
ejoCHQOMFwAAASgqAAAKKloDLAgCHSgrAAAKKnLUAgBwcywAAAp6OgIeA4wXAAABKCoAAAoqWgMs
CAIeKCsAAAoqctQCAHBzLAAACno+Ah8JA4wXAAABKCoAAAoqXgMsCQIfCSgrAAAKKnLUAgBwcywA
AAp6PgIfCgOMFwAAASgqAAAKKl4DLAkCHwooKwAACipy1AIAcHMsAAAKej4CHwsDjBcAAAEoKgAA
CipeAywJAh8LKCsAAAoqctQCAHBzLAAACno+Ah8MA4wXAAABKCoAAAoqXgMsCQIfDCgrAAAKKnLU
AgBwcywAAAp6PgIfDQOMFwAAASgqAAAKKl4DLAkCHw0oKwAACipy1AIAcHMsAAAKej4CHw4DjBcA
AAEoKgAACipeAywJAh8OKCsAAAoqctQCAHBzLAAACno+Ah8PA4wXAAABKCoAAAoqXgMsCQIfDygr
AAAKKnLUAgBwcywAAAp6PgIfEAOMFwAAASgqAAAKKl4DLAkCHxAoKwAACipy1AIAcHMsAAAKej4C
HxEDjCQAAAEoKgAACipeAywJAh8RKCsAAAoqctQCAHBzLAAACnoeAigtAAAKKh4CKC4AAAoqfgIo
LwAACgICczAAAAZ9AgAABAICczEAAAZ9AwAABCqSBHJxAwBwGm8wAAAKLBUCBQIDKDEAAAoOBHMF
AAAGby4AAAYqSisHAgNvLwAABgNvKgAABi3xKgYqOgIoMgAACgIDfQQAAAQqOgIoMgAACgIDfQUA
AAQqHgIoMgAACiqufgYAAAQtHnKBAwBw0AcAAAIoMwAACm80AAAKczUAAAqABgAABH4GAAAEKhp+
BwAABCoeAoAHAAAEKhp+CAAABCoeAig2AAAKKi5zNwAABoAIAAAEKh4CewkAAAQqIgIDfQkAAAQq
HgJ7CgAABCoiAgN9CgAABCpCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADsCgAA
I34AAFgLAABgCwAAI1N0cmluZ3MAAAAAuBYAAPQDAAAjVVMArBoAABAAAAAjR1VJRAAAALwaAABw
AgAAI0Jsb2IAAAAAAAAAAgAAAVcVogkJAwAAAPoBMwAWAAABAAAAKQAAAAkAAAAKAAAAPQAAADEA
AAA2AAAAFgAAAAIAAAAEAAAAKQAAACwAAAADAAAAAQAAAAQAAAABAAAAAQAAAAAAJQUBAAAAAAAG
AAwEUwkGAKAEUwkGAFgDQAkPAMcJAAAGAIUDTggGAO8DTggGANADTggGAIcETggGACwETggGAEUE
TggGAJwDTggGALcD2wQKAGAERwIGACUAwQAGAMAIQwA7ACgJAAAGADUCnAcGAFoKnAcGACADUwkK
AAQJRwIOAPUIRwIKAJoIRwIGAAcFnAcKAJ0KRwIGADsDQAkGABUJcwkGAI4IOQgSAAsDDwUSAGwD
DwUSAJUCJAgGAM0IQwAGALsInAcGAPUEnAcGAPgBnAcGANgInAcGACwAnAcGAGAInAcGAHoInAcG
AGgCnAcGAAQCnAcGADcLTggAAAAAMgAAAAAAAQABAAEAEAD3BwAAEAABAAEAAQAQAOgIAABRAAIA
BQABABAAfwoAAGEAAgAsAAEAEABECgAASQAEADAAAQAQAAUKAABJAAUAMQAAABAAegnWCUkABgAy
AAABEAA0CtYJeQAIADYAAwAQAKAAAABJAAkAOQABAKwA9wAGAEQK/wAGAAUKAwEBAI0KBwEBAI0K
BwERAOsHCwERAIUCDwERADsBEwEBAB8BFwEBAAQBGgFQIAAAAADGAL4EBgABAAghAAAAAMYAyQQG
AAEAECEAAAAAxgAUCyEBAQBYJwAAAACGGDMJBgACAGsnAAAAAIYYMwmdAAIAdicAAAAAhgi7AicB
BQCLJwAAAACGCH0GmQAFAJQnAAAAAIYIyAcBAAUAoycAAAAAhggOBywBBgC6JwAAAACGCKMHAQAH
AMknAAAAAIYI4gYsAQgA4CcAAAAAhgjJAjEBCQDvJwAAAACGCJIGLAEKAAYoAAAAAIYI6wIxAQsA
FSgAAAAAhgi7BiwBDAAsKAAAAACGCAIIMQENADsoAAAAAIYIOAcsAQ4AUigAAAAAhghpADEBDwBh
KAAAAACGCJsFLAEQAHgoAAAAAIYITQAxAREAhygAAAAAhgh4BSwBEgCeKAAAAACGCAEAMQETAK0o
AAAAAIYITQUsARQAxCgAAAAAhgiUATEBFQDUKAAAAACGCPYFLAEWAOwoAAAAAIYIfgExARcA/CgA
AAAAhgjZBSwBGAAUKQAAAACGCGkBMQEZACQpAAAAAIYIvQUsARoAPCkAAAAAhgjQATEBGwBMKQAA
AACGCEcGLAEcAGQpAAAAAIYI5AExAR0AdCkAAAAAhghiBiwBHgCMKQAAAACGCEwLMQEfAJwpAAAA
AIYIaAcsASAAtCkAAAAAhgi7ATEBIQDEKQAAAACGCCsGLAEiANwpAAAAAIYIqAExASMA7CkAAAAA
hggRBiwBJAAEKgAAAACGCBAIAQAlABQqAAAAAIYITQcsASYALCoAAAAAhgArC5kAJwA0KgAAAACG
AGEKmQAnADwqAAAAAIYYMwkGACcAXCoAAAAAxgD+CjcBJwCBKgAAAADGAfcKIQErAJQqAAAAAMYB
FAshASwAlioAAAAAhhgzCUEBLQClKgAAAACGGDMJQQEuALQqAAAAAIMYMwkGAC8AvCoAAAAAkwgR
CUcBLwDoKgAAAACTCG0CTAEvAO8qAAAAAJMIeQJRAS8A9yoAAAAAlghzClcBMAD+KgAAAACGGDMJ
BgAwAAYrAAAAAJEYOQlcATAAEisAAAAAhghLASoAMAAaKwAAAACGCFoBEAAwACMrAAAAAIYIhABg
ATEAKysAAAAAhgiSAGgBMQC0KgAAAACGGDMJBgAyAAAAAQAvCwAAAQAKCQAAAgAPCgAAAwCoCAAA
AQDVBAAAAQDVBAAAAQDVBAAAAQDVBAAAAQDVBAAAAQDVBAAAAQDVBAAAAQDVBAAAAQDVBAAAAQDV
BAAAAQDVBAAAAQDVBAAAAQDVBAAAAQDVBAAAAQDVBAAAAQDVBAAAAQDVBAAAAQDVBAAAAQDVBAAA
AQDVBAAAAQDVBAAAAQDVBAAAAQDVBAAAAQDVBAAAAQDVBAAAAQDVBAAAAQDVBAAAAQDVBAAAAQDV
BAAAAQDVBAAAAQDVBAAAAQDVBAAAAQDVBAAAAQDVBAAAAQA7AAAAAgAoAgAAAwAKCQAABACoCAAA
AQAKCQAAAQAvCwAAAQCjCgAAAQCjCgAAAQDVBAAAAQDVBAAAAQDVBAkAMwkBABEAMwkGABkAMwkK
ACkAMwkQADEAMwkQADkAMwkQAEEAMwkQAEkAMwkQAFEAMwkQAFkAMwkQAGEAMwkQAGkAMwkGAJkA
MwkGAMkAMwkGAOkAMwkVAMEAvgQGAHkAMwkQAPkAPgIqAAkBbQouAAkBQAs1AAwAMwkGAAwAAAFB
ABQAAAFBABEBrQIGAMEAyQQGABQAJQleABwArQpuAAkB/ARzAAkBUAp3AIkAsghzAAwAigd8ANkA
iwiCALkAtQKIACEBtQKRABwACwuZABQAMwkGAKEAMwmdAKEACgmnAKEADwqrAKkAMgKvAKEAewe1
AKEAkwe6AKEAggcBACkBMwkQAKEAKwuZAKEAYQqZAMEAMwkGAAkBPQrAAMEAIwrIAJEAMwkGADkB
FgLOADkBMwvXANEAMwndAPEAMwkGAC4ACwCeAS4AEwCnAS4AGwDGAS4AIwDPAS4AKwD4AS4AMwD4
AS4AOwD+AS4AQwDPAS4ASwAGAi4AUwD4AS4AWwAfAkMAYwBpAuMAcwBpAgEBawBpAiEBawBpAkEB
awBpAqkEewDGAckEewDGASAHawBpAkAHawBpAmAHawBpAoAHawBpAhsATgADAAEABwAlAAgAJwAJ
ACgAAAC/AnEBAACBBnYBAADMB3oBAAASB3YBAACnB3oBAADmBnYBAADNAn4BAACWBnYBAADvAn4B
AAC/BnYBAAAGCH4BAAA8B3YBAABtAH4BAACfBXYBAABRAH4BAAB8BXYBAAAFAH4BAABRBXYBAACY
AX4BAAD6BXYBAACCAX4BAADdBXYBAABtAX4BAADBBXYBAADUAX4BAABLBnYBAADoAX4BAABmBnYB
AABQC34BAABsB3YBAAC/AX4BAAAvBnYBAACsAX4BAAAVBnYBAAAUCHoBAABRB3YBAAAVCYMBAACN
AogBAAB3Co0BAABeAZIBAACWAJYBAgAGAAMAAgAHAAUAAQAIAAcAAQAJAAkAAQAKAAsAAQALAA0A
AQAMAA8AAQANABEAAQAOABMAAQAPABUAAQAQABcAAQARABkAAQASABsAAQATAB0AAQAUAB8AAQAV
ACEAAQAWACMAAQAXACUAAQAYACcAAQAZACkAAQAaACsAAQAbAC0AAQAcAC8AAQAdADEAAQAeADMA
AQAfADUAAQAgADcAAQAhADkAAQAiADsAAQAjAD0AAQAkAD8AAQAlAEEAAQAmAEMAAQAnAEUAAQAo
AEcAAQApAEkAAgAzAEsAAgA0AE0AAQA1AE0AAgA2AE8AAgA5AFEAAQA6AFEAAgA7AFMAAQA8AFMA
OwBHAGcABIAAAAEAAAAAAAAAAAAAAAAA3AAAAAQAAAAAAAAAAAAAAOUAuAAAAAAAEAAAAAAAAAAA
AAAA7gC5CgAAAAAQAAAAAAAAAAAAAADuANYKAAAAAAQAAAAAAAAAAAAAAOUAnAcAAAAAAAAAAAEA
AACECQAACQACAAAAAAAAc2V0X01vcnRhbGl0eUluUm9hZFRyYWZmaWNQZXIxMDAwMDAATGlzdGAx
AEludDMyADxNb2R1bGU+AElucHV0SUQAU3lzdGVtLklPAHNldF9HRFBQZXJDYXBpdGFDb25zdGFu
dExDVQBzZXRfR0RQUGVyQ2FwaXRhQ3VycmVudExDVQBnZXRfWWVhcnNEYXRhAHNldF9ZZWFyc0Rh
dGEAQ29udGV4dERhdGEAY29udGV4dERhdGEAbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdl
bmVyaWMAU0NfNGQwMTY0ZTg0OWNiNGMzZmE3OTNmMjIwNzAxNWE3NGQAQWRkADxZZWFyc0RhdGE+
a19fQmFja2luZ0ZpZWxkADxTZXJpZXNDb2RlPmtfX0JhY2tpbmdGaWVsZABkZWZhdWx0SW5zdGFu
Y2UAZ2V0X1Nlcmllc0NvZGUAc2V0X1Nlcmllc0NvZGUAc2V0X0FnZTAxNFBlcmNlbnRhZ2UAc2V0
X0FnZTE1NjRQZXJjZW50YWdlAHNldF9BZ2U2NVBlcmNlbnRhZ2UAc2V0X01hbGVQZXJjZW50YWdl
AHNldF9GZW1hbGVQZXJjZW50YWdlAHNldF9SdXJhbFBlcmNlbnRhZ2UAc2V0X1VyYmFuUGVyY2Vu
dGFnZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBJbnB1
dE5hbWUAR2V0RGF0ZVRpbWUAUmVhZExpbmUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxp
bmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRp
b25TZXR0aW5nc0Jhc2UARGlzcG9zZQBQYXJzZQBnZXRfU3RhcnREYXRlAHNldF9VbmVwbG95bWVu
dE1vZGVsZWRJTE9Fc3RpbWF0ZQBzZXRfVW5lcGxveW1lbnROYXRpb25hbEVzdGltYXRlAEVkaXRv
ckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERlYnVnZ2VyTm9uVXNl
ckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVBdHRyaWJ1
dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBUYXJn
ZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2Vt
Ymx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBB
c3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAU1NJU1Nj
cmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl
AFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAdmFs
dWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBTdHJpbmcAZ2V0X0xlbmd0aABEZWNpbWFsAFN5
c3RlbS5Db21wb25lbnRNb2RlbABTQ180ZDAxNjRlODQ5Y2I0YzNmYTc5M2YyMjA3MDE1YTc0ZC5k
bGwAc2V0X01vcnRhbGl0eUluUm9hZFRyYWZmaWNQZXIxMDAwMDBfSXNOdWxsAHNldF9HRFBQZXJD
YXBpdGFDb25zdGFudExDVV9Jc051bGwAc2V0X0dEUFBlckNhcGl0YUN1cnJlbnRMQ1VfSXNOdWxs
AHNldF9BZ2UwMTRQZXJjZW50YWdlX0lzTnVsbABzZXRfQWdlMTU2NFBlcmNlbnRhZ2VfSXNOdWxs
AHNldF9BZ2U2NVBlcmNlbnRhZ2VfSXNOdWxsAHNldF9NYWxlUGVyY2VudGFnZV9Jc051bGwAc2V0
X0ZlbWFsZVBlcmNlbnRhZ2VfSXNOdWxsAHNldF9SdXJhbFBlcmNlbnRhZ2VfSXNOdWxsAHNldF9V
cmJhblBlcmNlbnRhZ2VfSXNOdWxsAGdldF9TdGFydERhdGVfSXNOdWxsAHNldF9VbmVwbG95bWVu
dE1vZGVsZWRJTE9Fc3RpbWF0ZV9Jc051bGwAc2V0X1VuZXBsb3ltZW50TmF0aW9uYWxFc3RpbWF0
ZV9Jc051bGwAc2V0X0RlcGFydHVyZXNJbkludGVybmF0aW9uYWxUb3VyaXNtX0lzTnVsbABzZXRf
QXJyaXZhbHNJbkludGVybmF0aW9uYWxUb3VyaXNtX0lzTnVsbABzZXRfSW5mbGF0aW9uX0lzTnVs
bABzZXRfVG90YWxQb3B1bGF0aW9uX0lzTnVsbABzZXRfQ291bnRyeURlbnNpdHlfSXNOdWxsAFNl
dE51bGwAZ2V0X0l0ZW0Ac2V0X0l0ZW0AU3lzdGVtAHNldF9EZXBhcnR1cmVzSW5JbnRlcm5hdGlv
bmFsVG91cmlzbQBzZXRfQXJyaXZhbHNJbkludGVybmF0aW9uYWxUb3VyaXNtAHJlc291cmNlTWFu
AFNjcmlwdE1haW4Ac2V0X0luZmxhdGlvbgBzZXRfVG90YWxQb3B1bGF0aW9uAFN5c3RlbS5Db25m
aWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEludmFsaWRP
cGVyYXRpb25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBHZXRDdWx0dXJlSW5mbwBPdXRwdXRO
YW1lTWFwAE91dHB1dE1hcABnZXRfWWVhcgBDaGFyAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAElG
b3JtYXRQcm92aWRlcgBJbnB1dDBCdWZmZXIAUGlwZWxpbmVCdWZmZXIAU2NyaXB0QnVmZmVyAGdl
dF9SZXNvdXJjZU1hbmFnZXIAR2V0RW51bWVyYXRvcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdu
b3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBT
Q180ZDAxNjRlODQ5Y2I0YzNmYTc5M2YyMjA3MDE1YTc0ZC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5y
ZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfNGQwMTY0ZTg0OWNiNGMzZmE3OTNmMjIwNzAxNWE3
NGQuUHJvcGVydGllcwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRl
eGVzAFNldHRpbmdzAEVxdWFscwBDb25uZWN0aW9ucwBnZXRfQ2hhcnMAT2JqZWN0AEVuZE9mUm93
c2V0AFNwbGl0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlw
dENvbXBvbmVudABnZXRfQ3VycmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQATW92ZU5leHQA
SW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQBvcF9FcXVhbGl0eQBz
ZXRfQ291bnRyeURlbnNpdHkAAACAxUMAOgBcAFUAcwBlAHIAcwBcAFIAZQB6AGUAcgB3AG8AdwB5
AFwARABlAHMAawB0AG8AcABcAEUAbgBnAGkAbgBlAGUAcgBpAG4AZwAgAFQAaABlAHMAaQBzAFwA
RABhAHQAYQBzAGUAdABzAFwAQwBvAG4AdABlAHgAdABfAEQAYQB0AGEAXABDAG8AbgB0AGUAeAB0
AF8ARABhAHQAYQBfAEMAaABpAG4AYQBfAEcAZQByAG0AYQBuAHkALgBjAHMAdgAAB0QARQBVAAAd
UwBIAC4AUwBUAEEALgBUAFIAQQBGAC4AUAA1AAAdTgBZAC4ARwBEAFAALgBQAEMAQQBQAC4ASwBO
AAAdTgBZAC4ARwBEAFAALgBQAEMAQQBQAC4AQwBOAAAdUwBQAC4AVQBSAEIALgBUAE8AVABMAC4A
WgBTAAAdUwBQAC4AUgBVAFIALgBUAE8AVABMAC4AWgBTAAAdRgBQAC4AQwBQAEkALgBUAE8AVABM
AC4AWgBHAAAdUwBQAC4AUABPAFAALgAwADAAMQA0AC4AWgBTAAAdUwBQAC4AUABPAFAALgAxADUA
NgA0AC4AWgBTAAAdUwBQAC4AUABPAFAALgA2ADUAVQBQAC4AWgBTAAAdUwBMAC4AVQBFAE0ALgBU
AE8AVABMAC4AWgBTAAAXUwBQAC4AUABPAFAALgBUAE8AVABMAAAXRQBOAC4AUABPAFAALgBEAE4A
UwBUAAAXUwBUAC4ASQBOAFQALgBEAFAAUgBUAAAXUwBUAC4ASQBOAFQALgBBAFIAVgBMAAAjUwBQ
AC4AUABPAFAALgBUAE8AVABMAC4ATQBBAC4AWgBTAAAjUwBQAC4AUABPAFAALgBUAE8AVABMAC4A
RgBFAC4AWgBTAAAjUwBMAC4AVQBFAE0ALgBUAE8AVABMAC4ATgBFAC4AWgBTAAALcABsAC0AUABM
AAGAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQAIABiAGUAIABz
AGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBhAGwAdQBlACAA
dABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kAbgBwAHUAdAAg
ADAAAHFTAEMAXwA0AGQAMAAxADYANABlADgANAA5AGMAYgA0AGMAMwBmAGEANwA5ADMAZgAyADIA
MAA3ADAAMQA1AGEANwA0AGQALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBl
AHMAAAAMYED+SfSpT4wvGRDU4stqAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFxDgcFEj0OHQ4V
EjkBDhIkAyAADgYgAR0OHQMFAAICDg4FFRI5AQ4FIAEBEwAGFRI5ARIkDwcGFRFBARIkEiQOCAMR
RQggABURQQETAAYVEUEBEiQEIAATAAMgAAgEIAEDCAUgARMACAUAARJtDggAAhFdDhKAjQcAAggO
EoCNAyAAAgkgAwESVR0IElkDBhJVAwYdCAUgARFFCAQgAQIIBSACAQgcByACAg4RgJkFIAEdCAgI
AAESgJ0RgKEFIAASgKUHIAIBDhKApQi3elxWGTTgiQiJhF3NgIDMkQcGFRI5ARIkAwYSFAMGEhgD
BhJhAwYSaQMGEm0DBhIgAgYOBgYVEjkBDgUgAQESDAQgABFFBCABAQIFIAEBEV0JIAQBCA4SVRJZ
BSABARJhBAAAEmkEAAASbQUAAQESbQQAABIgAwAAAQcgABUSOQEOCCABARUSOQEOBCgAEUUDKAAC
AygACAQoABFdBAgAEmkECAASbQQIABIgAygADgcoABUSOQEOCAEACAAAAAAAHgEAAQBUAhZXcmFw
Tm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNTQ180ZDAxNjRlODQ5Y2I0YzNmYTc5M2Yy
MjA3MDE1YTc0ZAAABQEAAAAABwEAAkhQAAAYAQATQ29weXJpZ2h0IEAgSFAgMjAyMwAASQEAGi5O
RVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZy
YW1ld29yayA0LjcEAQAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291
cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1
YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVz
b3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEBJAAAAAAAAAAAAAFpJAAAAIAAAAAAAAAAA
AAAAAAAAAAAAAAAAAABMSQAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/
JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAAABgA
AIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA9AMA
AAAAAAAAAAAA9AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4AAAEA
AAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEAcgBG
AGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACwBFQD
AAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAADADAAABADAAMAAwADAAMAA0AGIAMAAA
ABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAmAAMAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUA
AAAAAEgAUAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBf
ADQAZAAwADEANgA0AGUAOAA0ADkAYwBiADQAYwAzAGYAYQA3ADkAMwBmADIAMgAwADcAMAAxADUA
YQA3ADQAZAAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4AMAAA
AHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8ANABkADAAMQA2ADQAZQA4ADQA
OQBjAGIANABjADMAZgBhADcAOQAzAGYAMgAyADAANwAwADEANQBhADcANABkAC4AZABsAGwAAABM
ABQAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAA
IABIAFAAIAAyADAAMgAzAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMAAAAA
AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ANABkADAA
MQA2ADQAZQA4ADQAOQBjAGIANABjADMAZgBhADcAOQAzAGYAMgAyADAANwAwADEANQBhADcANABk
AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADQAZAAwADEA
NgA0AGUAOAA0ADkAYwBiADQAYwAzAGYAYQA3ADkAMwBmADIAMgAwADcAMAAxADUAYQA3ADQAZAAA
ADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4AAgA
AQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAGw5AAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_4d0164e849cb4c3fa793f2207015a74d</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">A4</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Hannover Data Flow\Add Context.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Hannover Data Flow\Add Context.Inputs[Input 0].Columns[StartDate]"
                      cachedDataType="date"
                      cachedName="StartDate"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[StartDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Hannover Data Flow\Add Context.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Hannover Data Flow\Add Context.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[ArrivalsInInternationalTourism]"
                      dataType="i4"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[ArrivalsInInternationalTourism]"
                      name="ArrivalsInInternationalTourism" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[DeparturesInInternationalTourism]"
                      dataType="i4"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[DeparturesInInternationalTourism]"
                      name="DeparturesInInternationalTourism" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[UneploymentModeledILOEstimate]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[UneploymentModeledILOEstimate]"
                      name="UneploymentModeledILOEstimate" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[UneploymentNationalEstimate]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[UneploymentNationalEstimate]"
                      name="UneploymentNationalEstimate" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[Inflation]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[Inflation]"
                      name="Inflation" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[GDPPerCapitaCurrentLCU]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[GDPPerCapitaCurrentLCU]"
                      name="GDPPerCapitaCurrentLCU" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[GDPPerCapitaConstantLCU]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[GDPPerCapitaConstantLCU]"
                      name="GDPPerCapitaConstantLCU" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[MortalityInRoadTrafficPer100000]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[MortalityInRoadTrafficPer100000]"
                      name="MortalityInRoadTrafficPer100000" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[Age65+Percentage]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[Age65+Percentage]"
                      name="Age65+Percentage" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[Age15-64Percentage]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[Age15-64Percentage]"
                      name="Age15-64Percentage" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[Age0-14Percentage]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[Age0-14Percentage]"
                      name="Age0-14Percentage" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[RuralPercentage]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[RuralPercentage]"
                      name="RuralPercentage" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[UrbanPercentage]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[UrbanPercentage]"
                      name="UrbanPercentage" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[CountryDensity]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[CountryDensity]"
                      name="CountryDensity" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[FemalePercentage]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[FemalePercentage]"
                      name="FemalePercentage" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[MalePercentage]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[MalePercentage]"
                      name="MalePercentage" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[TotalPopulation]"
                      dataType="i4"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[TotalPopulation]"
                      name="TotalPopulation" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Hannover Data Flow\Add CosmosDbId field"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="Add CosmosDbId field"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Hannover Data Flow\Add CosmosDbId field.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Hannover Data Flow\Add CosmosDbId field.Inputs[Derived Column Input].Columns[TrajectoryId]"
                      cachedDataType="i4"
                      cachedName="TrajectoryId"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[TrajectoryId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Hannover Data Flow\Add CosmosDbId field.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Hannover Data Flow\Add CosmosDbId field.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add CosmosDbId field.Outputs[Derived Column Output].Columns[CosomosDbId]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="6"
                      lineageId="Package\Hannover Data Flow\Add CosmosDbId field.Outputs[Derived Column Output].Columns[CosomosDbId]"
                      name="CosomosDbId"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_WSTR,6)#{Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[TrajectoryId]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_WSTR,6)TrajectoryId</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Hannover Data Flow\Add CosmosDbId field.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Hannover Data Flow\Add CosmosDbId field.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add CosmosDbId field.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Hannover Data Flow\Add CosmosDbId field.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add CosmosDbId field.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Hannover Data Flow\Add CosmosDbId field.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Hannover Data Flow\Add fuel prices"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Add fuel prices"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Globalization;
using System.IO;
using System.Linq;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    List<FuelPrice> fuelPrices = new List<FuelPrice>();

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
        string filePath = "C:\\Users\\Rezerwowy\\Desktop\\Engineering Thesis\\Datasets\\Fuels_Germany.csv";
        using (StreamReader reader = new StreamReader(filePath))
        {
            string line;
            reader.ReadLine();
            while ((line = reader.ReadLine()) != null)
            {
                string[] fields = line.Split(';'); // Change the delimiter if needed

                FuelPrice fuelPrice = new FuelPrice()
                {
                    DieselPrice = decimal.Parse(fields[4], CultureInfo.InvariantCulture),
                    GasolinePrice = decimal.Parse(fields[5], CultureInfo.InvariantCulture),
                    DateTime = DateTime.ParseExact(fields[0], "dd.MM.yyyy", CultureInfo.InvariantCulture),
                };

                fuelPrices.Add(fuelPrice);
            }
        }
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

       FuelPrice price = fuelPrices.FirstOrDefault(fp => fp.DateTime.Year == Row.StartDate.Year
                        && fp.DateTime.Month == Row.StartDate.Month);

        Row.DieselPrice = price.DieselPrice;
        Row.GasolinePrice = price.GasolinePrice;
    }
    private class FuelPrice
    {
        public decimal DieselPrice { get; set; }
        public decimal GasolinePrice { get; set; }
        public DateTime DateTime { get; set; }

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public DateTime StartDate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[0]);
        }
    }
    public bool StartDate_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Decimal GasolinePrice
    {
        set
        {
            this[1] = value;
        }
    }
    public bool GasolinePrice_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal DieselPrice
    {
        set
        {
            this[2] = value;
        }
    }
    public bool DieselPrice_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d6a707c1f0974d309c8042daf34c03b6.Properties.Settings.get_Default():SC_d6a707c1f0974d309c8042daf34c03b6.Properties.Sett" +
    "ings")]

namespace SC_d6a707c1f0974d309c8042daf34c03b6.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_d6a707c1f0974d309c8042daf34c03b6.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{c7a0af88-de7c-49a9-ac4d-f2250c33f229}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_d6a707c1f0974d309c8042daf34c03b6</RootNamespace>
    <AssemblyName>SC_d6a707c1f0974d309c8042daf34c03b6</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_d6a707c1f0974d309c8042daf34c03b6" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_d6a707c1f0974d309c8042daf34c03b6</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_d6a707c1f0974d309c8042daf34c03b6</msb:DisplayName>
    <msb:ProjectId>{07A83B22-D249-412C-99F6-031557085E36}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_d6a707c1f0974d309c8042daf34c03b6.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_d6a707c1f0974d309c8042daf34c03b6")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_d6a707c1f0974d309c8042daf34c03b6")]
[assembly: AssemblyCopyright("Copyright @ HP 2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d6a707c1f0974d309c8042daf34c03b6.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d6a707c1f0974d309c8042daf34c03b6.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_d6a707c1f0974d309c8042daf34c03b6.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_d6a707c1f0974d309c8042daf34c03b6.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_d6a707c1f0974d309c8042daf34c03b6.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_d6a707c1f0974d309c8042daf34c03b6.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAGzyR2UAAAAAAAAAAOAAIiALATAAABoAAAAIAAAAAAAABjkA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALQ4AABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAADBkAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADo
OAAAAAAAAEgAAAACAAUAWCMAAKQUAAABAAAAAAAAAPw3AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBQCTAAAAAQAAEQIoEAAACnIBAABwcxEAAAoKBm8SAAAK
JitiBxeNHwAAASUWHzudbxMAAAoMcyEAAAYlCBqaKBQAAAooFQAACm8cAAAGJQgbmigUAAAKKBUA
AApvHgAABiUIFppylAAAcCgUAAAKKBYAAApvIAAABg0CewEAAAQJbxcAAAoGbxIAAAolCy2U3goG
LAYGbxgAAArcKgABEAAAAgARAHeIAAoAAAAAHgIoGQAACioTMAMASAAAAAIAABFzIgAABgoGA30M
AAAEAnsBAAAEBv4GIwAABnMaAAAKKAEAACsLBnsMAAAEB28bAAAGbwoAAAYGewwAAAQHbx0AAAZv
CAAABipKAnMcAAAKfQEAAAQCKA4AAAYqKgIDBAUoHQAACipSAnseAAAKAnsfAAAKFpRvIAAACioi
AhYoIQAACio6AhcDjBIAAAEoIgAACipaAywIAhcoIwAACipyqgAAcHMkAAAKejoCGAOMEgAAASgi
AAAKKloDLAgCGCgjAAAKKnKqAABwcyQAAAp6HgIoJQAACioeAigmAAAKKn4CKCcAAAoCAnMSAAAG
fQIAAAQCAnMTAAAGfQMAAAQqkgRyRwEAcBpvKAAACiwVAgUCAygpAAAKDgRzBQAABm8QAAAGKkor
BwIDbxEAAAYDbwwAAAYt8SoGKjoCKCoAAAoCA30EAAAEKjoCKCoAAAoCA30FAAAEKh4CKCoAAAoq
rn4GAAAELR5yVwEAcNAHAAACKCsAAApvLAAACnMtAAAKgAYAAAR+BgAABCoafgcAAAQqHgKABwAA
BCoafggAAAQqHgIoLgAACioucxkAAAaACAAABCoeAnsJAAAEKiICA30JAAAEKh4CewoAAAQqIgID
fQoAAAQqHgJ7CwAABCoiAgN9CwAABCoAAAATMAIASQAAAAMAABEDbx8AAAYKEgAoLwAACgJ7DAAA
BG8GAAAGChIAKC8AAAozJANvHwAABgoSACgwAAAKAnsMAAAEbwYAAAYKEgAoMAAACv4BKhYqAAAA
QlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAtAcAACN+AAAgCAAAWAgAACNTdHJp
bmdzAAAAAHgQAADMAQAAI1VTAEQSAAAQAAAAI0dVSUQAAABUEgAAUAIAACNCbG9iAAAAAAAAAAIA
AAFXFaIJCQsAAAD6ATMAFgAAAQAAACoAAAAKAAAADAAAACMAAAAVAAAAMAAAABoAAAADAAAABAAA
AAwAAAAQAAAAAgAAAAEAAAAFAAAAAQAAAAIAAAABAAAAAACaBAEAAAAAAAYAggNuBgYAFgRuBgYA
zgJQBg8A4gYAAAYA+wJgBQYAZQNgBQYARgNgBQYA/QNgBQYAogNgBQYAuwNgBQYAEgNgBQYALQNR
BAoA1gPeAQYAQQCXAAYA3gWEAAYAdgcYBQYAlgJuBgYAfAQYBQYAzAEYBQoAIgbeAQ4AEwbeAQoA
qQXeAQoAyAfeAQYAsQJQBgYAMwaOBgYAnQVLBRIAgQKEBBIA4gKEBBIATQI2BQYA6wWEAAYA2QUY
BQYAawQYBQYA9gUYBQYAdQEYBQYASAAYBRYAagHEBQYAMwCXAAYAcgUYBQYAjAUYBQYA/wEYBQYA
gQEYBQYATQhgBQAAAABzAAAAAAABAAEAAQAQACsFAAAQAAEAAQABABAABgYAAFEAAgAFAAEAEACq
BwAAXQACAA4AAQAQAF8HAABBAAQAEgABABAAIAcAAEEABQATAAAAEACVBvEGQQAGABQAAAEQAE8H
8QZ1AAgAGAADABAAUAEAAEEACQAbAAMBEAABAAAAQQAMACIAAQBjBuwABgBfB/QABgAgB/gAAQC4
B/wAAQC4B/wAEQAfBQABEQAoAgQBEQBaAQgBAQDVAAwBAQC2AAwBAQDyABABBgBFCBQBUCAAAAAA
xgA0BAYAAQAAIQAAAADGAD8EBgABAAghAAAAAMYAKggYAQEAXCEAAAAAhhhDBgYAAgBvIQAAAACG
GEMGhQACAHohAAAAAIYIcwIeAQUAjyEAAAAAhgjyBKgABQCYIQAAAACGCB4BIwEFAKchAAAAAIYI
wgQpAQYAviEAAAAAhghAASMBBwDNIQAAAACGCNsEKQEIAOQhAAAAAIYAQQioAAkA7CEAAAAAhgB9
B6gACQD0IQAAAACGGEMGBgAJABQiAAAAAMYAHQguAQkAOSIAAAAAxgEWCBgBDQBMIgAAAADGASoI
GAEOAE4iAAAAAIYYQwY4AQ8AXSIAAAAAhhhDBjgBEABsIgAAAACDGEMGBgARAHQiAAAAAJMILwY+
AREAoCIAAAAAkwgQAjAAEQCnIgAAAACTCBwCQwERAK8iAAAAAJYIjwdJARIAtiIAAAAAhhhDBgYA
EgC+IgAAAACRGEkGTgESAMoiAAAAAIYIMAFSARIA0iIAAAAAhghAASMBEgDbIgAAAACGCAwBUgET
AOMiAAAAAIYIHgEjARMA7CIAAAAAhgivAR4BFAD0IgAAAACGCLwBVwEUAGwiAAAAAIYYQwYGABUA
bCIAAAAAhhhDBgYAFQAAIwAAAACDABYAXQEVAAAAAQBFCAAAAQAoBgAAAgAqBwAAAwC3BQAAAQBL
BAAAAQBLBAAAAQBLBAAAAQBLBAAAAQB8AAAAAgClAQAAAwAoBgAABAC3BQAAAQAoBgAAAQBFCAAA
AQDOBwAAAQDOBwAAAQBLBAAAAQBLBAAAAQBLBAAAAQBLBAAAAQDBBQkAQwYBABEAQwYGABkAQwYK
ACkAQwYQADEAQwYQADkAQwYQAEEAQwYQAEkAQwYQAFEAQwYQAFkAQwYQAGEAQwYQAGkAQwYGAIkA
QwYGAMEAQwYGAOEAQwYVALkANAQGAHkAQwYQAPEA1QElAAEBiQcpANEAOAIwAJEAbQI1AJkAawc+
AAwAsgBPABEBZQIGALkAPwQGABQAQwZlACEBmwdrAAwAQwYGAKEAQwaFAKEAKAaPAKEAKgeTAKkA
yQGXAKEAAAWdAKEADwWiAKEABwUBADEBQwYQAKEAQQioAKEAfQeoALkAQwYGAAEBWAesALkAPge0
AIEAQwYGAEEBkwG6AEEBSQjDAMkAQwbJAOkAQwYGAJkA0AXWAJkAcgTWAC4ACwCAAS4AEwCJAS4A
GwCoAS4AIwCxAS4AKwDaAS4AMwDaAS4AOwDgAS4AQwCxAS4ASwDoAS4AUwDaAS4AWwABAkMAYwBL
AuMAcwBLAukAewCoAQEBawBLAgkBewCoASEBawBLAkEBawBLAkMBawBLAmEBawBLAmADawBLAoAD
awBLAqADawBLAsADawBLAuADawBLAgAEawBLAhsAVQDRAAMAAQAHAAcACAAJAAkACgAAAHcCYwEA
APYEaAEAACIBbAEAAMYEaAEAAEQBbAEAAN8EaAEAADMGcQEAAEUCdgEAAKIHewEAAEQBbAEAACIB
bAEAAMwBYwECAAYAAwACAAcABQABAAgABwABAAkACQABAAoACwABAAsADQACABUADwACABYAEQAB
ABcAEQACABgAEwACABsAFQABABwAFQACAB0AFwABAB4AFwACAB8AGQABACAAGQBIAFwABIAAAAEA
AAAAAAAAAAAAAAAATwAAAAQAAAAAAAAAAAAAANoAjgAAAAAAEAAAAAAAAAAAAAAA4wDYBwAAAAAQ
AAAAAAAAAAAAAADjAPUHAAAAAAQAAAAAAAAAAAAAANoAGAUAAAAABAAAAAAAAAAAAAAA2gAEAgAA
AAAAAAAAAQAAAJ8GAAAJAAIACgACADcAgAAAAAA8PmNfX0Rpc3BsYXlDbGFzczNfMAA8SW5wdXQw
X1Byb2Nlc3NJbnB1dFJvdz5iX18wAElFbnVtZXJhYmxlYDEATGlzdGAxAEZ1bmNgMgBTQ19kNmE3
MDdjMWYwOTc0ZDMwOWM4MDQyZGFmMzRjMDNiNgA8TW9kdWxlPgBJbnB1dElEAFN5c3RlbS5JTwBt
c2NvcmxpYgBTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYwBBZGQAPEdhc29saW5lUHJpY2U+a19f
QmFja2luZ0ZpZWxkADxEaWVzZWxQcmljZT5rX19CYWNraW5nRmllbGQAPERhdGVUaW1lPmtfX0Jh
Y2tpbmdGaWVsZABnZXRfR2Fzb2xpbmVQcmljZQBzZXRfR2Fzb2xpbmVQcmljZQBnZXRfRGllc2Vs
UHJpY2UAc2V0X0RpZXNlbFByaWNlAEZ1ZWxQcmljZQBkZWZhdWx0SW5zdGFuY2UARW51bWVyYWJs
ZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBJbnB1dE5h
bWUAZ2V0X0RhdGVUaW1lAHNldF9EYXRlVGltZQBHZXREYXRlVGltZQBSZWFkTGluZQBNaWNyb3Nv
ZnQuU3FsU2VydmVyLkR0cy5QaXBlbGluZQBUeXBlAFN5c3RlbS5Db3JlAGdldF9DdWx0dXJlAHNl
dF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBnZXRfSW52YXJpYW50Q3VsdHVyZQBBcHBsaWNhdGlv
blNldHRpbmdzQmFzZQBEaXNwb3NlAFBhcnNlAGdldF9TdGFydERhdGUARWRpdG9yQnJvd3NhYmxl
U3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJp
YnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJs
eVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29y
a0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlw
dGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJv
ZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9u
ZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNv
bXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBTeXN0ZW0u
UnVudGltZS5WZXJzaW9uaW5nAFN0cmluZwBnZXRfTW9udGgARGVjaW1hbABTeXN0ZW0uQ29tcG9u
ZW50TW9kZWwAU0NfZDZhNzA3YzFmMDk3NGQzMDljODA0MmRhZjM0YzAzYjYuZGxsAHNldF9HYXNv
bGluZVByaWNlX0lzTnVsbABzZXRfRGllc2VsUHJpY2VfSXNOdWxsAGdldF9TdGFydERhdGVfSXNO
dWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlwdE1haW4AU3lzdGVt
LkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ASW52
YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTdHJpbmdDb21wYXJpc29uAEN1bHR1cmVJbmZvAE91dHB1
dE5hbWVNYXAAT3V0cHV0TWFwAGZwAFN5c3RlbS5MaW5xAGdldF9ZZWFyAENoYXIAU3RyZWFtUmVh
ZGVyAFRleHRSZWFkZXIASUZvcm1hdFByb3ZpZGVyAElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZl
cgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRp
YWdub3N0aWNzAGZ1ZWxQcmljZXMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0
ZW0uUmVzb3VyY2VzAFNDX2Q2YTcwN2MxZjA5NzRkMzA5YzgwNDJkYWYzNGMwM2I2LlByb3BlcnRp
ZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ19kNmE3MDdjMWYwOTc0ZDMw
OWM4MDQyZGFmMzRjMDNiNi5Qcm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVz
AEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5lY3Rpb25zAFBhcnNlRXhhY3QA
T2JqZWN0AEVuZE9mUm93c2V0AFNwbGl0AGdldF9EZWZhdWx0AEZpcnN0T3JEZWZhdWx0AFVzZXJD
b21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2Vy
dmVyLlR4U2NyaXB0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9j
ZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQAAAACA
kUMAOgBcAFUAcwBlAHIAcwBcAFIAZQB6AGUAcgB3AG8AdwB5AFwARABlAHMAawB0AG8AcABcAEUA
bgBnAGkAbgBlAGUAcgBpAG4AZwAgAFQAaABlAHMAaQBzAFwARABhAHQAYQBzAGUAdABzAFwARgB1
AGUAbABzAF8ARwBlAHIAbQBhAG4AeQAuAGMAcwB2AAAVZABkAC4ATQBNAC4AeQB5AHkAeQAAgJtJ
AHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQA
IAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAg
AHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAwAABx
UwBDAF8AZAA2AGEANwAwADcAYwAxAGYAMAA5ADcANABkADMAMAA5AGMAOAAwADQAMgBkAGEAZgAz
ADQAYwAwADMAYgA2AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAA
AACEU5CTznleTaxJtq0LigLfAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFtCQcEEj0OHQ4SJAMg
AA4GIAEdDh0DBAAAEmkIAAIRSQ4SgIUJAAMRTQ4OEoCFBhUSOQESJAUgAQETAAYHAhIoEiQIFRKA
jQISJAIFIAIBHBgUEAECHgAVEoCVAR4AFRKAjQIeAAIECgESJAkgAwESVR0IElkDBhJVAwYdCAUg
ARFNCAQgAQIIBSACAQgcAyAAAgcgAgIOEYCdBSABHQgICAABEoChEYClBSAAEoCpByACAQ4SgKkE
BwERTQMgAAgIt3pcVhk04IkIiYRdzYCAzJEHBhUSOQESJAMGEhQDBhIYAwYSXQMGEmUDBhJpAwYS
IAMGEUkDBhFNAwYSDAUgAQESDAQgABFNBSABARFJBCABAQIJIAQBCA4SVRJZBSABARJdBAAAEmUF
AAEBEmkEAAASIAMAAAEEIAARSQUgAQERTQUgAQISJAQoABFNAygAAgQoABFJBAgAEmUECAASaQQI
ABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAAACgBACNT
Q19kNmE3MDdjMWYwOTc0ZDMwOWM4MDQyZGFmMzRjMDNiNgAABQEAAAAABwEAAkhQAAAYAQATQ29w
eXJpZ2h0IEAgSFAgMjAyMwAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBUDhRGcmFt
ZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAAALQAAADOyu++AQAAAJEAAABs
U3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAu
MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3Rl
bS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAADcOAAA
AAAAAAAAAAD2OAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA6DgAAAAAAAAAAAAAAABfQ29yRGxs
TWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAD0AwAAAAAAAAAAAAD0AzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEVAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAMAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACYAAwABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAASABQAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAA
AAAAUwBDAF8AZAA2AGEANwAwADcAYwAxAGYAMAA5ADcANABkADMAMAA5AGMAOAAwADQAMgBkAGEA
ZgAzADQAYwAwADMAYgA2AAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAu
ADAALgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwBkADYAYQA3ADAA
NwBjADEAZgAwADkANwA0AGQAMwAwADkAYwA4ADAANAAyAGQAYQBmADMANABjADAAMwBiADYALgBk
AGwAbAAAAEwAFAABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcA
aAB0ACAAQAAgAEgAUAAgADIAMAAyADMAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQBy
AGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMA
XwBkADYAYQA3ADAANwBjADEAZgAwADkANwA0AGQAMwAwADkAYwA4ADAANAAyAGQAYQBmADMANABj
ADAAMwBiADYALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8A
ZAA2AGEANwAwADcAYwAxAGYAMAA5ADcANABkADMAMAA5AGMAOAAwADQAMgBkAGEAZgAzADQAYwAw
ADMAYgA2AAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4A
MAAAADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAw
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAACDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_d6a707c1f0974d309c8042daf34c03b6</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">28</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Hannover Data Flow\Add fuel prices.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Hannover Data Flow\Add fuel prices.Inputs[Input 0].Columns[StartDate]"
                      cachedDataType="date"
                      cachedName="StartDate"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[StartDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Hannover Data Flow\Add fuel prices.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Hannover Data Flow\Add fuel prices.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add fuel prices.Outputs[Output 0].Columns[GasolinePrice]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Add fuel prices.Outputs[Output 0].Columns[GasolinePrice]"
                      name="GasolinePrice" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add fuel prices.Outputs[Output 0].Columns[DieselPrice]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Add fuel prices.Outputs[Output 0].Columns[DieselPrice]"
                      name="DieselPrice" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Hannover Data Flow\Add precipitation"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Add precipitation"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_5fcf958d20194e138f02bacbaf520e16.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{bac84da4-8105-4b1e-8dce-d1776a87b274}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_5fcf958d20194e138f02bacbaf520e16</RootNamespace>
    <AssemblyName>SC_5fcf958d20194e138f02bacbaf520e16</AssemblyName>
    <TargetFrameworkVersion>v4.7.2</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_5fcf958d20194e138f02bacbaf520e16" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Globalization;
using System.IO;
using System.Linq;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    List<Measurement> measurements = new List<Measurement>();

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
        string filePath = "C:\\Users\\Rezerwowy\\Desktop\\Engineering Thesis\\Datasets\\10minutenwerte_nieder_02014_20100101_20191231_hist\\produkt_zehn_min_rr_20100101_20191231_02014.txt";
        //string[] lines = File.ReadAllLines(filePath);
        using (StreamReader reader = new StreamReader(filePath))
        {
            string line;
            reader.ReadLine();
            while ((line = reader.ReadLine()) != null)
            {
                string[] fields = line.Split(';'); // Change the delimiter if needed

                DateTime measurementDate = DateTime.ParseExact(fields[1], "yyyyMMddHHmm", CultureInfo.InvariantCulture);
                if (measurementDate <= new DateTime(2017, 1, 1) || measurementDate >= new DateTime(2019, 12, 31))
                    continue;

                Measurement measurement = new Measurement()
                {
                    Precipitation = decimal.Parse(fields[4], CultureInfo.InvariantCulture),
                    Duration = decimal.Parse(fields[5], CultureInfo.InvariantCulture),
                    MeasurementDate = measurementDate,
                };

                measurements.Add(measurement);
            }
        }
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        List<Measurement> measurementsRange = measurements.Where(m =>
        (m.MeasurementDate + new TimeSpan(0, 10, 0)) >= Row.StartDate && m.MeasurementDate <= Row.EndDate).OrderBy(m => m.MeasurementDate).ToList();

        if (measurementsRange.Count == 1)
        {
            if (measurementsRange.First().Precipitation != -999.0m)
                Row.Precipitation = Row.Duration / 10 * measurementsRange.First().Precipitation;

            if (measurementsRange.First().Duration != -999.0m)
                Row.PrecipitationDuration = Row.Duration / 10 * measurementsRange.First().Duration;
        }
        else
        {
            decimal precipitation = 0;
            decimal duration = 0;

            for (int i = 0; i < measurementsRange.Count; i++)
            {
                TimeSpan timeSpan;
                if (i == 0)
                    timeSpan = new TimeSpan(0, 10, 0) - (Row.StartDate - measurementsRange[i].MeasurementDate);
                else if (i == measurementsRange.Count - 1)
                    timeSpan = Row.EndDate - measurementsRange[i].MeasurementDate;
                else
                    timeSpan = new TimeSpan(0, 10, 0);

                precipitation += (decimal)timeSpan.TotalMinutes / 10 * measurementsRange[i].Precipitation;
                duration += (decimal)timeSpan.TotalMinutes / 10 * measurementsRange[i].Duration;
            }

            if (measurementsRange.All(m => m.Precipitation != -999.0m))
                Row.Precipitation = precipitation;

            if (measurementsRange.All(m => m.Duration != -999.0m))
                Row.PrecipitationDuration = duration;
        }
    }
    private class Measurement
    {
        public decimal Precipitation { get; set; }
        public decimal Duration { get; set; }
        public DateTime MeasurementDate { get; set; }

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Decimal Duration
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[0]);
        }
    }
    public bool Duration_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public DateTime EndDate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[1]);
        }
    }
    public bool EndDate_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public DateTime StartDate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[2]);
        }
    }
    public bool StartDate_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Decimal PrecipitationDuration
    {
        set
        {
            this[3] = value;
        }
    }
    public bool PrecipitationDuration_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Precipitation
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Precipitation_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_5fcf958d20194e138f02bacbaf520e16.Properties.Settings.get_Default():SC_5fcf958d20194e138f02bacbaf520e16.Properties.Sett" +
    "ings")]

namespace SC_5fcf958d20194e138f02bacbaf520e16.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:Language>msBuild</msb:Language>
    <msb:CodeName>SC_5fcf958d20194e138f02bacbaf520e16</msb:CodeName>
    <msb:DisplayName>SC_5fcf958d20194e138f02bacbaf520e16</msb:DisplayName>
    <msb:ProjectId>{03C10DAF-E6A6-4013-BFB6-CDD27A86606E}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_5fcf958d20194e138f02bacbaf520e16.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ComponentWrapper.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_5fcf958d20194e138f02bacbaf520e16")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_5fcf958d20194e138f02bacbaf520e16")]
[assembly: AssemblyCopyright("Copyright @ HP 2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_5fcf958d20194e138f02bacbaf520e16.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_5fcf958d20194e138f02bacbaf520e16.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_5fcf958d20194e138f02bacbaf520e16.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_5fcf958d20194e138f02bacbaf520e16.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_5fcf958d20194e138f02bacbaf520e16.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_5fcf958d20194e138f02bacbaf520e16.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAM6vR2UAAAAAAAAAAOAAIiALATAAACIAAAAIAAAAAAAAbkAA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAABxAAABPAAAAAGAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAdCAAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAABQ
QAAAAAAAAEgAAAACAAUAECYAAFQZAAABAAAAAAAAAGQ/AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBQDHAAAAAQAAEQIoEAAACnIBAABwcxEAAAoKBm8SAAAK
JjiQAAAABxeNIQAAASUWHzudbxMAAAoMCBeacjYBAHAoFAAACigVAAAKDQkg4QcAABcXcxYAAAoo
FwAACi1XCSDjBwAAHwwfH3MWAAAKKBgAAAotQXMlAAAGJQgamigUAAAKKBkAAApvIAAABiUIG5oo
FAAACigZAAAKbyIAAAYlCW8kAAAGEwQCewEAAAQRBG8aAAAKBm8SAAAKJQs6Y////94KBiwGBm8b
AAAK3CoAARAAAAIAEQCrvAAKAAAAAB4CKBwAAAoqEzAGAGECAAACAAARcysAAAYKBgN9EAAABAJ7
AQAABAb+BiwAAAZzHQAACigBAAArfg0AAAQlLRcmfgwAAAT+BigAAAZzHwAACiWADQAABCgCAAAr
KAMAACsLB28iAAAKF0CoAAAABygEAAArbx8AAAYgBicAABYWFxdzJAAACiglAAAKLDIGexAAAAQG
exAAAARvBgAABh8KcyYAAAooJwAACgcoBAAAK28fAAAGKCgAAApvDgAABgcoBAAAK28hAAAGIAYn
AAAWFhcXcyQAAAooJQAACjmRAQAABnsQAAAEBnsQAAAEbwYAAAYfCnMmAAAKKCcAAAoHKAQAACtv
IQAABigoAAAKbwwAAAYqEgL+FREAAAESA/4VEQAAARYTBDjTAAAAEQQtLxYfChZzKQAACgZ7EAAA
BG8KAAAGBxEEbyoAAApvIwAABigrAAAKKCwAAAoTBSs4EQQHbyIAAAoXWTMhBnsQAAAEbwgAAAYH
EQRvKgAACm8jAAAGKCsAAAoTBSsLEgUWHwoWKCkAAAoIEgUoLQAACiguAAAKHwpzJgAACignAAAK
BxEEbyoAAApvHwAABigoAAAKKC8AAAoMCRIFKC0AAAooLgAACh8KcyYAAAooJwAACgcRBG8qAAAK
byEAAAYoKAAACigvAAAKDREEF1gTBBEEB28iAAAKPyD///8Hfg4AAAQlLRcmfgwAAAT+BikAAAZz
HQAACiWADgAABCgFAAArLAwGexAAAAQIbw4AAAYHfg8AAAQlLRcmfgwAAAT+BioAAAZzHQAACiWA
DwAABCgFAAArLAwGexAAAAQJbwwAAAYqSgJzMQAACn0BAAAEAigSAAAGKioCAwQFKDIAAAoqUgJ7
MwAACgJ7NAAAChaUbzUAAAoqIgIWKDYAAAoqUgJ7MwAACgJ7NAAACheUbzcAAAoqIgIXKDYAAAoq
UgJ7MwAACgJ7NAAAChiUbzcAAAoqIgIYKDYAAAoqOgIZA4wRAAABKDgAAAoqWgMsCAIZKDkAAAoq
clABAHBzOgAACno6AhoDjBEAAAEoOAAACipaAywIAhooOQAACipyUAEAcHM6AAAKeh4CKDsAAAoq
HgIoPAAACip+Aig9AAAKAgJzFgAABn0CAAAEAgJzFwAABn0DAAAEKpIEcu0BAHAabz4AAAosFQIF
AgMoPwAACg4EcwUAAAZvFAAABipKKwcCA28VAAAGA28QAAAGLfEqBio6AihAAAAKAgN9BAAABCo6
AihAAAAKAgN9BQAABCoeAihAAAAKKq5+BgAABC0ecv0BAHDQBwAAAihBAAAKb0IAAApzQwAACoAG
AAAEfgYAAAQqGn4HAAAEKh4CgAcAAAQqGn4IAAAEKh4CKEQAAAoqLnMdAAAGgAgAAAQqHgJ7CQAA
BCoiAgN9CQAABCoeAnsKAAAEKiICA30KAAAEKh4CewsAAAQqIgIDfQsAAAQqLnMnAAAGgAwAAAQq
HgNvIwAABipqA28fAAAGIAYnAAAWFhcXcyQAAAooJQAACipqA28hAAAGIAYnAAAWFhcXcyQAAAoo
JQAACir+A28jAAAGFh8KFnMpAAAKKEUAAAoCexAAAARvCgAABigYAAAKLBcDbyMAAAYCexAAAARv
CAAABigXAAAKKhYqQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAQAkAACN+AACs
CQAA9AkAACNTdHJpbmdzAAAAAKATAABwAgAAI1VTABAWAAAQAAAAI0dVSUQAAAAgFgAANAMAACNC
bG9iAAAAAAAAAAIAAAFXFaIJCQsAAAD6ATMAFgAAAQAAACwAAAALAAAAEAAAACwAAAAYAAAARQAA
ABsAAAACAAAABAAAABAAAAAUAAAAAwAAAAEAAAAFAAAAAQAAAAMAAAAFAAAAAAArBQEAAAAAAAYA
7QOqBwYAgQSqBwYAOQOXBw8AHggAAAYAZgOnBgYA0AOnBgYAsQOnBgYAaASnBgYADQSnBgYAJgSn
BgYAfQOnBgYAmAO8BAoAQQQPAgYAfgAsAQYAJQcVAQYA/QHjBQYA4ATjBQYA9gXjBQYA0AjjBQYA
AQOqBwYArQDjBQoAaQcPAg4AWgcPAgoA/AYPAgoAKwkPAgYAHAOXBwYAegfKBwYA8AaDBhIA7AIR
BRIATQMRBRIAhAJKBgYAMgcVAQYAIAfjBQYA1gTjBQYAPQfjBQYAwAHjBRYAtQEUBwYAWwAsARYA
aQAUBwYAxQbjBQYA3wbjBQYAMALjBQYAzAHjBQYAzwmnBgAAAAAEAQAAAAABAAEAAQAQAP8FAAAQ
AAEAAQABABAATQcAAFkAAgAFAAEAEAANCQAAZQACABIAAQAQAKwIAABNAAQAFgABABAAXAgAAE0A
BQAXAAAAEADRBy0ITQAGABgAAAEQAJwILQh9AAgAHAADABAAAQkAAE0ACQAfAAMhEAAoAQAATQAM
ACYAAwEQAAEAAABNABAAKwABALgIrAEGAKwItAEGAFwIuAEBABsJvAEBABsJvAERAOoFwAERAF8C
xAERAKUByAEBAIYBzAEBAGwBzAEBAEsB0AE2AAAB1AEWADMA2AEWAIUA4gEWALQA4gEGAL8J6wFQ
IAAAAADGAJ8EBgABADQhAAAAAMYAqgQGAAEAPCEAAAAAxgCkCe8BAQCpIwAAAACGGIoHBgACALwj
AAAAAIYYigc/AQIAxyMAAAAAhggWBvUBBQDcIwAAAACGCHsFaAEFAOUjAAAAAIYIqgL6AQUA+iMA
AAAAhghTBWgBBQADJAAAAACGCN4C+gEFABgkAAAAAIYIZgVoAQUAISQAAAAAhggwBv8BBQAwJAAA
AACGCI8FBQIGAEckAAAAAIYIcQb/AQcAViQAAAAAhgiwBQUCCABtJAAAAACGALsJaAEJAHUkAAAA
AIYA1whoAQkAfSQAAAAAhhiKBwYACQCdJAAAAADGAJcJCgIJAMIkAAAAAMYBkAnvAQ0A1SQAAAAA
xgGkCe8BDgDXJAAAAACGGIoHFAIPAOYkAAAAAIYYigcUAhAA9SQAAAAAgxiKBwYAEQD9JAAAAACT
CHYHGgIRACklAAAAAJMIRwIyABEAMCUAAAAAkwhTAh8CEQA4JQAAAACWCPUIJQISAD8lAAAAAIYY
igcGABIARyUAAAAAkRiQByoCEgBTJQAAAACGCF8G9QESAFslAAAAAIYIcQb/ARIAZCUAAAAAhggW
BvUBEwBsJQAAAACGCCMG/wETAHUlAAAAAIYItgL6ARQAfSUAAAAAhgjKAi4CFAD1JAAAAACGGIoH
BgAVAIYlAAAAAJEYkAcqAhUA9SQAAAAAhhiKBwYAFQCSJQAAAACDADwANAIVAJolAAAAAIMAjgA7
AhYAtSUAAAAAgwC9ADsCFwD1JAAAAACGGIoHBgAYANAlAAAAAIMAFgA7AhgAAAABAL8JAAABAG8H
AAACAHcIAAADAAoHAAABALYEAAABALYEAAABALYEAAABALYEAAABAA0BAAACAPABAAADAG8HAAAE
AAoHAAABAG8HAAABAL8JAAABADEJAAABADEJAAABALYEAAABALYEAAABALYEAAABALYEAAABAOgF
AAABAOgFAAABAOgFAAABAOgFCQCKBwEAEQCKBwYAGQCKBwoAKQCKBxAAMQCKBxAAOQCKBxAAQQCK
BxAASQCKBxAAUQCKBxAAWQCKBxAAYQCKBxAAaQCKBwYAoQCKBwYA0QCKBwYA8QCKBxUAyQCfBAYA
eQCKBxAAAQEGAicAEQHvCCsA4QBvAjIAgQDFCDcAgQCKB0EAgQD+BEgAgQDoBEgAiQCkAlAADABH
AWAAIQGcAgYAyQCqBAYAFACKB4AAKQE1AoYAHACKB4AAKQHDCa0AKQFiCc4ADAA7Cd8AKQGKCeMA
iQCKB/AAiQDkCfkAiQCKBwEAiQAKBgEBiQDYCQEBkQCKB0EADADRBQoBgQCYBhABkQCYBhkBkQBm
CCIBiQDjCCYBiQC5BgEBKQEnBSwBDACKBwYAsQCKBz8BsQBvB0kBsQB3CE0BuQDdBFEBsQDCBVcB
uQD6AVwBsQDaBWIBsQDJBQEAQQGKBxAAsQC7CWgBsQDXCGgByQCKBwYAEQGlCGwByQCLCHQBmQCK
BwYAUQHeAXoBUQHLCYMB2QCKB4kB+QCKBwYAgQC5BpEBLgALAF4CLgATAGcCLgAbAIYCLgAjAI8C
LgArALgCLgAzALgCLgA7AL4CLgBDAI8CLgBLAMYCLgBTALgCLgBbAN8CQwBjAC0D4wBzAC0DAQFr
AC0DIQFrAC0DQQFrAC0DQwFrAC0DYQFrAC0DYwFrAC0DaQF7AIYCiQF7AIYC4ANrAC0DAARrAC0D
IARrAC0DQARrAC0DYARrAC0DgARrAC0DGwBmAAMAAQAHAAsACAANAAkADgAAAEEGQQIAAKAFRgIA
AK4CSgIAAFcFRgIAAOICSgIAAGoFRgIAADQGQQIAAJMFRgIAAHUGQQIAALQFRgIAAHoHTwIAAHwC
VAIAAPkIWQIAAHUGQQIAAEEGQQIAAM4CSgICAAYAAwACAAcABQACAAgABwACAAkACQACAAoACwAC
AAsADQABAAwADwABAA0AEQABAA4AEwABAA8AFQACABkAFwACABoAGQABABsAGQACABwAGwACAB8A
HQABACAAHQACACEAHwABACIAHwACACMAIQABACQAIQBZAHgApAAEgAAAAQAAAAAAAAAAAAAAAADc
AAAABAAAAAAAAAAAAAAAmgEfAQAAAAAQAAAAAAAAAAAAAACjAUUJAAAAABAAAAAAAAAAAAAAAKMB
aQkAAAAABAAAAAAAAAAAAAAAmgHjBQAAAAAEAAAAAAAAAAAAAACaATsCAAAAAAAAAAABAAAA2wcA
AAkAAgAKAAIACwACAD0AnwBBAMcAQwCfAEcAnwBhAJ8AAAAAAAA8PmNfX0Rpc3BsYXlDbGFzczNf
MAA8SW5wdXQwX1Byb2Nlc3NJbnB1dFJvdz5iX18wADw+OV9fM18xADxJbnB1dDBfUHJvY2Vzc0lu
cHV0Um93PmJfXzNfMQBJRW51bWVyYWJsZWAxAElPcmRlcmVkRW51bWVyYWJsZWAxAExpc3RgMQA8
PjlfXzNfMgA8SW5wdXQwX1Byb2Nlc3NJbnB1dFJvdz5iX18zXzIARnVuY2AyADw+OV9fM18zADxJ
bnB1dDBfUHJvY2Vzc0lucHV0Um93PmJfXzNfMwBTQ181ZmNmOTU4ZDIwMTk0ZTEzOGYwMmJhY2Jh
ZjUyMGUxNgA8PjkAPE1vZHVsZT4ASW5wdXRJRABTeXN0ZW0uSU8AbXNjb3JsaWIAPD5jAFN5c3Rl
bS5Db2xsZWN0aW9ucy5HZW5lcmljAEFkZAA8TWVhc3VyZW1lbnREYXRlPmtfX0JhY2tpbmdGaWVs
ZAA8RHVyYXRpb24+a19fQmFja2luZ0ZpZWxkADxQcmVjaXBpdGF0aW9uPmtfX0JhY2tpbmdGaWVs
ZABkZWZhdWx0SW5zdGFuY2UARW51bWVyYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRs
ZQBHZXRUeXBlRnJvbUhhbmRsZQBJbnB1dE5hbWUAR2V0RGF0ZVRpbWUAUmVhZExpbmUATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBXaGVyZQBTeXN0ZW0uQ29yZQBnZXRfQ3Vs
dHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAZ2V0X0ludmFyaWFudEN1bHR1cmUAQXBw
bGljYXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBQYXJzZQBnZXRfRW5kRGF0ZQBnZXRfTWVhc3Vy
ZW1lbnREYXRlAHNldF9NZWFzdXJlbWVudERhdGUAZ2V0X1N0YXJ0RGF0ZQBFZGl0b3JCcm93c2Fi
bGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0
cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2Vt
Ymx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3
b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2Ny
aXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQ
cm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21w
b25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1l
Q29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5nAEdldERlY2ltYWwAb3BfR3JlYXRlclRoYW5PckVx
dWFsAG9wX0xlc3NUaGFuT3JFcXVhbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAQWxsAFNDXzVmY2Y5
NThkMjAxOTRlMTM4ZjAyYmFjYmFmNTIwZTE2LmRsbABnZXRfRW5kRGF0ZV9Jc051bGwAZ2V0X1N0
YXJ0RGF0ZV9Jc051bGwAZ2V0X0R1cmF0aW9uX0lzTnVsbABzZXRfUHJlY2lwaXRhdGlvbkR1cmF0
aW9uX0lzTnVsbABzZXRfUHJlY2lwaXRhdGlvbl9Jc051bGwAU2V0TnVsbABnZXRfSXRlbQBzZXRf
SXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4AVGltZVNwYW4AU2NyaXB0TWFpbgBvcF9EaXZpc2lvbgBn
ZXRfRHVyYXRpb24Ac2V0X0R1cmF0aW9uAHNldF9QcmVjaXBpdGF0aW9uRHVyYXRpb24AU3lzdGVt
LkNvbmZpZ3VyYXRpb24AZ2V0X1ByZWNpcGl0YXRpb24Ac2V0X1ByZWNpcGl0YXRpb24AU3lzdGVt
Lkdsb2JhbGl6YXRpb24Ab3BfU3VidHJhY3Rpb24AU3lzdGVtLlJlZmxlY3Rpb24Ab3BfQWRkaXRp
b24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTdHJpbmdDb21wYXJpc29uAEN1bHR1cmVJbmZv
AE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAFN5c3RlbS5MaW5xAENoYXIAU3RyZWFtUmVhZGVyAFRl
eHRSZWFkZXIASUZvcm1hdFByb3ZpZGVyAElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3Jp
cHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0
aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ181
ZmNmOTU4ZDIwMTk0ZTEzOGYwMmJhY2JhZjUyMGUxNi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNv
dXJjZXMARGVidWdnaW5nTW9kZXMAU0NfNWZjZjk1OGQyMDE5NGUxMzhmMDJiYWNiYWY1MjBlMTYu
UHJvcGVydGllcwBWYXJpYWJsZXMAZ2V0X1RvdGFsTWludXRlcwBCdWZmZXJDb2x1bW5JbmRleGVz
AEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5lY3Rpb25zAG1lYXN1cmVtZW50
cwBQYXJzZUV4YWN0AE9iamVjdABFbmRPZlJvd3NldABvcF9FeHBsaWNpdABTcGxpdABnZXRfRGVm
YXVsdABNZWFzdXJlbWVudABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABTY3JpcHRDb21w
b25lbnQAZ2V0X0NvdW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQAVG9MaXN0AE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AEZpcnN0AElucHV0MF9Qcm9jZXNzSW5wdXQASW5w
dXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AE9yZGVyQnkAZ2V0X0Fzc2VtYmx5AG9wX011bHRp
cGx5AG9wX0luZXF1YWxpdHkAAAAAgTNDADoAXABVAHMAZQByAHMAXABSAGUAegBlAHIAdwBvAHcA
eQBcAEQAZQBzAGsAdABvAHAAXABFAG4AZwBpAG4AZQBlAHIAaQBuAGcAIABUAGgAZQBzAGkAcwBc
AEQAYQB0AGEAcwBlAHQAcwBcADEAMABtAGkAbgB1AHQAZQBuAHcAZQByAHQAZQBfAG4AaQBlAGQA
ZQByAF8AMAAyADAAMQA0AF8AMgAwADEAMAAwADEAMAAxAF8AMgAwADEAOQAxADIAMwAxAF8AaABp
AHMAdABcAHAAcgBvAGQAdQBrAHQAXwB6AGUAaABuAF8AbQBpAG4AXwByAHIAXwAyADAAMQAwADAA
MQAwADEAXwAyADAAMQA5ADEAMgAzADEAXwAwADIAMAAxADQALgB0AHgAdAAAGXkAeQB5AHkATQBN
AGQAZABIAEgAbQBtAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBv
AHQAIABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAA
dgBhAGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAA
D0kAbgBwAHUAdAAgADAAAHFTAEMAXwA1AGYAYwBmADkANQA4AGQAMgAwADEAOQA0AGUAMQAzADgA
ZgAwADIAYgBhAGMAYgBhAGYANQAyADAAZQAxADYALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBl
AHMAbwB1AHIAYwBlAHMAAADY68UEpmltT4EPcV/RBgVBAAQgAQEIAyAAAQUgAQEREQQgAQEOBSAB
ARF1CwcFEj0OHQ4RQRIkAyAADgYgAR0OHQMEAAAScQkAAxFBDg4SgI0GIAMBCAgIBwACAhFBEUEI
AAIRRQ4SgI0GFRI5ARIkBSABARMAEQcGEiwVEjkBEiQRRRFFCBFJBxUSVQISJAIFIAIBHBgYEAEC
FRKAmQEeABUSgJkBHgAVElUCHgACBAoBEiQIFRJVAhIkEUEZEAICFRKAnQEeABUSgJkBHgAVElUC
HgAeAQYKAhIkEUEQEAEBFRI5AR4AFRKAmQEeAAMgAAgMEAEBHgAVEoCZAR4ACCAFAQgICAIFBwAC
AhFFEUUIAAIRRRFFEUUFIAETAAgIAAIRSRFBEUEIAAIRSRFJEUkDIAANBQABEUUNEhABAgIVEoCZ
AR4AFRJVAh4AAgkgAwESXR0IEmEDBhJdAwYdCAUgARFFCAQgAQIIBSABEUEIBSACAQgcAyAAAgcg
AgIOEYClBSABHQgICAABEoCpEYCtBSAAEoCxByACAQ4SgLEIAAIRQRFBEUkIt3pcVhk04IkIiYRd
zYCAzJEHBhUSOQESJAMGEhQDBhIYAwYSZQMGEm0DBhJxAwYSIAMGEUUDBhFBAwYSKAkGFRJVAhIk
EUEIBhUSVQISJAIDBhIMBSABARIMBCAAEUUEIAARQQUgAQERRQQgAQECCSAEAQgOEl0SYQUgAQES
ZQQAABJtBQABARJxBAAAEiADAAABBSABARFBBiABEUESJAUgAQISJAQoABFFAygAAgQoABFBBAgA
Em0ECAAScQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIA
AAAAACgBACNTQ181ZmNmOTU4ZDIwMTk0ZTEzOGYwMmJhY2JhZjUyMGUxNgAABQEAAAAABwEAAkhQ
AAAYAQATQ29weXJpZ2h0IEAgSFAgMjAyMwAATQEAHC5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43
LjIBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lFC5ORVQgRnJhbWV3b3JrIDQuNy4yBAEAAAAAALQA
AADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIs
IFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1
NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAA
UEFEUEFEULQAAABEQAAAAAAAAAAAAABeQAAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUEAAAAAA
AAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
APQDAAAAAAAAAAAAAPQDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sARUAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAwAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAJgADAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAABIAFAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AEMAXwA1AGYAYwBmADkANQA4AGQAMgAwADEAOQA0AGUAMQAzADgAZgAwADIAYgBhAGMAYgBhAGYA
NQAyADAAZQAxADYAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAu
ADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADUAZgBjAGYAOQA1ADgA
ZAAyADAAMQA5ADQAZQAxADMAOABmADAAMgBiAGEAYwBiAGEAZgA1ADIAMABlADEANgAuAGQAbABs
AAAATAAUAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAASABQACAAMgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBz
AAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADUA
ZgBjAGYAOQA1ADgAZAAyADAAMQA5ADQAZQAxADMAOABmADAAMgBiAGEAYwBiAGEAZgA1ADIAMABl
ADEANgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA1AGYA
YwBmADkANQA4AGQAMgAwADEAOQA0AGUAMQAzADgAZgAwADIAYgBhAGMAYgBhAGYANQAyADAAZQAx
ADYAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
OAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAABwMAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_5fcf958d20194e138f02bacbaf520e16</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">07</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Hannover Data Flow\Add precipitation.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Hannover Data Flow\Add precipitation.Inputs[Input 0].Columns[Duration]"
                      cachedDataType="decimal"
                      cachedName="Duration"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[Duration]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\Add precipitation.Inputs[Input 0].Columns[EndDate]"
                      cachedDataType="date"
                      cachedName="EndDate"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[EndDate]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\Add precipitation.Inputs[Input 0].Columns[StartDate]"
                      cachedDataType="date"
                      cachedName="StartDate"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[StartDate]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Hannover Data Flow\Add precipitation.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Hannover Data Flow\Add precipitation.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add precipitation.Outputs[Output 0].Columns[PrecipitationDuration]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Add precipitation.Outputs[Output 0].Columns[PrecipitationDuration]"
                      name="PrecipitationDuration" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add precipitation.Outputs[Output 0].Columns[Precipitation]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Add precipitation.Outputs[Output 0].Columns[Precipitation]"
                      name="Precipitation" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Hannover Data Flow\Add region"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Add region"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="36">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Globalization;
using System.IO;
using System.Linq;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using NetTopologySuite.Geometries;
using NetTopologySuite.IO;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    
    List<Region> regions = new List<Region>();
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */

        string filePath = "C:\\Users\\Rezerwowy\\Desktop\\Engineering Thesis\\Datasets\\Regions-Hannover.csv";
        using (StreamReader reader = new StreamReader(filePath))
        {
            string line;
            reader.ReadLine();
            while ((line = reader.ReadLine()) != null)
            {
                string[] fields = line.Split(';'); // Change the delimiter if needed

                Region region = new Region()
                {
                    Name = fields[0],
                    ParentName = fields[1],
                    Area = decimal.Parse(fields[2], CultureInfo.InvariantCulture),
                    Population = int.Parse(fields[3], CultureInfo.InvariantCulture),
                    Density = decimal.Parse(fields[4], CultureInfo.InvariantCulture),
                    Polygon = CreatePolygon(ReverseCoordinates(fields[5])),
                };

                regions.Add(region);
            }
        }
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        var reader = new WKTReader();

        string pointWkt = $"POINT({Row.latitude} {Row.longitude})";
        pointWkt = pointWkt.Replace(",", ".");
        Point point = reader.Read(pointWkt) as Point;

        Region currentRegion = regions.FirstOrDefault(r => r.Polygon.Contains(point));

        if(currentRegion != null)
        {
            Row.RegionName = currentRegion.Name;
            Row.ParentRegionName = currentRegion.ParentName;
            Row.RegionArea = currentRegion.Area;
            Row.RegionPopulation = currentRegion.Population;
            Row.RegionDensity = currentRegion.Density;
        }
        else
        {
            Row.RegionName = "Outside of Hannover";
        }
    }

    private string ReverseCoordinates(string coordinatesString)
    {
        string[] points = coordinatesString.Split(' ');
        List<string> reversedPoints = new List<string>();

        foreach (string point in points)
        {
            string[] coordinates = point.Split(',');
            if (coordinates.Length == 2)
            {
                string reversedPoint = $"{coordinates[1]} {coordinates[0]}";
                reversedPoints.Add(reversedPoint);
            }
        }

        string reversedCoordinates = string.Join(", ", reversedPoints);

        return reversedCoordinates;
    }

    private Polygon CreatePolygon(string coordinates)
    {
        string polygonWkt = $"POLYGON(({coordinates}))";
        var reader = new WKTReader();
        return reader.Read(polygonWkt) as Polygon;
    }

    private class Region
    {
        public string Name { get; set; }
        public string ParentName { get; set; }
        public decimal Area { get; set; }
        public int Population { get; set; }
        public decimal Density { get; set; }
        public Polygon Polygon { get; set; }
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Decimal longitude
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[0]);
        }
    }
    public bool longitude_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Decimal latitude
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[1]);
        }
    }
    public bool latitude_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Decimal RegionArea
    {
        set
        {
            this[2] = value;
        }
    }
    public bool RegionArea_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String ParentRegionName
    {
        set
        {
            this[3] = value;
        }
    }
    public bool ParentRegionName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public String RegionName
    {
        set
        {
            this[4] = value;
        }
    }
    public bool RegionName_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 RegionPopulation
    {
        set
        {
            this[5] = value;
        }
    }
    public bool RegionPopulation_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal RegionDensity
    {
        set
        {
            this[6] = value;
        }
    }
    public bool RegionDensity_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(6);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2518480992a84ad0830b3674bc6f3f32.Properties.Settings.get_Default():SC_2518480992a84ad0830b3674bc6f3f32.Properties.Sett" +
    "ings")]

namespace SC_2518480992a84ad0830b3674bc6f3f32.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_2518480992a84ad0830b3674bc6f3f32.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0A59C22A-2969-414C-84D6-6BD29984CAC5}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_2518480992a84ad0830b3674bc6f3f32</RootNamespace>
    <AssemblyName>SC_2518480992a84ad0830b3674bc6f3f32</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51" />
    <Reference Include="NetTopologySuite, Version=2.0.0.0, Culture=neutral, PublicKeyToken=f580a05016ebada1, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstakUBqVNBO8USVPU7eNtXp7w\packages\NetTopologySuite.2.5.0\lib\netstandard2.0\NetTopologySuite.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Buffers, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstakUBqVNBO8USVPU7eNtXp7w\packages\System.Buffers.4.5.1\lib\net461\System.Buffers.dll</HintPath>
    </Reference>
    <Reference Include="System.Data" />
    <Reference Include="System.Memory, Version=4.0.1.1, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstakUBqVNBO8USVPU7eNtXp7w\packages\System.Memory.4.5.4\lib\net461\System.Memory.dll</HintPath>
    </Reference>
    <Reference Include="System.Numerics" />
    <Reference Include="System.Numerics.Vectors, Version=4.1.4.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstakUBqVNBO8USVPU7eNtXp7w\packages\System.Numerics.Vectors.4.5.0\lib\net46\System.Numerics.Vectors.dll</HintPath>
    </Reference>
    <Reference Include="System.Runtime.CompilerServices.Unsafe, Version=4.0.4.1, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstakUBqVNBO8USVPU7eNtXp7w\packages\System.Runtime.CompilerServices.Unsafe.4.5.3\lib\net461\System.Runtime.CompilerServices.Unsafe.dll</HintPath>
    </Reference>
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="app.config" />
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_2518480992a84ad0830b3674bc6f3f32</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_2518480992a84ad0830b3674bc6f3f32</msb:DisplayName>
    <msb:ProjectId>{AAB7F582-0E11-4695-A3A6-6D25D79276BA}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_2518480992a84ad0830b3674bc6f3f32.csproj" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="app.config" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_2518480992a84ad0830b3674bc6f3f32")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_2518480992a84ad0830b3674bc6f3f32")]
[assembly: AssemblyCopyright("Copyright @ HP 2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2518480992a84ad0830b3674bc6f3f32.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2518480992a84ad0830b3674bc6f3f32.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_2518480992a84ad0830b3674bc6f3f32.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_2518480992a84ad0830b3674bc6f3f32.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_2518480992a84ad0830b3674bc6f3f32.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[app.config]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Buffers" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.3.0" newVersion="4.0.3.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="System.Buffers" version="4.5.1" targetFramework="net47" />
</packages>]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_2518480992a84ad0830b3674bc6f3f32.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAOj8T2UAAAAAAAAAAOAAIiALATAAACAAAAAIAAAAAAAAnj8A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEw/AABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAApB8AAAAgAAAAIAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAiAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAKAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACA
PwAAAAAAAEgAAAACAAUAACUAAJQZAAABAAAAAAAAAJQ+AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgC7AAAAAQAAEQIoEAAACnIBAABwcxEAAAoKBm8SAAAK
JjiEAAAABxeNIQAAASUWHzudbxMAAAoMczEAAAYlCBaabyYAAAYlCBeabygAAAYlCBiaKBQAAAoo
FQAACm8qAAAGJQgZmigUAAAKKBYAAApvLAAABiUIGpooFAAACigVAAAKby4AAAYlAgIIG5ooBAAA
BigFAAAGbzAAAAYNAnsBAAAECW8XAAAKBm8SAAAKJQs6b////94KBiwGBm8YAAAK3CoAARAAAAIA
EQCfsAAKAAAAAB4CKBkAAAoqEzADALQAAAACAAARczIAAAYKcxoAAAoLcpoAAHADbwoAAAaMFAAA
AQNvCAAABowUAAABKBsAAAoMCHK4AABwcrwAAHBvHAAACgwGBwhvHQAACnUVAAABfQ8AAAQCewEA
AAQG/gYzAAAGcx4AAAooAQAAKw0JLD0DCW8lAAAGbxAAAAYDCW8nAAAGbw4AAAYDCW8pAAAGbwwA
AAYDCW8rAAAGbxIAAAYDCW8tAAAGbxQAAAYqA3LAAABwbxAAAAYqEzAFAGYAAAADAAARAxeNIQAA
ASUWHyCdbxMAAApzIAAACgoLFgwrOAcImheNIQAAASUWHyydbxMAAAoNCY5pGDMaCReacugAAHAJ
FpooIQAAChMEBhEEbyIAAAoIF1gMCAeOaTLCcuwAAHAGKCMAAAoqAAATMAMAIgAAAAQAABFy8gAA
cANyBgEAcCghAAAKCnMaAAAKBm8dAAAKdREAAAEqSgJzJAAACn0BAAAEAigYAAAGKioCAwQFKCUA
AAoqUgJ7JgAACgJ7JwAAChaUbygAAAoqIgIWKCkAAAoqUgJ7JgAACgJ7JwAACheUbygAAAoqIgIX
KCkAAAoqOgIYA4wUAAABKCoAAAoqWgMsCAIYKCsAAAoqcgwBAHBzLAAACnomAhkDKCoAAAoqWgMs
CAIZKCsAAAoqcgwBAHBzLAAACnomAhoDKCoAAAoqWgMsCAIaKCsAAAoqcgwBAHBzLAAACno6AhsD
jCQAAAEoKgAACipaAywIAhsoKwAACipyDAEAcHMsAAAKejoCHAOMFAAAASgqAAAKKloDLAgCHCgr
AAAKKnIMAQBwcywAAAp6HgIoLQAACioeAiguAAAKKn4CKC8AAAoCAnMcAAAGfQIAAAQCAnMdAAAG
fQMAAAQqkgRyqQEAcBpvMAAACiwVAgUCAygxAAAKDgRzBwAABm8aAAAGKkorBwIDbxsAAAYDbxYA
AAYt8SoGKjoCKDIAAAoCA30EAAAEKjoCKDIAAAoCA30FAAAEKh4CKDIAAAoqrn4GAAAELR5yuQEA
cNAHAAACKDMAAApvNAAACnM1AAAKgAYAAAR+BgAABCoafgcAAAQqHgKABwAABCoafggAAAQqHgIo
NgAACioucyMAAAaACAAABCoeAnsJAAAEKiICA30JAAAEKh4CewoAAAQqIgIDfQoAAAQqHgJ7CwAA
BCoiAgN9CwAABCoeAnsMAAAEKiICA30MAAAEKh4Cew0AAAQqIgIDfQ0AAAQqHgJ7DgAABCoiAgN9
DgAABCpKA28vAAAGAnsPAAAEbzcAAAoqAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUA
bAAAABAKAAAjfgAAfAoAACgKAAAjU3RyaW5ncwAAAACkFAAALAIAACNVUwDQFgAAEAAAACNHVUlE
AAAA4BYAALQCAAAjQmxvYgAAAAAAAAACAAABVxWiCQkLAAAA+gEzABYAAAEAAAAuAAAACgAAAA8A
AAAzAAAAIAAAADcAAAAjAAAABAAAAAQAAAAXAAAAHgAAAAMAAAABAAAABgAAAAEAAAACAAAAAQAA
AAAAJAUBAAAAAAAGAAgEsQcGAJwEsQcGAFQDngcPACUIAAAGAIEDsAYGAOsDsAYGAMwDsAYGAIME
sAYGACgEsAYGAEEEsAYGAJgDsAYGALMD1wQKAFwEYQIGAEEA0gAGACwHngAOACIHigAOAEQGNAgG
AAgJAwYGABwDsQcGAAYFAwYOAGoJNAgKAHAHYQISAGEHYQIKAPkGYQIKAFoJYQIGADcDngcGAIEH
0QcGAO0GmwYWAPYCDgUWAGgDDgUWANAChgYGADkHngAGAB0HAwYGAPwEAwYGAEQHAwYGAGwAAwYG
AMoBAwYOAPQJNAgGAHIAAwYaAL8BEQcGADMA0gAGAMIGAwYGANwGAwYGAIICAwYGANYBAwYGAOsJ
sAYAAAAAeQAAAAAAAQABAAEAEAAWBgAAEAABAAEAAQAQAFQHAABZAAIABwABABAAPAkAAGUAAgAY
AAEAEADuCAAASQAEABwAAQAQAH8IAABJAAUAHQAAABAA2AdQCEkABgAeAAABEADNCFAIfQAIACIA
AwAQAEwGAABJAAkAJQADARAAAQAAAEkADwAyAAEA5ggyAQYA7gg6AQYAfwg+AQEASglCAQEASglC
AREACgZGAREAqwJKAREAlAFOAQEADAFSAQEAIgFSAQEA9gBVAQEAVwFZAQEAcwFVAQEAPgFcAQYA
cAlgAVAgAAAAAMYAugQGAAEAKCEAAAAAxgDFBAYAAQAwIQAAAADGAMgJZAEBAPAhAAAAAIEAiQhq
AQIAZCIAAAAAgQA+Bm8BAwCSIgAAAACGGJEHBgAEAKUiAAAAAIYYkQfEAAQAsCIAAAAAhgikAXUB
BwDFIgAAAACGCGIF5wAHAM4iAAAAAIYIsgF1AQcA4yIAAAAAhgh3BecABwDsIgAAAACGCLoAegEH
APsiAAAAAIYITAWAAQgAEiMAAAAAhggbAhAACQAcIwAAAACGCKEFgAEKADMjAAAAAIYIDAIQAAsA
PSMAAAAAhgiLBYABDABUIwAAAACGCHEGAQANAGMjAAAAAIYIvQWAAQ4AeiMAAAAAhggVCnoBDwCJ
IwAAAACGCNkFgAEQAKAjAAAAAIYA3wnnABEAqCMAAAAAhgAPCecAEQCwIwAAAACGGJEHBgARANAj
AAAAAMYAuwmFAREA9SMAAAAAxgG0CWQBFQAIJAAAAADGAcgJZAEWAAokAAAAAIYYkQePARcAGSQA
AAAAhhiRB48BGAAoJAAAAACDGJEHBgAZADAkAAAAAJMIfQeVARkAXCQAAAAAkwiTAjAAGQBjJAAA
AACTCJ8CmgEZAGskAAAAAJYIIQmgARoAciQAAAAAhhiRBwYAGgB6JAAAAACRGJcHpQEaAIYkAAAA
AIYI+gElABoAjiQAAAAAhggDAhAAGgCXJAAAAACGCDACJQAbAJ8kAAAAAIYIPwIQABsAqCQAAAAA
hgioAHUBHACwJAAAAACGCLEAegEcALkkAAAAAIYIUwapAR0AwSQAAAAAhghiBgEAHQDKJAAAAACG
CP0JdQEeANIkAAAAAIYICQp6AR4A2yQAAAAAhggmBq0BHwDjJAAAAACGCDIGsgEfACgkAAAAAIYY
kQcGACAAKCQAAAAAhhiRBwYAIADsJAAAAACDABYAuAEgAAAAAQDjCQAAAQDxBAAAAQCcCAAAAQB2
BwAAAgCoCAAAAwAHBwAAAQDRBAAAAQDRBAAAAQDRBAAAAQDRBAAAAQDRBAAAAQDRBAAAAQDRBAAA
AQDRBAAAAQDRBAAAAQDRBAAAAQCCAAAAAgBOAgAAAwB2BwAABAAHBwAAAQB2BwAAAQDjCQAAAQBg
CQAAAQBgCQAAAQDRBAAAAQDRBAAAAQDRBAAAAQDRBAAAAQDRBAAAAQDRBAAAAQDRBAAAAQCcBwkA
kQcBABEAkQcGABkAkQcKACkAkQcQADEAkQcQADkAkQcQAEEAkQcQAEkAkQcQAFEAkQcQAFkAkQcQ
AGEAkQcQAGkAkQcGAJkAkQcGANEAkQcGAPEAkQcVAMkAugQGAHkAkQcQAAEBWAIlABEBGwkpAOEA
uwIwAKEA8AI1ACEB8AI+AAwA8gBNACkB6AIGAMkAxQQGAIEAkQcGABEBAQldABEBjAFkAIEA7QBq
ABQAkQd6AEEBLQmAABwAkQcGABEB+giuABwA8gBNABEBIQa1AAwAkQcGALEAkQfEALEAdgfOALEA
qAjSALkAAwXWALEA6wXcALEA+gXhALEA8gUBAFEBkQcQALEA3wnnALEADwnnAMkAkQcGABEB1gjr
AMkAvAjzAJEAkQcGAGEB6AH5AGEB5wkCAdkAkQcIAfkAkQcGADEB3QgQAS4ACwDjAS4AEwDsAS4A
GwALAi4AIwAUAi4AKwA9Ai4AMwA9Ai4AOwBDAi4AQwAUAi4ASwBLAi4AUwA9Ai4AWwBkAkMAYwCu
AuMAcwCuAgEBawCuAiEBawCuAkEBawCuAkMBawCuAmEBawCuAoEBawCuAqEBawCuAsEBawCuAukB
ewALAgkCewALAqAEawCuAsAEawCuAuAEawCuAgAFawCuAiAFawCuAkAFawCuAmAFawCuAoAFawCu
AqAFawCuAsAFawCuAuAFawCuAgAGawCuAhsAUwCaAMAAAwABAAcADwAIABEACQASAAAAqAG+AQAA
ZgXDAQAAtgG+AQAAewXDAQAAvgC+AQAAUAXDAQAAHwLHAQAApQXDAQAAJQLHAQAAqwXDAQAAdQbL
AQAAwQXDAQAAGQq+AQAA3QXDAQAAgQfPAQAAyALUAQAANAnZAQAAUwLHAQAAQwLHAQAAxAC+AQAA
ewbLAQAAHwq+AQAARAbeAQIACAADAAIACQAFAAIACgAHAAIACwAJAAEADAALAAEADQANAAEADgAP
AAEADwARAAEAEAATAAEAEQAVAAEAEgAXAAEAEwAZAAEAFAAbAAEAFQAdAAIAHwAfAAIAIAAhAAEA
IQAhAAIAIgAjAAIAJQAlAAEAJgAlAAIAJwAnAAEAKAAnAAIAKQApAAEAKgApAAIAKwArAAEALAAr
AAIALQAtAAEALgAtAAIALwAvAAEAMAAvAEYAcQCoAASAAAABAAAAAAAAAAAAAAAAAEgAAAAEAAAA
AAAAAAAAAAAXAckAAAAAABAAAAAAAAAAAAAAACABdgkAAAAAAgAAAAAAAAAAAAAAKQELAwAAAAAQ
AAAAAAAAAAAAAAAgAZMJAAAAAAQAAAAAAAAAAAAAABcBAwYAAAAABAAAAAAAAAAAAAAAFwGHAgAA
AAAAAAAAAQAAAOIHAAAJAAIACgACAD8AlQAAAAAAADw+Y19fRGlzcGxheUNsYXNzM18wADxJbnB1
dDBfUHJvY2Vzc0lucHV0Um93PmJfXzAASUVudW1lcmFibGVgMQBMaXN0YDEAU0NfMjUxODQ4MDk5
MmE4NGFkMDgzMGIzNjc0YmM2ZjNmMzIASW50MzIARnVuY2AyADxNb2R1bGU+AElucHV0SUQATmV0
VG9wb2xvZ3lTdWl0ZS5JTwBTeXN0ZW0uSU8AZ2V0X0FyZWEAc2V0X0FyZWEAc2V0X1JlZ2lvbkFy
ZWEAbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAUmVhZABBZGQAPEFyZWE+a19f
QmFja2luZ0ZpZWxkADxOYW1lPmtfX0JhY2tpbmdGaWVsZAA8UGFyZW50TmFtZT5rX19CYWNraW5n
RmllbGQAPFBvbHlnb24+a19fQmFja2luZ0ZpZWxkADxQb3B1bGF0aW9uPmtfX0JhY2tpbmdGaWVs
ZAA8RGVuc2l0eT5rX19CYWNraW5nRmllbGQAUmVwbGFjZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X2xv
bmdpdHVkZQBnZXRfbGF0aXR1ZGUARW51bWVyYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhh
bmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBnZXRfTmFtZQBzZXRfTmFtZQBzZXRfUmVnaW9uTmFtZQBz
ZXRfUGFyZW50UmVnaW9uTmFtZQBnZXRfUGFyZW50TmFtZQBzZXRfUGFyZW50TmFtZQBJbnB1dE5h
bWUAUmVhZExpbmUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBTeXN0ZW0u
Q29yZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAZ2V0X0ludmFyaWFu
dEN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBQYXJzZQBFZGl0b3JCcm93
c2FibGVTdGF0ZQBOZXRUb3BvbG9neVN1aXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERl
YnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93
c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0
dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0
cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9u
c0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRy
aWJ1dGUAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21w
YW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAFByZUV4ZWN1dGUAUG9z
dEV4ZWN1dGUAdmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBjb29yZGluYXRlc1N0cmlu
ZwBHZXREZWNpbWFsAFN5c3RlbS5Db21wb25lbnRNb2RlbABTQ18yNTE4NDgwOTkyYTg0YWQwODMw
YjM2NzRiYzZmM2YzMi5kbGwAc2V0X1JlZ2lvbkFyZWFfSXNOdWxsAGdldF9sb25naXR1ZGVfSXNO
dWxsAGdldF9sYXRpdHVkZV9Jc051bGwAc2V0X1JlZ2lvbk5hbWVfSXNOdWxsAHNldF9QYXJlbnRS
ZWdpb25OYW1lX0lzTnVsbABzZXRfUmVnaW9uUG9wdWxhdGlvbl9Jc051bGwAc2V0X1JlZ2lvbkRl
bnNpdHlfSXNOdWxsAFNldE51bGwAc2V0X0l0ZW0AU3lzdGVtAHJlc291cmNlTWFuAFNjcmlwdE1h
aW4ASm9pbgBnZXRfUG9seWdvbgBzZXRfUG9seWdvbgBDcmVhdGVQb2x5Z29uAFJlZ2lvbgBnZXRf
UG9wdWxhdGlvbgBzZXRfUG9wdWxhdGlvbgBzZXRfUmVnaW9uUG9wdWxhdGlvbgBTeXN0ZW0uQ29u
ZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlk
T3BlcmF0aW9uRXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFt
ZU1hcABPdXRwdXRNYXAAU3lzdGVtLkxpbnEAQ2hhcgBXS1RSZWFkZXIAU3RyZWFtUmVhZGVyAFRl
eHRSZWFkZXIASUZvcm1hdFByb3ZpZGVyAElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3Jp
cHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0
aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ18y
NTE4NDgwOTkyYTg0YWQwODMwYjM2NzRiYzZmM2YzMi5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNv
dXJjZXMARGVidWdnaW5nTW9kZXMATmV0VG9wb2xvZ3lTdWl0ZS5HZW9tZXRyaWVzAFNDXzI1MTg0
ODA5OTJhODRhZDA4MzBiMzY3NGJjNmYzZjMyLlByb3BlcnRpZXMAVmFyaWFibGVzAFJldmVyc2VD
b29yZGluYXRlcwBjb29yZGluYXRlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4
ZXMAU2V0dGluZ3MARXF1YWxzAENvbnRhaW5zAHJlZ2lvbnMAQ29ubmVjdGlvbnMAQ29uY2F0AEZv
cm1hdABPYmplY3QARW5kT2ZSb3dzZXQAU3BsaXQAZ2V0X0RlZmF1bHQARmlyc3RPckRlZmF1bHQA
VXNlckNvbXBvbmVudABQYXJlbnRDb21wb25lbnQAU2NyaXB0Q29tcG9uZW50AFBvaW50AHBvaW50
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBlbGlu
ZUhvc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93AE5leHRSb3cA
Z2V0X0Fzc2VtYmx5AEdlb21ldHJ5AGdldF9EZW5zaXR5AHNldF9EZW5zaXR5AHNldF9SZWdpb25E
ZW5zaXR5AAAAgJdDADoAXABVAHMAZQByAHMAXABSAGUAegBlAHIAdwBvAHcAeQBcAEQAZQBzAGsA
dABvAHAAXABFAG4AZwBpAG4AZQBlAHIAaQBuAGcAIABUAGgAZQBzAGkAcwBcAEQAYQB0AGEAcwBl
AHQAcwBcAFIAZQBnAGkAbwBuAHMALQBIAGEAbgBuAG8AdgBlAHIALgBjAHMAdgABHVAATwBJAE4A
VAAoAHsAMAB9ACAAewAxAH0AKQAAAywAAAMuAAAnTwB1AHQAcwBpAGQAZQAgAG8AZgAgAEgAYQBu
AG4AbwB2AGUAcgAAAyAAAAUsACAAABNQAE8ATABZAEcATwBOACgAKAAABSkAKQAAgJtJAHMATgB1
AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8A
IABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABl
ACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAwAABxUwBDAF8A
MgA1ADEAOAA0ADgAMAA5ADkAMgBhADgANABhAGQAMAA4ADMAMABiADMANgA3ADQAYgBjADYAZgAz
AGYAMwAyAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAOW4ZBSN1
oU+JO+n2ZWu3NwAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERdQkHBBI9Dh0OEiQDIAAOBiABHQ4d
AwQAABJxCAACEVEOEoCNBwACCA4SgI0GFRI5ARIkBSABARMACQcEEigSQQ4SJAYAAw4OHBwFIAIO
Dg4GIAESgJkOCBUSgJ0CEiQCBSACARwYFBABAh4AFRKApQEeABUSgJ0CHgACBAoBEiQNBwUVEjkB
Dh0OCB0ODgUVEjkBDgYAAw4ODg4KAAIODhUSgKUBDgMHAQ4JIAMBEl0dCBJhAwYSXQMGHQgFIAER
UQgEIAECCAUgAgEIHAMgAAIHIAICDhGArQUgAR0ICAgAARKAsRGAtQUgABKAuQcgAgEOEoC5BiAB
AhKAmQi3elxWGTTgiQiJhF3NgIDMkQj1gKBQFuutoQcGFRI5ARIkAwYSFAMGEhgDBhJlAwYSbQMG
EnEDBhIgAgYOAwYRUQIGCAMGEkUDBhJVBSABARIMBCABDg4FIAESRQ4EIAARUQUgAQERUQQgAQEC
CSAEAQgOEl0SYQUgAQESZQQAABJtBQABARJxBAAAEiADAAABAyAACAQgABJFBSABARJFBSABAhIk
BCgAEVEDKAACAygADgMoAAgECAASbQQIABJxBAgAEiAEKAASRQgBAAgAAAAAAB4BAAEAVAIWV3Jh
cE5vbkV4Y2VwdGlvblRocm93cwEIAQACAAAAAAAoAQAjU0NfMjUxODQ4MDk5MmE4NGFkMDgzMGIz
Njc0YmM2ZjNmMzIAAAUBAAAAAAcBAAJIUAAAGAEAE0NvcHlyaWdodCBAIEhQIDIwMjMAAEkBABou
TkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBG
cmFtZXdvcmsgNC43BAEAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291
cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1
YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVz
b3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAHQ/AAAAAAAAAAAAAI4/AAAAIAAAAAAAAAAA
AAAAAAAAAAAAAAAAAACAPwAAAAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/
JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AAD0AwAAAAAAAAAAAAD0AzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEAAAAAAAAAAQAAAAAAPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAEVAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAMAMAAAEAMAAwADAAMAAwADQA
YgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACYAAwABAEMAbwBtAHAAYQBuAHkATgBh
AG0AZQAAAAAASABQAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBDAF8AMgA1ADEAOAA0ADgAMAA5ADkAMgBhADgANABhAGQAMAA4ADMAMABiADMANgA3ADQAYgBj
ADYAZgAzAGYAMwAyAAAAMAAIAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADAA
LgAwAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwAyADUAMQA4ADQAOAAw
ADkAOQAyAGEAOAA0AGEAZAAwADgAMwAwAGIAMwA2ADcANABiAGMANgBmADMAZgAzADIALgBkAGwA
bAAAAEwAFAABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0
ACAAQAAgAEgAUAAgADIAMAAyADMAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEAZABlAG0AYQByAGsA
cwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAEMAXwAy
ADUAMQA4ADQAOAAwADkAOQAyAGEAOAA0AGEAZAAwADgAMwAwAGIAMwA2ADcANABiAGMANgBmADMA
ZgAzADIALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBDAF8AMgA1
ADEAOAA0ADgAMAA5ADkAMgBhADgANABhAGQAMAA4ADMAMABiADMANgA3ADQAYgBjADYAZgAzAGYA
MwAyAAAANAAIAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAA
ADgACAABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAoD8AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_2518480992a84ad0830b3674bc6f3f32</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">25</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Hannover Data Flow\Add region.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Hannover Data Flow\Add region.Inputs[Input 0].Columns[longitude]"
                      cachedDataType="decimal"
                      cachedName="longitude"
                      lineageId="Package\Hannover Data Flow\Coordinates and datetime conversion.Outputs[Output 0].Columns[longitude]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\Add region.Inputs[Input 0].Columns[latitude]"
                      cachedDataType="decimal"
                      cachedName="latitude"
                      lineageId="Package\Hannover Data Flow\Coordinates and datetime conversion.Outputs[Output 0].Columns[latitude]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Hannover Data Flow\Add region.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Hannover Data Flow\Add region.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add region.Outputs[Output 0].Columns[RegionArea]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Add region.Outputs[Output 0].Columns[RegionArea]"
                      name="RegionArea" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add region.Outputs[Output 0].Columns[ParentRegionName]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Hannover Data Flow\Add region.Outputs[Output 0].Columns[ParentRegionName]"
                      name="ParentRegionName" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add region.Outputs[Output 0].Columns[RegionName]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Hannover Data Flow\Add region.Outputs[Output 0].Columns[RegionName]"
                      name="RegionName" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add region.Outputs[Output 0].Columns[RegionPopulation]"
                      dataType="i4"
                      lineageId="Package\Hannover Data Flow\Add region.Outputs[Output 0].Columns[RegionPopulation]"
                      name="RegionPopulation" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add region.Outputs[Output 0].Columns[RegionDensity]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Add region.Outputs[Output 0].Columns[RegionDensity]"
                      name="RegionDensity" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Hannover Data Flow\Add temperature, air pressure and humidity"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Add temperature, air pressure and humidity"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Globalization;
using System.IO;
using System.Linq;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    List<Measurement> measurements = new List<Measurement>();

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
        string filePath = "C:\\Users\\Rezerwowy\\Desktop\\Engineering Thesis\\Datasets\\10minutenwerte_TU_02014_20100101_20191231_hist\\produkt_zehn_min_tu_20100101_20191231_02014.txt";
        //string[] lines = File.ReadAllLines(filePath);
        using (StreamReader reader = new StreamReader(filePath))
        {
            string line;
            reader.ReadLine();
            while ((line = reader.ReadLine()) != null)
            {
                string[] fields = line.Split(';'); // Change the delimiter if needed

                DateTime measurementDate = DateTime.ParseExact(fields[1], "yyyyMMddHHmm", CultureInfo.InvariantCulture);
                if (measurementDate <= new DateTime(2017, 1, 1) || measurementDate >= new DateTime(2019, 12, 31))
                    continue;
                Measurement measurement = new Measurement()
                {
                    Temperature = decimal.Parse(fields[4], CultureInfo.InvariantCulture),
                    AirPressure = decimal.Parse(fields[3], CultureInfo.InvariantCulture),
                    Humidity = decimal.Parse(fields[6], CultureInfo.InvariantCulture),
                    MeasurementDate = measurementDate,
                };

                measurements.Add(measurement);
            }
        }
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        List<Measurement> measurementsRange = measurements.Where(m => 
        (m.MeasurementDate + new TimeSpan(0,10,0)) >= Row.StartDate && m.MeasurementDate <= Row.EndDate).OrderBy(m => m.MeasurementDate).ToList();

        if (measurementsRange.Count == 1)
        {
            if (measurementsRange.First().Temperature != -999m) 
                Row.Temperature = measurementsRange.First().Temperature;
            if (measurementsRange.First().AirPressure != -999m)
                Row.AirPressure = measurementsRange.First().AirPressure;
            if (measurementsRange.First().Humidity != -999m)
                Row.Humidity = measurementsRange.First().Humidity;
        }
        else
        {
            decimal temperature = 0;
            decimal airPressure = 0;
            decimal humidity = 0;

            for (int i = 0; i < measurementsRange.Count; i++)
            {
                TimeSpan timeSpan;
                if (i == 0)
                    timeSpan = new TimeSpan(0, 10, 0) - (Row.StartDate - measurementsRange[i].MeasurementDate);
                else if (i == measurementsRange.Count - 1)
                    timeSpan = Row.EndDate - measurementsRange[i].MeasurementDate;
                else
                    timeSpan = new TimeSpan(0, 10, 0);

                temperature += (decimal)timeSpan.TotalMinutes / Row.Duration * measurementsRange[i].Temperature;
                airPressure += (decimal)timeSpan.TotalMinutes / Row.Duration * measurementsRange[i].AirPressure;
                humidity += (decimal)timeSpan.TotalMinutes / Row.Duration * measurementsRange[i].Humidity;

            }
            if (measurementsRange.All(m => m.Temperature != -999m))
                Row.Temperature = temperature;
            if (measurementsRange.All(m => m.Temperature != -999m))
                Row.AirPressure = airPressure;
            if (measurementsRange.All(m => m.Temperature != -999m))
                Row.Humidity = humidity;
        }
    }

    private class Measurement
    {
        public decimal Temperature { get; set; }
        public decimal AirPressure { get; set; }
        public decimal Humidity { get; set; }
        public DateTime MeasurementDate { get; set; }

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public DateTime EndDate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[0]);
        }
    }
    public bool EndDate_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public DateTime StartDate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[1]);
        }
    }
    public bool StartDate_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Decimal Duration
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[2]);
        }
    }
    public bool Duration_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Decimal AirPressure
    {
        set
        {
            this[3] = value;
        }
    }
    public bool AirPressure_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Humidity
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Humidity_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Temperature
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Temperature_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_5425e9f9554d4d86a167f6062c5d053c.Properties.Settings.get_Default():SC_5425e9f9554d4d86a167f6062c5d053c.Properties.Sett" +
    "ings")]

namespace SC_5425e9f9554d4d86a167f6062c5d053c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_5425e9f9554d4d86a167f6062c5d053c.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0b498f8d-9f56-4139-a375-eaaba86061d5}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_5425e9f9554d4d86a167f6062c5d053c</RootNamespace>
    <AssemblyName>SC_5425e9f9554d4d86a167f6062c5d053c</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_5425e9f9554d4d86a167f6062c5d053c" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_5425e9f9554d4d86a167f6062c5d053c</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_5425e9f9554d4d86a167f6062c5d053c</msb:DisplayName>
    <msb:ProjectId>{E66EA720-0A80-40E3-859A-B4ED1108C524}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_5425e9f9554d4d86a167f6062c5d053c.csproj" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_5425e9f9554d4d86a167f6062c5d053c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_5425e9f9554d4d86a167f6062c5d053c")]
[assembly: AssemblyCopyright("Copyright @ HP 2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_5425e9f9554d4d86a167f6062c5d053c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_5425e9f9554d4d86a167f6062c5d053c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_5425e9f9554d4d86a167f6062c5d053c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_5425e9f9554d4d86a167f6062c5d053c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_5425e9f9554d4d86a167f6062c5d053c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_5425e9f9554d4d86a167f6062c5d053c.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAIqoR2UAAAAAAAAAAOAAIiALATAAACIAAAAIAAAAAAAA7kEA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJxBAABPAAAAAGAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA9CEAAAAgAAAAIgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAYAAAAAYAAAAkAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAKgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADQ
QQAAAAAAAEgAAAACAAUArCYAADgaAAABAAAAAAAAAORAAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBQDaAAAAAQAAEQIoEAAACnIBAABwcxEAAAoKBm8SAAAK
JjijAAAABxeNIQAAASUWHzudbxMAAAoMCBeaci4BAHAoFAAACigVAAAKDQkg4QcAABcXcxYAAAoo
FwAACi1qCSDjBwAAHwwfH3MWAAAKKBgAAAotVHMpAAAGJQgamigUAAAKKBkAAApvIgAABiUIGZoo
FAAACigZAAAKbyQAAAYlCByaKBQAAAooGQAACm8mAAAGJQlvKAAABhMEAnsBAAAEEQRvGgAACgZv
EgAACiULOlD////eCgYsBgZvGwAACtwqAAABEAAAAgARAL7PAAoAAAAAHgIoHAAACioTMAQAzgIA
AAIAABFzMAAABgoGA30SAAAEAnsBAAAEBv4GMQAABnMdAAAKKAEAACt+DgAABCUtFyZ+DQAABP4G
LAAABnMfAAAKJYAOAAAEKAIAACsoAwAAKwsHbyIAAAoXQJoAAAAHKAQAACtvIQAABiAZ/P//cyQA
AAooJQAACiwWBnsSAAAEBygEAAArbyEAAAZvEAAABgcoBAAAK28jAAAGIBn8//9zJAAACiglAAAK
LBYGexIAAAQHKAQAACtvIwAABm8MAAAGBygEAAArbyUAAAYgGfz//3MkAAAKKCUAAAo58AEAAAZ7
EgAABAcoBAAAK28lAAAGbw4AAAYqEgL+FREAAAESA/4VEQAAARIE/hURAAABFhMFOBIBAAARBS0v
Fh8KFnMmAAAKBnsSAAAEbwgAAAYHEQVvJwAACm8nAAAGKCgAAAooKQAAChMGKzgRBQdvIgAAChdZ
MyEGexIAAARvBgAABgcRBW8nAAAKbycAAAYoKAAAChMGKwsSBhYfChYoJgAACggSBigqAAAKKCsA
AAoGexIAAARvCgAABigsAAAKBxEFbycAAApvIQAABigtAAAKKC4AAAoMCRIGKCoAAAooKwAACgZ7
EgAABG8KAAAGKCwAAAoHEQVvJwAACm8jAAAGKC0AAAooLgAACg0RBBIGKCoAAAooKwAACgZ7EgAA
BG8KAAAGKCwAAAoHEQVvJwAACm8lAAAGKC0AAAooLgAAChMEEQUXWBMFEQUHbyIAAAo/4f7//wd+
DwAABCUtFyZ+DQAABP4GLQAABnMdAAAKJYAPAAAEKAUAACssDAZ7EgAABAhvEAAABgd+EAAABCUt
FyZ+DQAABP4GLgAABnMdAAAKJYAQAAAEKAUAACssDAZ7EgAABAlvDAAABgd+EQAABCUtFyZ+DQAA
BP4GLwAABnMdAAAKJYARAAAEKAUAACssDQZ7EgAABBEEbw4AAAYqSgJzMAAACn0BAAAEAigUAAAG
KioCAwQFKDEAAAoqUgJ7MgAACgJ7MwAAChaUbzQAAAoqIgIWKDUAAAoqUgJ7MgAACgJ7MwAACheU
bzQAAAoqIgIXKDUAAAoqUgJ7MgAACgJ7MwAAChiUbzYAAAoqIgIYKDUAAAoqOgIZA4wRAAABKDcA
AAoqWgMsCAIZKDgAAAoqckgBAHBzOQAACno6AhoDjBEAAAEoNwAACipaAywIAhooOAAACipySAEA
cHM5AAAKejoCGwOMEQAAASg3AAAKKloDLAgCGyg4AAAKKnJIAQBwczkAAAp6HgIoOgAACioeAig7
AAAKKn4CKDwAAAoCAnMYAAAGfQIAAAQCAnMZAAAGfQMAAAQqkgRy5QEAcBpvPQAACiwVAgUCAyg+
AAAKDgRzBQAABm8WAAAGKkorBwIDbxcAAAYDbxIAAAYt8SoGKjoCKD8AAAoCA30EAAAEKjoCKD8A
AAoCA30FAAAEKh4CKD8AAAoqrn4GAAAELR5y9QEAcNAHAAACKEAAAApvQQAACnNCAAAKgAYAAAR+
BgAABCoafgcAAAQqHgKABwAABCoafggAAAQqHgIoQwAACioucx8AAAaACAAABCoeAnsJAAAEKiIC
A30JAAAEKh4CewoAAAQqIgIDfQoAAAQqHgJ7CwAABCoiAgN9CwAABCoeAnsMAAAEKiICA30MAAAE
Ki5zKwAABoANAAAEKh4DbycAAAYqWgNvIQAABiAZ/P//cyQAAAooJQAACir+A28nAAAGFh8KFnMm
AAAKKEQAAAoCexIAAARvCAAABigYAAAKLBcDbycAAAYCexIAAARvBgAABigXAAAKKhYqAAAAQlNK
QgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAA4AkAACN+AABMCgAATAoAACNTdHJpbmdz
AAAAAJgUAABoAgAAI1VTAAAXAAAQAAAAI0dVSUQAAAAQFwAAKAMAACNCbG9iAAAAAAAAAAIAAAFX
FaIJCQsAAAD6ATMAFgAAAQAAACwAAAALAAAAEgAAADEAAAAcAAAARAAAAB4AAAACAAAABAAAABMA
AAAYAAAAAwAAAAEAAAAFAAAAAQAAAAMAAAAFAAAAAACuBQEAAAAAAAYAcATqBwYABAXqBwYAvAPX
Bw8AXggAAAYA6QPnBgYAUwTnBgYANATnBgYA6wTnBgYAkATnBgYAqQTnBgYAAATnBgYAGwQ/BQoA
xARSAgYAfgBUAQYAZQcZAQYAQAJuBgYAYwVuBgYAgQZuBgYAEAluBgYAhAPqBwYArQBuBgoAqQdS
Ag4AmgdSAgoAPAdSAgoAawlSAgYAnwPXBwYAugcKCAYAMAfDBhIAbwOUBRIA0AOUBRIABwOuBgYA
cgcZAQYAYAduBgYAWQVuBgYAfQduBgYAAwJuBhYA+AFUBwYAWwBUARYAaQBUBwYABQduBgYAHwdu
BgYAcwJuBgYADwJuBgYADwrnBgAAAAAIAQAAAAABAAEAAQAQAIoGAAAQAAEAAQABABAAjQcAAFkA
AgAFAAEAEABNCQAAZQACABQAAQAQAOwIAABNAAQAGAABABAAnAgAAE0ABQAZAAAAEAARCG0ITQAG
ABoAAAEQANwIbQh9AAgAHgADABAAQQkAAE0ACQAhAAMhEABQAQAATQANACoAAwEQAAEAAABNABIA
MAABAPgIpQEGAOwIrQEGAJwIsQEBAFsJtQEBAFsJtQERAHUGuQERAOICvQERAOgBwQEBAJABxQEB
AHMBxQEBAM4BxQEBAK0ByQE2AAQBzQEWADMA0QEWAIUA2wEWALQA2wEWANwA2wEGAP8J5AFQIAAA
AADGACIFBgABAEghAAAAAMYALQUGAAEAUCEAAAAAxgDkCegBAQAqJAAAAACGGMoHBgACAD0kAAAA
AIYYygc4AQIASCQAAAAAhggtA+4BBQBdJAAAAACGCAQGYQEFAGYkAAAAAIYIYQPuAQUAeyQAAAAA
hggXBmEBBQCEJAAAAACGCKEG8wEFAJkkAAAAAIYILAZhAQUAoiQAAAAAhgiaAvgBBQCxJAAAAACG
CNYF/gEGAMgkAAAAAIYIMQr4AQcA1yQAAAAAhghABv4BCADuJAAAAACGCLoC+AEJAP0kAAAAAIYI
7QX+AQoAFCUAAAAAhgD7CWEBCwAcJQAAAACGABcJYQELACQlAAAAAIYYygcGAAsARCUAAAAAxgDX
CQMCCwBpJQAAAADGAdAJ6AEPAHwlAAAAAMYB5AnoARAAfiUAAAAAhhjKBw0CEQCNJQAAAACGGMoH
DQISAJwlAAAAAIMYygcGABMApCUAAAAAkwi2BxMCEwDQJQAAAACTCMoCMgATANclAAAAAJMI1gIY
AhMA3yUAAAAAlgg1CR4CFADmJQAAAACGGMoHBgAUAO4lAAAAAJEY0AcjAhQA+iUAAAAAhgiqAvMB
FAACJgAAAACGCLoC+AEUAAsmAAAAAIYIigLzARUAEyYAAAAAhgiaAvgBFQAcJgAAAACGCCQK8wEW
ACQmAAAAAIYIMQr4ARYALSYAAAAAhgg5A+4BFwA1JgAAAACGCE0DJwIXAJwlAAAAAIYYygcGABgA
PiYAAAAAkRjQByMCGACcJQAAAACGGMoHBgAYAEomAAAAAIMAPAAtAhgAUiYAAAAAgwCOADQCGQBS
JgAAAACDAL0ANAIaAFImAAAAAIMA5QA0AhsAnCUAAAAAhhjKBwYAHABpJgAAAACDABYANAIcAAAA
AQD/CQAAAQCvBwAAAgC3CAAAAwBKBwAAAQA5BQAAAQA5BQAAAQA5BQAAAQA5BQAAAQA5BQAAAQA5
BQAAAQARAQAAAgAzAgAAAwCvBwAABABKBwAAAQCvBwAAAQD/CQAAAQBxCQAAAQBxCQAAAQA5BQAA
AQA5BQAAAQA5BQAAAQA5BQAAAQA5BQAAAQBzBgAAAQBzBgAAAQBzBgAAAQBzBgAAAQBzBgkAygcB
ABEAygcGABkAygcKACkAygcQADEAygcQADkAygcQAEEAygcQAEkAygcQAFEAygcQAFkAygcQAGEA
ygcQAGkAygcGAKEAygcGANEAygcGAPEAygcVAMkAIgUGAHkAygcQAAEBSQInABEBLwkrAOEA8gIy
AIEABQk3AIEAygdBAIEAgQVIAIEAawVIAIkAJwNQAAwAbwFgACEBHwMGAMkALQUGABQAygeCACkB
eAKIABwAygeCACkBAwqvACkBognQAAwAewnhACkBygnlAIkAygcBAIkAPgryAJEAygdBAAwAXAb6
AIEA2AYAAZEA2AYJAZEApggSAYkAIwkWAYkAlQYcAYkAGAocAYkA+QYcASkBqgUlAQwAygcGALEA
ygc4AbEArwdCAbEAtwhGAbkAPQJKAbEATQZQAbkAYAVVAbEAZQZbAbEAVAYBAEEBygcQALEA+wlh
AbEAFwlhAckAygcGABEB5QhlAckAywhtAZkAygcGAFEBIQJzAVEBCwp8AdkAygeCAfkAygcGAIEA
+QaKAS4ACwBXAi4AEwBgAi4AGwB/Ai4AIwCIAi4AKwCxAi4AMwCxAi4AOwC3Ai4AQwCIAi4ASwC/
Ai4AUwCxAi4AWwDYAkMAYwAiA+MAcwAiAwEBawAiAyEBawAiA0EBawAiA0MBawAiA2EBawAiA2MB
awAiA4EBawAiA6kBewB/AskBewB/AiAEawAiA0AEawAiA2AEawAiA4AEawAiA6AEawAiA8AEawAi
A+AEawAiAwAFawAiAxsAZgADAAEABwANAAgADwAJABAAAAAxAzoCAAAIBj8CAABlAzoCAAAbBj8C
AAClBkMCAAAwBj8CAACeAkMCAADaBT8CAAA1CkMCAABEBj8CAAC+AkMCAADxBT8CAAC6B0gCAAD/
Ak0CAAA5CVICAAC+AkMCAACeAkMCAAA1CkMCAABRAzoCAgAGAAMAAgAHAAUAAgAIAAcAAgAJAAkA
AgAKAAsAAgALAA0AAQAMAA8AAQANABEAAQAOABMAAQAPABUAAQAQABcAAQARABkAAgAbABsAAgAc
AB0AAQAdAB0AAgAeAB8AAgAhACEAAQAiACEAAgAjACMAAQAkACMAAgAlACUAAQAmACUAAgAnACcA
AQAoACcAWQB6AKYABIAAAAEAAAAAAAAAAAAAAAAALAEAAAQAAAAAAAAAAAAAAJMBIwEAAAAAEAAA
AAAAAAAAAAAAnAGFCQAAAAAQAAAAAAAAAAAAAACcAakJAAAAAAQAAAAAAAAAAAAAAJMBbgYAAAAA
BAAAAAAAAAAAAAAAkwF+AgAAAAAAAAAAAQAAABsIAAAJAAIACgACAAsAAgA9AKEAQQDJAEMAoQBH
AKEAXwChAAAAAAAAPD5jX19EaXNwbGF5Q2xhc3MzXzAAPElucHV0MF9Qcm9jZXNzSW5wdXRSb3c+
Yl9fMAA8PjlfXzNfMQA8SW5wdXQwX1Byb2Nlc3NJbnB1dFJvdz5iX18zXzEASUVudW1lcmFibGVg
MQBJT3JkZXJlZEVudW1lcmFibGVgMQBMaXN0YDEAPD45X18zXzIAPElucHV0MF9Qcm9jZXNzSW5w
dXRSb3c+Yl9fM18yAEZ1bmNgMgA8PjlfXzNfMwA8SW5wdXQwX1Byb2Nlc3NJbnB1dFJvdz5iX18z
XzMAPD45X18zXzQAPElucHV0MF9Qcm9jZXNzSW5wdXRSb3c+Yl9fM180ADw+OQA8TW9kdWxlPgBJ
bnB1dElEAFN5c3RlbS5JTwBtc2NvcmxpYgBTQ181NDI1ZTlmOTU1NGQ0ZDg2YTE2N2Y2MDYyYzVk
MDUzYwA8PmMAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMAQWRkADxBaXJQcmVzc3VyZT5rX19C
YWNraW5nRmllbGQAPFRlbXBlcmF0dXJlPmtfX0JhY2tpbmdGaWVsZAA8TWVhc3VyZW1lbnREYXRl
PmtfX0JhY2tpbmdGaWVsZAA8SHVtaWRpdHk+a19fQmFja2luZ0ZpZWxkAGRlZmF1bHRJbnN0YW5j
ZQBFbnVtZXJhYmxlAElEaXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFu
ZGxlAElucHV0TmFtZQBHZXREYXRlVGltZQBSZWFkTGluZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0
cy5QaXBlbGluZQBUeXBlAFdoZXJlAFN5c3RlbS5Db3JlAGdldF9BaXJQcmVzc3VyZQBzZXRfQWly
UHJlc3N1cmUAZ2V0X1RlbXBlcmF0dXJlAHNldF9UZW1wZXJhdHVyZQBnZXRfQ3VsdHVyZQBzZXRf
Q3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAZ2V0X0ludmFyaWFudEN1bHR1cmUAQXBwbGljYXRpb25T
ZXR0aW5nc0Jhc2UARGlzcG9zZQBQYXJzZQBnZXRfRW5kRGF0ZQBnZXRfTWVhc3VyZW1lbnREYXRl
AHNldF9NZWFzdXJlbWVudERhdGUAZ2V0X1N0YXJ0RGF0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBD
b21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERl
YnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVB
dHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmli
dXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0
cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0
cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRDb21wb25lbnRFbnRy
eVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJp
bGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVjdXRlAHZhbHVlAFN5c3RlbS5SdW50aW1l
LlZlcnNpb25pbmcAU3RyaW5nAEdldERlY2ltYWwAb3BfR3JlYXRlclRoYW5PckVxdWFsAG9wX0xl
c3NUaGFuT3JFcXVhbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAQWxsAFNDXzU0MjVlOWY5NTU0ZDRk
ODZhMTY3ZjYwNjJjNWQwNTNjLmRsbABzZXRfQWlyUHJlc3N1cmVfSXNOdWxsAHNldF9UZW1wZXJh
dHVyZV9Jc051bGwAZ2V0X0VuZERhdGVfSXNOdWxsAGdldF9TdGFydERhdGVfSXNOdWxsAGdldF9E
dXJhdGlvbl9Jc051bGwAc2V0X0h1bWlkaXR5X0lzTnVsbABTZXROdWxsAGdldF9JdGVtAHNldF9J
dGVtAFN5c3RlbQByZXNvdXJjZU1hbgBUaW1lU3BhbgBTY3JpcHRNYWluAG9wX0RpdmlzaW9uAGdl
dF9EdXJhdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBvcF9T
dWJ0cmFjdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBvcF9BZGRpdGlvbgBJbnZhbGlkT3BlcmF0aW9u
RXhjZXB0aW9uAFN0cmluZ0NvbXBhcmlzb24AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRw
dXRNYXAAU3lzdGVtLkxpbnEAQ2hhcgBTdHJlYW1SZWFkZXIAVGV4dFJlYWRlcgBJRm9ybWF0UHJv
dmlkZXIASW5wdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1ZmZlcgBnZXRfUmVzb3Vy
Y2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUu
Q29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDXzU0MjVlOWY5NTU0ZDRkODZhMTY3
ZjYwNjJjNWQwNTNjLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2Rl
cwBTQ181NDI1ZTlmOTU1NGQ0ZDg2YTE2N2Y2MDYyYzVkMDUzYy5Qcm9wZXJ0aWVzAFZhcmlhYmxl
cwBnZXRfVG90YWxNaW51dGVzAEJ1ZmZlckNvbHVtbkluZGV4ZXMAR2V0Q29sdW1uSW5kZXhlcwBT
ZXR0aW5ncwBFcXVhbHMAQ29ubmVjdGlvbnMAbWVhc3VyZW1lbnRzAFBhcnNlRXhhY3QAT2JqZWN0
AEVuZE9mUm93c2V0AG9wX0V4cGxpY2l0AFNwbGl0AGdldF9EZWZhdWx0AE1lYXN1cmVtZW50AFVz
ZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABnZXRfQ291bnQATWlj
cm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABUb0xpc3QATWljcm9zb2Z0LlNxbFNlcnZlci5QaXBl
bGluZUhvc3QARmlyc3QASW5wdXQwX1Byb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0Um93
AE5leHRSb3cAT3JkZXJCeQBnZXRfQXNzZW1ibHkAb3BfTXVsdGlwbHkAZ2V0X0h1bWlkaXR5AHNl
dF9IdW1pZGl0eQBvcF9JbmVxdWFsaXR5AACBK0MAOgBcAFUAcwBlAHIAcwBcAFIAZQB6AGUAcgB3
AG8AdwB5AFwARABlAHMAawB0AG8AcABcAEUAbgBnAGkAbgBlAGUAcgBpAG4AZwAgAFQAaABlAHMA
aQBzAFwARABhAHQAYQBzAGUAdABzAFwAMQAwAG0AaQBuAHUAdABlAG4AdwBlAHIAdABlAF8AVABV
AF8AMAAyADAAMQA0AF8AMgAwADEAMAAwADEAMAAxAF8AMgAwADEAOQAxADIAMwAxAF8AaABpAHMA
dABcAHAAcgBvAGQAdQBrAHQAXwB6AGUAaABuAF8AbQBpAG4AXwB0AHUAXwAyADAAMQAwADAAMQAw
ADEAXwAyADAAMQA5ADEAMgAzADEAXwAwADIAMAAxADQALgB0AHgAdAAAGXkAeQB5AHkATQBNAGQA
ZABIAEgAbQBtAACAm0kAcwBOAHUAbABsACAAcAByAG8AcABlAHIAdAB5ACAAYwBhAG4AbgBvAHQA
IABiAGUAIABzAGUAdAAgAHQAbwAgAEYAYQBsAHMAZQAuACAAQQBzAHMAaQBnAG4AIABhACAAdgBh
AGwAdQBlACAAdABvACAAdABoAGUAIABjAG8AbAB1AG0AbgAgAGkAbgBzAHQAZQBhAGQALgAAD0kA
bgBwAHUAdAAgADAAAHFTAEMAXwA1ADQAMgA1AGUAOQBmADkANQA1ADQAZAA0AGQAOAA2AGEAMQA2
ADcAZgA2ADAANgAyAGMANQBkADAANQAzAGMALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMA
bwB1AHIAYwBlAHMAAACupKyTgyARR6pTIo5DKmACAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARF1
CwcFEj0OHQ4RQRIkAyAADgYgAR0OHQMEAAAScQkAAxFBDg4SgI0GIAMBCAgIBwACAhFBEUEIAAIR
RQ4SgI0GFRI5ARIkBSABARMAEwcHEiwVEjkBEiQRRRFFEUUIEUkHFRJVAhIkAgUgAgEcGBgQAQIV
EoCZAR4AFRKAmQEeABUSVQIeAAIECgESJAgVElUCEiQRQRkQAgIVEoCdAR4AFRKAmQEeABUSVQIe
AB4BBgoCEiQRQRAQAQEVEjkBHgAVEoCZAR4AAyAACAwQAQEeABUSgJkBHgAHAAICEUURRQUgARMA
CAgAAhFJEUERQQgAAhFJEUkRSQMgAA0FAAERRQ0IAAIRRRFFEUUSEAECAhUSgJkBHgAVElUCHgAC
CSADARJdHQgSYQMGEl0DBh0IBSABEUEIBCABAggFIAERRQgFIAIBCBwDIAACByACAg4RgKUFIAEd
CAgIAAESgKkRgK0FIAASgLEHIAIBDhKAsQgAAhFBEUERSQi3elxWGTTgiQiJhF3NgIDMkQcGFRI5
ARIkAwYSFAMGEhgDBhJlAwYSbQMGEnEDBhIgAwYRRQMGEUEDBhIoCQYVElUCEiQRQQgGFRJVAhIk
AgMGEgwFIAEBEgwEIAARQQQgABFFBSABARFFBCABAQIJIAQBCA4SXRJhBSABARJlBAAAEm0FAAEB
EnEEAAASIAMAAAEFIAEBEUEGIAERQRIkBSABAhIkBCgAEUEDKAACBCgAEUUECAASbQQIABJxBAgA
EiAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1ND
XzU0MjVlOWY5NTU0ZDRkODZhMTY3ZjYwNjJjNWQwNTNjAAAFAQAAAAAHAQACSFAAABgBABNDb3B5
cmlnaHQgQCBIUCAyMDIzAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1l
d29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwQBAAAAALQAAADOyu++AQAAAJEAAABs
U3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAu
MCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3Rl
bS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAADEQQAA
AAAAAAAAAADeQQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA0EEAAAAAAAAAAAAAAABfQ29yRGxs
TWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAA
AAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAA
APQDAAAAAAAAAAAAAPQDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+
AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBh
AHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAA
sARUAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAwAwAAAQAwADAAMAAwADAANABi
ADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAJgADAAEAQwBvAG0AcABhAG4AeQBOAGEA
bQBlAAAAAABIAFAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AEMAXwA1ADQAMgA1AGUAOQBmADkANQA1ADQAZAA0AGQAOAA2AGEAMQA2ADcAZgA2ADAANgAyAGMA
NQBkADAANQAzAGMAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAu
ADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADUANAAyADUAZQA5AGYA
OQA1ADUANABkADQAZAA4ADYAYQAxADYANwBmADYAMAA2ADIAYwA1AGQAMAA1ADMAYwAuAGQAbABs
AAAATAAUAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQA
IABAACAASABQACAAMgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBz
AAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADUA
NAAyADUAZQA5AGYAOQA1ADUANABkADQAZAA4ADYAYQAxADYANwBmADYAMAA2ADIAYwA1AGQAMAA1
ADMAYwAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA1ADQA
MgA1AGUAOQBmADkANQA1ADQAZAA0AGQAOAA2AGEAMQA2ADcAZgA2ADAANgAyAGMANQBkADAANQAz
AGMAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAA
OAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAADwMQAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_5425e9f9554d4d86a167f6062c5d053c</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">96</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Hannover Data Flow\Add temperature, air pressure and humidity.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Hannover Data Flow\Add temperature, air pressure and humidity.Inputs[Input 0].Columns[EndDate]"
                      cachedDataType="date"
                      cachedName="EndDate"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[EndDate]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\Add temperature, air pressure and humidity.Inputs[Input 0].Columns[StartDate]"
                      cachedDataType="date"
                      cachedName="StartDate"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[StartDate]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\Add temperature, air pressure and humidity.Inputs[Input 0].Columns[Duration]"
                      cachedDataType="decimal"
                      cachedName="Duration"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[Duration]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Hannover Data Flow\Add temperature, air pressure and humidity.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Hannover Data Flow\Add temperature, air pressure and humidity.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add temperature, air pressure and humidity.Outputs[Output 0].Columns[AirPressure]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Add temperature, air pressure and humidity.Outputs[Output 0].Columns[AirPressure]"
                      name="AirPressure" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add temperature, air pressure and humidity.Outputs[Output 0].Columns[Humidity]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Add temperature, air pressure and humidity.Outputs[Output 0].Columns[Humidity]"
                      name="Humidity" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add temperature, air pressure and humidity.Outputs[Output 0].Columns[Temperature]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Add temperature, air pressure and humidity.Outputs[Output 0].Columns[Temperature]"
                      name="Temperature" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Hannover Data Flow\Add wind speed and direction"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Add wind speed and direction"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Data;
using System.Globalization;
using System.IO;
using System.Linq;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    List<Measurement> measurements = new List<Measurement>();

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
        string filePath = "C:\\Users\\Rezerwowy\\Desktop\\Engineering Thesis\\Datasets\\10minutenwerte_wind_02014_20100101_20191231_hist\\produkt_zehn_min_ff_20100101_20191231_02014.txt";
        //string[] lines = File.ReadAllLines(filePath);
        using (StreamReader reader = new StreamReader(filePath))
        {
            string line;
            reader.ReadLine();
            while ((line = reader.ReadLine()) != null)
            {
                string[] fields = line.Split(';'); // Change the delimiter if needed

                DateTime measurementDate = DateTime.ParseExact(fields[1], "yyyyMMddHHmm", CultureInfo.InvariantCulture);
                if (measurementDate <= new DateTime(2017, 1, 1) || measurementDate >= new DateTime(2019, 12, 31))
                    continue;

                Measurement measurement = new Measurement()
                {
                    Speed = decimal.Parse(fields[3], CultureInfo.InvariantCulture),
                    Direction = decimal.Parse(fields[4], CultureInfo.InvariantCulture),
                    MeasurementDate = measurementDate,
                };

                measurements.Add(measurement);
            }
        }
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */

        List<Measurement> measurementsRange = measurements.Where(m =>
        (m.MeasurementDate + new TimeSpan(0, 10, 0)) >= Row.StartDate && m.MeasurementDate <= Row.EndDate).OrderBy(m => m.MeasurementDate).ToList();

        if (measurementsRange.Count == 1)
        {
            if (measurementsRange.First().Speed != -999.0m) 
                Row.WindSpeed = measurementsRange.First().Speed;

            if (measurementsRange.First().Direction != -999.0m) 
                Row.WindDirection = MapDirection(measurementsRange.First().Direction);
        }
        else
        {
            decimal speed = 0;
            decimal direction = 0;
            
            for (int i = 0; i < measurementsRange.Count; i++)
            {
                TimeSpan timeSpan;
                if (i == 0)
                    timeSpan = new TimeSpan(0, 10, 0) - (Row.StartDate - measurementsRange[i].MeasurementDate);
                else if (i == measurementsRange.Count - 1)
                    timeSpan = Row.EndDate - measurementsRange[i].MeasurementDate;
                else
                    timeSpan = new TimeSpan(0, 10, 0);

                speed += (decimal)timeSpan.TotalMinutes / Row.Duration * measurementsRange[i].Speed;
                direction += (decimal)timeSpan.TotalMinutes / Row.Duration * measurementsRange[i].Direction;
            }

            if (measurementsRange.All(m => m.Speed != -999.0m)) 
                Row.WindSpeed = speed;

            if (measurementsRange.All(m => m.Direction != -999.0m))
                Row.WindDirection = MapDirection(direction);
        }
    }


    private string MapDirection(decimal direction)
    {
        if (direction < 11.25m)
            return "N";
        else if (direction < 33.75m)
            return "NNE";
        else if (direction < 56.25m)
            return "NE";
        else if (direction < 78.75m)
            return "EN";
        else if (direction < 101.25m)
            return "E";
        else if (direction < 123.75m)
            return "ESE";
        else if (direction < 146.25m)
            return "SE";
        else if (direction < 168.75m)
            return "SSE";
        else if (direction < 191.25m)
            return "S";
        else if (direction < 213.75m)
            return "SSW";
        else if (direction < 236.25m)
            return "SW";
        else if (direction < 258.75m)
            return "WSW";
        else if (direction < 281.25m)
            return "W";
        else if (direction < 303.75m)
            return "WNW";
        else if (direction < 326.25m)
            return "NW";
        else if (direction < 348.75m)
            return "NNW";
        else 
            return "N";
    }

    private class Measurement
    {
        public decimal Speed { get; set; }
        public decimal Direction { get; set; }
        public DateTime MeasurementDate { get; set; }

    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public DateTime StartDate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[0]);
        }
    }
    public bool StartDate_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public DateTime EndDate
    {
        get
        {
            return Buffer.GetDateTime(BufferColumnIndexes[1]);
        }
    }
    public bool EndDate_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Decimal Duration
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[2]);
        }
    }
    public bool Duration_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public String WindDirection
    {
        set
        {
            this[3] = value;
        }
    }
    public bool WindDirection_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal WindSpeed
    {
        set
        {
            this[4] = value;
        }
    }
    public bool WindSpeed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_365a7cf2b5944580901ec31423c95ca6.Properties.Settings.get_Default():SC_365a7cf2b5944580901ec31423c95ca6.Properties.Sett" +
    "ings")]

namespace SC_365a7cf2b5944580901ec31423c95ca6.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_365a7cf2b5944580901ec31423c95ca6.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{9f441256-e826-4e0e-bfbc-f3939eb5b2ae}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_365a7cf2b5944580901ec31423c95ca6</RootNamespace>
    <AssemblyName>SC_365a7cf2b5944580901ec31423c95ca6</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptComponent" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptComponent" GeneratedNamespace="SC_365a7cf2b5944580901ec31423c95ca6" IconIndex="0"></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_365a7cf2b5944580901ec31423c95ca6</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_365a7cf2b5944580901ec31423c95ca6</msb:DisplayName>
    <msb:ProjectId>{708CF727-AE45-4D3A-AB44-0F30D2C87916}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_365a7cf2b5944580901ec31423c95ca6.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_365a7cf2b5944580901ec31423c95ca6")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_365a7cf2b5944580901ec31423c95ca6")]
[assembly: AssemblyCopyright("Copyright @ HP 2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_365a7cf2b5944580901ec31423c95ca6.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_365a7cf2b5944580901ec31423c95ca6.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_365a7cf2b5944580901ec31423c95ca6.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_365a7cf2b5944580901ec31423c95ca6.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_365a7cf2b5944580901ec31423c95ca6.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_365a7cf2b5944580901ec31423c95ca6.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAManR2UAAAAAAAAAAOAAIiALATAAACQAAAAIAAAAAAAApkIA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFRCAABPAAAAAGAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAArCIAAAAgAAAAJAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAYAAAAAYAAAAmAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACI
QgAAAAAAAEgAAAACAAUAuCcAAOQZAAABAAAAAAAAAJxBAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBQDHAAAAAQAAEQIoEAAACnIBAABwcxEAAAoKBm8SAAAK
JjiQAAAABxeNIQAAASUWHzudbxMAAAoMCBeacjIBAHAoFAAACigVAAAKDQkg4QcAABcXcxYAAAoo
FwAACi1XCSDjBwAAHwwfH3MWAAAKKBgAAAotQXMmAAAGJQgZmigUAAAKKBkAAApvIQAABiUIGpoo
FAAACigZAAAKbyMAAAYlCW8lAAAGEwQCewEAAAQRBG8aAAAKBm8SAAAKJQs6Y////94KBiwGBm8b
AAAK3CoAARAAAAIAEQCrvAAKAAAAAB4CKBwAAAoqEzAGADoCAAACAAARcywAAAYKBgN9EAAABAJ7
AQAABAb+Bi0AAAZzHQAACigBAAArfg0AAAQlLRcmfgwAAAT+BikAAAZzHwAACiWADQAABCgCAAAr
KAMAACsLB28iAAAKFzN2BygEAAArbyAAAAYgBicAABYWFxdzJAAACiglAAAKLBYGexAAAAQHKAQA
ACtvIAAABm8PAAAGBygEAAArbyIAAAYgBicAABYWFxdzJAAACiglAAAKOYkBAAAGexAAAAQCBygE
AAArbyIAAAYoBAAABm8NAAAGKhIC/hURAAABEgP+FREAAAEWEwQ42wAAABEELS8WHwoWcyYAAAoG
exAAAARvBwAABgcRBG8nAAAKbyQAAAYoKAAACigpAAAKEwUrOBEEB28iAAAKF1kzIQZ7EAAABG8J
AAAGBxEEbycAAApvJAAABigoAAAKEwUrCxIFFh8KFigmAAAKCBIFKCoAAAooKwAACgZ7EAAABG8L
AAAGKCwAAAoHEQRvJwAACm8gAAAGKC0AAAooLgAACgwJEgUoKgAACigrAAAKBnsQAAAEbwsAAAYo
LAAACgcRBG8nAAAKbyIAAAYoLQAACiguAAAKDREEF1gTBBEEB28iAAAKPxj///8Hfg4AAAQlLRcm
fgwAAAT+BioAAAZzHQAACiWADgAABCgFAAArLAwGexAAAAQIbw8AAAYHfg8AAAQlLRcmfgwAAAT+
BisAAAZzHQAACiWADwAABCgFAAArLBIGexAAAAQCCSgEAAAGbw0AAAYqAAATMAYAxgEAAAAAAAAD
IGUEAAAWFhYYcyQAAAooMAAACiwGckwBAHAqAyAvDQAAFhYWGHMkAAAKKDAAAAosBnJQAQBwKgMg
+RUAABYWFhhzJAAACigwAAAKLAZyWAEAcCoDIMMeAAAWFhYYcyQAAAooMAAACiwGcl4BAHAqAyCN
JwAAFhYWGHMkAAAKKDAAAAosBnJkAQBwKgMgVzAAABYWFhhzJAAACigwAAAKLAZyaAEAcCoDICE5
AAAWFhYYcyQAAAooMAAACiwGcnABAHAqAyDrQQAAFhYWGHMkAAAKKDAAAAosBnJ2AQBwKgMgtUoA
ABYWFhhzJAAACigwAAAKLAZyfgEAcCoDIH9TAAAWFhYYcyQAAAooMAAACiwGcoIBAHAqAyBJXAAA
FhYWGHMkAAAKKDAAAAosBnKKAQBwKgMgE2UAABYWFhhzJAAACigwAAAKLAZykAEAcCoDIN1tAAAW
FhYYcyQAAAooMAAACiwGcpgBAHAqAyCndgAAFhYWGHMkAAAKKDAAAAosBnKcAQBwKgMgcX8AABYW
FhhzJAAACigwAAAKLAZypAEAcCoDIDuIAAAWFhYYcyQAAAooMAAACiwGcqoBAHAqckwBAHAqSgJz
MQAACn0BAAAEAigTAAAGKioCAwQFKDIAAAoqUgJ7MwAACgJ7NAAAChaUbzUAAAoqIgIWKDYAAAoq
UgJ7MwAACgJ7NAAACheUbzUAAAoqIgIXKDYAAAoqUgJ7MwAACgJ7NAAAChiUbzcAAAoqIgIYKDYA
AAoqJgIZAyg4AAAKKloDLAgCGSg5AAAKKnKyAQBwczoAAAp6OgIaA4wRAAABKDgAAAoqWgMsCAIa
KDkAAAoqcrIBAHBzOgAACnoeAig7AAAKKh4CKDwAAAoqfgIoPQAACgICcxcAAAZ9AgAABAICcxgA
AAZ9AwAABCqSBHJPAgBwGm8+AAAKLBUCBQIDKD8AAAoOBHMGAAAGbxUAAAYqSisHAgNvFgAABgNv
EQAABi3xKgYqOgIoQAAACgIDfQQAAAQqOgIoQAAACgIDfQUAAAQqHgIoQAAACiqufgYAAAQtHnJf
AgBw0AcAAAIoQQAACm9CAAAKc0MAAAqABgAABH4GAAAEKhp+BwAABCoeAoAHAAAEKhp+CAAABCoe
AihEAAAKKi5zHgAABoAIAAAEKh4CewkAAAQqIgIDfQkAAAQqHgJ7CgAABCoiAgN9CgAABCoeAnsL
AAAEKiICA30LAAAEKi5zKAAABoAMAAAEKh4DbyQAAAYqagNvIAAABiAGJwAAFhYXF3MkAAAKKCUA
AAoqagNvIgAABiAGJwAAFhYXF3MkAAAKKCUAAAoq/gNvJAAABhYfChZzJgAACihFAAAKAnsQAAAE
bwcAAAYoGAAACiwXA28kAAAGAnsQAAAEbwkAAAYoFwAACioWKkJTSkIBAAEAAAAAAAwAAAB2NC4w
LjMwMzE5AAAAAAUAbAAAAFQJAAAjfgAAwAkAAAgKAAAjU3RyaW5ncwAAAADIEwAA1AIAACNVUwCc
FgAAEAAAACNHVUlEAAAArBYAADgDAAAjQmxvYgAAAAAAAAACAAABVxWiCQkLAAAA+gEzABYAAAEA
AAAsAAAACwAAABAAAAAtAAAAGQAAAEUAAAAbAAAAAgAAAAQAAAAQAAAAFAAAAAMAAAABAAAABQAA
AAEAAAADAAAABQAAAAAARgUBAAAAAAAGAAgEvwcGAJwEvwcGAFQDrAcPADMIAAAGAIEDdwYGAOsD
dwYGAMwDdwYGAIMEdwYGACgEdwYGAEEEdwYGAJgDdwYGALMD1wQKAFwEKgIGAH4ALAEGADoHFQEG
ABgC8gUGAPsE8gUGABEG8gUGAOUI8gUGABwDvwcGAK0A8gUKAH4HKgIOAG8HKgIKABEHKgIKAEAJ
KgIGADcDrAcGAI8H3wcGAAUHUwYSAAcDLAUSAGgDLAUSAJ8CPgYGAEcHFQEGADUH8gUGAPEE8gUG
AFIH8gUGANsB8gUWANABKQcGAFsALAEWAGkAKQcGANoG8gUGAPQG8gUGAEsC8gUGAOcB8gUGAOQJ
dwYAAAAABAEAAAAAAQABAAEAEAAaBgAAEAABAAEAAQAQAGIHAABZAAIABgABABAAIgkAAGUAAgAT
AAEAEADBCAAATQAEABcAAQAQAHEIAABNAAUAGAAAABAA5gdCCE0ABgAZAAABEACxCEIIfQAIAB0A
AwAQABYJAABNAAkAIAADIRAAKAEAAE0ADAAnAAMBEAABAAAATQAQACwAAQDNCKwBBgDBCLQBBgBx
CLgBAQAwCbwBAQAwCbwBEQD5BcABEQB6AsQBEQDAAcgBAQBtAcwBAQClAcwBAQCEAdABNgAAAdQB
FgAzANgBFgCFAOIBFgC0AOIBBgDUCesBUCAAAAAAxgC6BAYAAQA0IQAAAADGAMUEBgABADwhAAAA
AMYAuQnvAQEAhCMAAAAAgQC3BvUBAgBWJQAAAACGGJ8HBgADAGklAAAAAIYYnwc/AQMAdCUAAAAA
hgj5AvsBBgCJJQAAAACGCJYFaAEGAJIlAAAAAIYIxQL7AQYApyUAAAAAhgiDBWgBBgCwJQAAAACG
CDEGAAIGAMUlAAAAAIYIqwVoAQYAziUAAAAAhgilBhAABgDYJQAAAACGCL8FBQIHAO8lAAAAAIYI
XwEKAggA/iUAAAAAhghuBQUCCQAVJgAAAACGANAJaAEKAB0mAAAAAIYA7AhoAQoAJSYAAAAAhhif
BwYACgBFJgAAAADGAKwJEAIKAGomAAAAAMYBpQnvAQ4AfSYAAAAAxgG5Ce8BDwB/JgAAAACGGJ8H
GgIQAI4mAAAAAIYYnwcaAhEAnSYAAAAAgxifBwYAEgClJgAAAACTCIsHIAISANEmAAAAAJMIYgIy
ABIA2CYAAAAAkwhuAiUCEgDgJgAAAACWCAoJKwITAOcmAAAAAIYYnwcGABMA7yYAAAAAkRilBzAC
EwD7JgAAAACGCEsBAAITAAMnAAAAAIYIVQEKAhMADCcAAAAAhgiJBgACFAAUJwAAAACGCJcGCgIU
AB0nAAAAAIYI0QL7ARUAJScAAAAAhgjlAjQCFQCdJgAAAACGGJ8HBgAWAC4nAAAAAJEYpQcwAhYA
nSYAAAAAhhifBwYAFgA6JwAAAACDADwAOgIWAEInAAAAAIMAjgBBAhcAXScAAAAAgwC9AEECGACd
JgAAAACGGJ8HBgAZAHgnAAAAAIMAFgBBAhkAAAABANQJAAABAMQGAAABAIQHAAACAIwIAAADAB8H
AAABANEEAAABANEEAAABANEEAAABANEEAAABAA0BAAACAAsCAAADAIQHAAAEAB8HAAABAIQHAAAB
ANQJAAABAEYJAAABAEYJAAABANEEAAABANEEAAABANEEAAABANEEAAABAPcFAAABAPcFAAABAPcF
AAABAPcFCQCfBwEAEQCfBwYAGQCfBwoAKQCfBxAAMQCfBxAAOQCfBxAAQQCfBxAASQCfBxAAUQCf
BxAAWQCfBxAAYQCfBxAAaQCfBwYAoQCfBwYA0QCfBwYA8QCfBxUAyQC6BAYAeQCfBxAAAQEhAicA
EQEECSsA4QCKAjIAgQDaCDcAgQCfB0EAgQAZBUgAgQADBUgAiQC/AlAADABHAWAAIQG3AgYAyQDF
BAYAFACfB4AAKQFQAoYAHACfB4AAKQHYCa0AKQF3Cc4ADABQCd8AKQGfCeMAiQCfB/AAiQD5CfkA
kQCfB0EADADgBQEBgQBoBgcBkQBoBhABkQB7CBkBiQD4CB0BiQAlBiMBiQDtCSMBiQDOBiMBKQFC
BSwBiQAFBvkADACfBwYAsQCfBz8BsQCEB0kBsQCMCE0BuQAVAlEBsQDRBVcBuQD4BFwBsQDpBWIB
sQDYBQEAQQGfBxAAsQDQCWgBsQDsCGgByQCfBwYAEQG6CGwByQCgCHQBmQCfBwYAUQH5AXoBUQHg
CYMB2QCfB4kB+QCfBwYAgQDOBpEBLgALAGgCLgATAHECLgAbAJACLgAjAJkCLgArAMICLgAzAMIC
LgA7AMgCLgBDAJkCLgBLANACLgBTAMICLgBbAOkCQwBjADMD4wBzADMDAQFrADMDIQFrADMDQQFr
ADMDQwFrADMDYQFrADMDYwFrADMDaQF7AJACiQF7AJACAARrADMDIARrADMDQARrADMDYARrADMD
gARrADMDoARrADMDGwBmAAMAAQAHAAsACAANAAkADgAAAP0CRwIAAJoFTAIAAMkCRwIAAIcFTAIA
ADUGUAIAAK8FTAIAAKkGVQIAAMMFTAIAAGMBUAIAAHIFTAIAAI8HWQIAAJcCXgIAAA4JYwIAAGcB
UAIAALoGUAIAAOkCRwICAAcAAwACAAgABQACAAkABwACAAoACQACAAsACwACAAwADQABAA0ADwAB
AA4AEQABAA8AEwABABAAFQACABoAFwACABsAGQABABwAGQACAB0AGwACACAAHQABACEAHQACACIA
HwABACMAHwACACQAIQABACUAIQBZAHgApAAEgAAAAQAAAAAAAAAAAAAAAADcAAAABAAAAAAAAAAA
AAAAmgEfAQAAAAAQAAAAAAAAAAAAAACjAVoJAAAAABAAAAAAAAAAAAAAAKMBfgkAAAAABAAAAAAA
AAAAAAAAmgHyBQAAAAAEAAAAAAAAAAAAAACaAVYCAAAAAAAAAAABAAAA8AcAAAkAAgAKAAIACwAC
AD0AnwBBAMcAQwCfAEcAnwBfAJ8AAAAAAAA8PmNfX0Rpc3BsYXlDbGFzczNfMAA8SW5wdXQwX1By
b2Nlc3NJbnB1dFJvdz5iX18wADw+OV9fM18xADxJbnB1dDBfUHJvY2Vzc0lucHV0Um93PmJfXzNf
MQBJRW51bWVyYWJsZWAxAElPcmRlcmVkRW51bWVyYWJsZWAxAExpc3RgMQA8PjlfXzNfMgA8SW5w
dXQwX1Byb2Nlc3NJbnB1dFJvdz5iX18zXzIARnVuY2AyADw+OV9fM18zADxJbnB1dDBfUHJvY2Vz
c0lucHV0Um93PmJfXzNfMwBTQ18zNjVhN2NmMmI1OTQ0NTgwOTAxZWMzMTQyM2M5NWNhNgA8PjkA
PE1vZHVsZT4ASW5wdXRJRABTeXN0ZW0uSU8AbXNjb3JsaWIAPD5jAFN5c3RlbS5Db2xsZWN0aW9u
cy5HZW5lcmljAEFkZABnZXRfU3BlZWQAc2V0X1NwZWVkAHNldF9XaW5kU3BlZWQAPFNwZWVkPmtf
X0JhY2tpbmdGaWVsZAA8TWVhc3VyZW1lbnREYXRlPmtfX0JhY2tpbmdGaWVsZAA8RGlyZWN0aW9u
PmtfX0JhY2tpbmdGaWVsZABkZWZhdWx0SW5zdGFuY2UARW51bWVyYWJsZQBJRGlzcG9zYWJsZQBS
dW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBJbnB1dE5hbWUAR2V0RGF0ZVRpbWUA
UmVhZExpbmUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBXaGVyZQBTeXN0
ZW0uQ29yZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAZ2V0X0ludmFy
aWFudEN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBQYXJzZQBnZXRfRW5k
RGF0ZQBnZXRfTWVhc3VyZW1lbnREYXRlAHNldF9NZWFzdXJlbWVudERhdGUAZ2V0X1N0YXJ0RGF0
ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dl
ck5vblVzZXJDb2RlQXR0cmlidXRlAERlYnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxl
QXR0cmlidXRlAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1
dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRy
aWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRl
AFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0
dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBQcmVFeGVjdXRlAFBvc3RFeGVj
dXRlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAU3RyaW5nAEdldERlY2ltYWwAb3Bf
R3JlYXRlclRoYW5PckVxdWFsAG9wX0xlc3NUaGFuT3JFcXVhbABTeXN0ZW0uQ29tcG9uZW50TW9k
ZWwAQWxsAFNDXzM2NWE3Y2YyYjU5NDQ1ODA5MDFlYzMxNDIzYzk1Y2E2LmRsbABzZXRfV2luZFNw
ZWVkX0lzTnVsbABnZXRfRW5kRGF0ZV9Jc051bGwAZ2V0X1N0YXJ0RGF0ZV9Jc051bGwAZ2V0X0R1
cmF0aW9uX0lzTnVsbABzZXRfV2luZERpcmVjdGlvbl9Jc051bGwAU2V0TnVsbABnZXRfSXRlbQBz
ZXRfSXRlbQBTeXN0ZW0AcmVzb3VyY2VNYW4Ab3BfTGVzc1RoYW4AVGltZVNwYW4AU2NyaXB0TWFp
bgBvcF9EaXZpc2lvbgBnZXRfRHVyYXRpb24AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkds
b2JhbGl6YXRpb24Ab3BfU3VidHJhY3Rpb24AU3lzdGVtLlJlZmxlY3Rpb24AZ2V0X0RpcmVjdGlv
bgBzZXRfRGlyZWN0aW9uAHNldF9XaW5kRGlyZWN0aW9uAE1hcERpcmVjdGlvbgBkaXJlY3Rpb24A
b3BfQWRkaXRpb24ASW52YWxpZE9wZXJhdGlvbkV4Y2VwdGlvbgBTdHJpbmdDb21wYXJpc29uAEN1
bHR1cmVJbmZvAE91dHB1dE5hbWVNYXAAT3V0cHV0TWFwAFN5c3RlbS5MaW5xAENoYXIAU3RyZWFt
UmVhZGVyAFRleHRSZWFkZXIASUZvcm1hdFByb3ZpZGVyAElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1
ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNlTWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVt
LkRpYWdub3N0aWNzAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291
cmNlcwBTQ18zNjVhN2NmMmI1OTQ0NTgwOTAxZWMzMTQyM2M5NWNhNi5Qcm9wZXJ0aWVzLlJlc291
cmNlcy5yZXNvdXJjZXMARGVidWdnaW5nTW9kZXMAU0NfMzY1YTdjZjJiNTk0NDU4MDkwMWVjMzE0
MjNjOTVjYTYuUHJvcGVydGllcwBWYXJpYWJsZXMAZ2V0X1RvdGFsTWludXRlcwBCdWZmZXJDb2x1
bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMAU2V0dGluZ3MARXF1YWxzAENvbm5lY3Rpb25zAG1l
YXN1cmVtZW50cwBQYXJzZUV4YWN0AE9iamVjdABFbmRPZlJvd3NldABvcF9FeHBsaWNpdABTcGxp
dABnZXRfRGVmYXVsdABNZWFzdXJlbWVudABVc2VyQ29tcG9uZW50AFBhcmVudENvbXBvbmVudABT
Y3JpcHRDb21wb25lbnQAZ2V0X0NvdW50AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQAVG9M
aXN0AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AEZpcnN0AElucHV0MF9Qcm9jZXNz
SW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AE9yZGVyQnkAZ2V0X0Fzc2VtYmx5
AG9wX011bHRpcGx5AG9wX0luZXF1YWxpdHkAAACBL0MAOgBcAFUAcwBlAHIAcwBcAFIAZQB6AGUA
cgB3AG8AdwB5AFwARABlAHMAawB0AG8AcABcAEUAbgBnAGkAbgBlAGUAcgBpAG4AZwAgAFQAaABl
AHMAaQBzAFwARABhAHQAYQBzAGUAdABzAFwAMQAwAG0AaQBuAHUAdABlAG4AdwBlAHIAdABlAF8A
dwBpAG4AZABfADAAMgAwADEANABfADIAMAAxADAAMAAxADAAMQBfADIAMAAxADkAMQAyADMAMQBf
AGgAaQBzAHQAXABwAHIAbwBkAHUAawB0AF8AegBlAGgAbgBfAG0AaQBuAF8AZgBmAF8AMgAwADEA
MAAwADEAMAAxAF8AMgAwADEAOQAxADIAMwAxAF8AMAAyADAAMQA0AC4AdAB4AHQAABl5AHkAeQB5
AE0ATQBkAGQASABIAG0AbQAAA04AAAdOAE4ARQAABU4ARQAABUUATgAAA0UAAAdFAFMARQAABVMA
RQAAB1MAUwBFAAADUwAAB1MAUwBXAAAFUwBXAAAHVwBTAFcAAANXAAAHVwBOAFcAAAVOAFcAAAdO
AE4AVwAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAgAGMAYQBuAG4AbwB0ACAAYgBl
ACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkAZwBuACAAYQAgAHYAYQBsAHUA
ZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0AGUAYQBkAC4AAA9JAG4AcAB1
AHQAIAAwAABxUwBDAF8AMwA2ADUAYQA3AGMAZgAyAGIANQA5ADQANAA1ADgAMAA5ADAAMQBlAGMA
MwAxADQAMgAzAGMAOQA1AGMAYQA2AC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQBy
AGMAZQBzAAAAAAC+AHgiuPczQ59diS/X3vhOAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARF1CwcF
Ej0OHQ4RQRIkAyAADgYgAR0OHQMEAAAScQkAAxFBDg4SgI0GIAMBCAgIBwACAhFBEUEIAAIRRQ4S
gI0GFRI5ARIkBSABARMAEQcGEiwVEjkBEiQRRRFFCBFJBxUSVQISJAIFIAIBHBgYEAECFRKAmQEe
ABUSgJkBHgAVElUCHgACBAoBEiQIFRJVAhIkEUEZEAICFRKAnQEeABUSgJkBHgAVElUCHgAeAQYK
AhIkEUEQEAEBFRI5AR4AFRKAmQEeAAMgAAgMEAEBHgAVEoCZAR4ACCAFAQgICAIFBwACAhFFEUUF
IAETAAgIAAIRSRFBEUEIAAIRSRFJEUkDIAANBQABEUUNCAACEUURRRFFEhABAgIVEoCZAR4AFRJV
Ah4AAgkgAwESXR0IEmEDBhJdAwYdCAUgARFBCAQgAQIIBSABEUUIBSACAQgcAyAAAgcgAgIOEYCl
BSABHQgICAABEoCpEYCtBSAAEoCxByACAQ4SgLEIAAIRQRFBEUkIt3pcVhk04IkIiYRdzYCAzJEH
BhUSOQESJAMGEhQDBhIYAwYSZQMGEm0DBhJxAwYSIAMGEUUDBhFBAwYSKAkGFRJVAhIkEUEIBhUS
VQISJAIDBhIMBSABARIMBSABDhFFBCAAEUEEIAARRQQgAQECBSABARFFCSAEAQgOEl0SYQUgAQES
ZQQAABJtBQABARJxBAAAEiADAAABBSABARFBBiABEUESJAUgAQISJAQoABFBAygAAgQoABFFAygA
DgQIABJtBAgAEnEECAASIAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwEI
AQACAAAAAAAoAQAjU0NfMzY1YTdjZjJiNTk0NDU4MDkwMWVjMzE0MjNjOTVjYTYAAAUBAAAAAAcB
AAJIUAAAGAEAE0NvcHlyaWdodCBAIEhQIDIwMjMAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249
djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEAAAC0AAAA
zsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBW
ZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYx
OTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBB
RFBBRFC0AAAAfEIAAAAAAAAAAAAAlkIAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIhCAAAAAAAA
AAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAEAAA
ABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABYYAAA
9AMAAAAAAAAAAAAA9AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E7/4A
AAEAAAABAAAAAAAAAAEAAAAAAD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBWAGEA
cgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAAAACw
BFQDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAADADAAABADAAMAAwADAAMAA0AGIA
MAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAmAAMAAQBDAG8AbQBwAGEAbgB5AE4AYQBt
AGUAAAAAAEgAUAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
QwBfADMANgA1AGEANwBjAGYAMgBiADUAOQA0ADQANQA4ADAAOQAwADEAZQBjADMAMQA0ADIAMwBj
ADkANQBjAGEANgAAADAACAABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgAwAC4A
MAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBDAF8AMwA2ADUAYQA3AGMAZgAy
AGIANQA5ADQANAA1ADgAMAA5ADAAMQBlAGMAMwAxADQAMgAzAGMAOQA1AGMAYQA2AC4AZABsAGwA
AABMABQAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAg
AEAAIABIAFAAIAAyADAAMgAzAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBtAGEAcgBrAHMA
AAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AMwA2
ADUAYQA3AGMAZgAyAGIANQA5ADQANAA1ADgAMAA5ADAAMQBlAGMAMwAxADQAMgAzAGMAOQA1AGMA
YQA2AC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfADMANgA1
AGEANwBjAGYAMgBiADUAOQA0ADQANQA4ADAAOQAwADEAZQBjADMAMQA0ADIAMwBjADkANQBjAGEA
NgAAADQACAABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAA4
AAgAAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgAwAC4AMAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAADAAAAKgyAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_365a7cf2b5944580901ec31423c95ca6</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">C1</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Hannover Data Flow\Add wind speed and direction.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Hannover Data Flow\Add wind speed and direction.Inputs[Input 0].Columns[StartDate]"
                      cachedDataType="date"
                      cachedName="StartDate"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[StartDate]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\Add wind speed and direction.Inputs[Input 0].Columns[EndDate]"
                      cachedDataType="date"
                      cachedName="EndDate"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[EndDate]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\Add wind speed and direction.Inputs[Input 0].Columns[Duration]"
                      cachedDataType="decimal"
                      cachedName="Duration"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[Duration]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Hannover Data Flow\Add wind speed and direction.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Hannover Data Flow\Add wind speed and direction.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add wind speed and direction.Outputs[Output 0].Columns[WindDirection]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Hannover Data Flow\Add wind speed and direction.Outputs[Output 0].Columns[WindDirection]"
                      name="WindDirection" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Add wind speed and direction.Outputs[Output 0].Columns[WindSpeed]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Add wind speed and direction.Outputs[Output 0].Columns[WindSpeed]"
                      name="WindSpeed" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Hannover Data Flow\Coordinates and datetime conversion"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Coordinates and datetime conversion"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="36">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using ProjNet.CoordinateSystems.Transformations;
using ProjNet.CoordinateSystems;
using ProjNet.IO.CoordinateSystems;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called once for every row that passes through the component from Input0.
    ///
    /// Example of reading a value from a column in the the row:
    ///  string zipCode = Row.ZipCode
    ///
    /// Example of writing a value to a column in the row:
    ///  Row.ZipCode = zipCode
    /// </summary>
    /// <param name="Row">The row that is currently passing through the component</param>
    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        /*
         * Add your code here
         */
        //double eastUtm = double.Parse(Row.eastutm);
        //double northutm = double.Parse(Row.northutm);

        Row.latitude = (decimal)ConvertUTMToLatLon((double)Row.eastutm, (double)Row.northutm).Item1;
        Row.longitude = (decimal)ConvertUTMToLatLon((double)Row.eastutm, (double)Row.northutm).Item2;

        Row.datetime = DateTimeOffset.FromUnixTimeSeconds(Row.unixtime).UtcDateTime;
    }

    private Tuple<double, double> ConvertUTMToLatLon(double easting, double northing)
    {
        // Definicje systemów współrzędnych dla UTM i WGS 84
        var utmZone32 = CoordinateSystemWktReader.Parse("PROJCS[\"WGS_1984_UTM_Zone_32N\",GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"False_Easting\",500000.0],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",9.0],PARAMETER[\"Scale_Factor\",0.9996],PARAMETER[\"Latitude_Of_Origin\",0.0],UNIT[\"Meter\",1.0]]");
        var wgs84 = GeographicCoordinateSystem.WGS84;

        // Inicjalizacja transformacji
        var ctFactory = new CoordinateTransformationFactory();
        var transformation = ctFactory.CreateFromCoordinateSystems((CoordinateSystem)utmZone32, wgs84);

        // Przekształć współrzędne
        double[] utmPoint = new double[] { easting, northing };
        double[] wgs84Point = transformation.MathTransform.Transform(utmPoint);

        // Odczytaj szerokość i długość geograficzną
        double latitude = wgs84Point[1];
        double longitude = wgs84Point[0];

        return new Tuple<double, double>(latitude, longitude);
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Int64 unixtime
    {
        get
        {
            return Buffer.GetInt64(BufferColumnIndexes[0]);
        }
    }
    public bool unixtime_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Decimal northutm
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[1]);
        }
    }
    public bool northutm_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Decimal eastutm
    {
        get
        {
            return Buffer.GetDecimal(BufferColumnIndexes[2]);
        }
    }
    public bool eastutm_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Decimal longitude
    {
        set
        {
            this[3] = value;
        }
    }
    public bool longitude_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal latitude
    {
        set
        {
            this[4] = value;
        }
    }
    public bool latitude_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime datetime
    {
        set
        {
            this[5] = value;
        }
    }
    public bool datetime_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a023c2541b684ecf9b2d30ba125fdbb6.Properties.Settings.get_Default():SC_a023c2541b684ecf9b2d30ba125fdbb6.Properties.Sett" +
    "ings")]

namespace SC_a023c2541b684ecf9b2d30ba125fdbb6.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_a023c2541b684ecf9b2d30ba125fdbb6.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{299637F4-4858-4469-80AD-0F44E8484866}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_a023c2541b684ecf9b2d30ba125fdbb6</RootNamespace>
    <AssemblyName>SC_a023c2541b684ecf9b2d30ba125fdbb6</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51" />
    <Reference Include="ProjNET, Version=2.0.0.0, Culture=neutral, PublicKeyToken=a1f5bdcd9c6f5740, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstaWFhPJ4kMQEmRppMPcYXMew\packages\ProjNET.2.0.0\lib\netstandard2.0\ProjNET.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Buffers, Version=4.0.2.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstaWFhPJ4kMQEmRppMPcYXMew\packages\System.Buffers.4.5.1\lib\net461\System.Buffers.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="System.Data" />
    <Reference Include="System.Memory, Version=4.0.1.2, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstaWFhPJ4kMQEmRppMPcYXMew\packages\System.Memory.4.5.5\lib\net461\System.Memory.dll</HintPath>
    </Reference>
    <Reference Include="System.Numerics" />
    <Reference Include="System.Numerics.Vectors, Version=4.1.4.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstaWFhPJ4kMQEmRppMPcYXMew\packages\System.Numerics.Vectors.4.5.0\lib\net46\System.Numerics.Vectors.dll</HintPath>
    </Reference>
    <Reference Include="System.Runtime.CompilerServices.Unsafe, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstaWFhPJ4kMQEmRppMPcYXMew\packages\System.Runtime.CompilerServices.Unsafe.6.0.0\lib\net461\System.Runtime.CompilerServices.Unsafe.dll</HintPath>
    </Reference>
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="app.config" />
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[app.config]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Numerics.Vectors" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.1.4.0" newVersion="4.1.4.0" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="System.Buffers" version="4.4.0" targetFramework="net472" />
</packages>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_a023c2541b684ecf9b2d30ba125fdbb6</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_a023c2541b684ecf9b2d30ba125fdbb6</msb:DisplayName>
    <msb:ProjectId>{1F6BF6A7-D718-42A6-A03A-71EA9EC84F02}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_a023c2541b684ecf9b2d30ba125fdbb6.csproj" />
    <msb:File Include="app.config" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_a023c2541b684ecf9b2d30ba125fdbb6")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_a023c2541b684ecf9b2d30ba125fdbb6")]
[assembly: AssemblyCopyright("Copyright @ HP 2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a023c2541b684ecf9b2d30ba125fdbb6.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a023c2541b684ecf9b2d30ba125fdbb6.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_a023c2541b684ecf9b2d30ba125fdbb6.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_a023c2541b684ecf9b2d30ba125fdbb6.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_a023c2541b684ecf9b2d30ba125fdbb6.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_a023c2541b684ecf9b2d30ba125fdbb6.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAAlmPmUAAAAAAAAAAOAAIiALATAAABwAAAAIAAAAAAAAqjoA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAFg6AABPAAAAAEAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAsBoAAAAgAAAAHAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAQAAAAAYAAAAeAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACM
OgAAAAAAAEgAAAACAAUACCMAAJgWAAABAAAAAAAAAKA5AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACioTMAQAdgAAAAEAABEDAgNvCwAA
BigSAAAKbANvCQAABigSAAAKbCgEAAAGbxMAAAooFAAACm8PAAAGAwIDbwsAAAYoEgAACmwDbwkA
AAYoEgAACmwoBAAABm8VAAAKKBQAAApvDQAABgMDbwcAAAYoFgAACgoSACgXAAAKbxEAAAYqAAAT
MAQAUQAAAAIAABFyAQAAcCgYAAAKCigZAAAKC3MaAAAKBnQjAAABB28bAAAKDBiNJAAAASUWA6El
FwShDQhvHAAACglvHQAACiUXmRMEFpkTBREEEQVzHgAACioeAigVAAAGKioCAwQFKB8AAAoqUgJ7
IAAACgJ7IQAAChaUbyIAAAoqIgIWKCMAAAoqUgJ7IAAACgJ7IQAACheUbyQAAAoqIgIXKCMAAAoq
UgJ7IAAACgJ7IQAAChiUbyQAAAoqIgIYKCMAAAoqOgIZA4wWAAABKCUAAAoqWgMsCAIZKCYAAAoq
ciQDAHBzJwAACno6AhoDjBYAAAEoJQAACipaAywIAhooJgAACipyJAMAcHMnAAAKejoCGwOMFwAA
ASglAAAKKloDLAgCGygmAAAKKnIkAwBwcycAAAp6HgIoKAAACioeAigpAAAKKn4CKCoAAAoCAnMZ
AAAGfQEAAAQCAnMaAAAGfQIAAAQqkgRywQMAcBpvKwAACiwVAgUCAygsAAAKDgRzBgAABm8XAAAG
KkorBwIDbxgAAAYDbxMAAAYt8SoGKjoCKC0AAAoCA30DAAAEKjoCKC0AAAoCA30EAAAEKh4CKC0A
AAoqrn4FAAAELR5y0QMAcNAHAAACKC4AAApvLwAACnMwAAAKgAUAAAR+BQAABCoafgYAAAQqHgKA
BgAABCoafgcAAAQqHgIoMQAACioucyAAAAaABwAABCoAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMw
MzE5AAAAAAUAbAAAACQHAAAjfgAAkAcAAGgIAAAjU3RyaW5ncwAAAAD4DwAARAQAACNVUwA8FAAA
EAAAACNHVUlEAAAATBQAAEwCAAAjQmxvYgAAAAAAAAACAAABVxWiCQkBAAAA+gEzABYAAAEAAAAr
AAAACAAAAAcAAAAhAAAAFQAAADEAAAAQAAAAAgAAAAMAAAAPAAAAEAAAAAEAAAABAAAABQAAAAEA
AAAAAI8DAQAAAAAABgBtAuYFBgABA+YFBgC5Ab8FDwBaBgAABgDmAfQEBgBQAvQEBgAxAvQEBgDo
AvQEBgCNAvQEBgCmAvQEBgD9AfQEBgAYAkUDCgDBAgABBgBnB1QEBgALAFQEDgAxBfQGDgBABPQG
DgCwBCoHCgCRBQABEgCCBQABCgBDBQABBgBxA1QEBgDdAFQECgC4BwABBgBgB1QEBgCcAb8FBgCi
BQYGBgA3Bd8EFgBsAXkDFgDNAXkDFgBOAcoEBgCBAeYFDgBbBdcGDgBGCCoHDgBKBPQGBgChAFQE
DgBfBCoHBgAGBVQEBgBfA1QEBgAgBVQEBgAhAVQEBgCoAFQEBgA9CPQEAAAAAFQAAAAAAAEAAQAB
ABAAkgQAABAAAQABAAEAEAB1BQAATQABAAYAAQAQAJoHAABhAAEAFQABABAAVAcAAGUAAwAZAAEA
EACYBgAAZQAEABoAAAAQAA0GaQZlAAUAGwAAARAAxwZpBn0ABwAfAAYAVAfsAAYAmAbwAAEAqAf0
AAEAqAf0ABEAhgT4ABEAPgH8ABEAdgAAAVAgAAAAAMYAHwMGAAEAWCAAAAAAxgAqAwYAAQBgIAAA
AADGABoIBAEBAOQgAAAAAIEAnQQKAQIAQSEAAAAAhhiyBQYABABJIQAAAACGGLIFgAAEAFQhAAAA
AIYI8wAVAQcAaSEAAAAAhgj0A6gABwByIQAAAACGCG0EGQEHAIchAAAAAIYICASoAAcAkCEAAAAA
hgh6BBkBBwClIQAAAACGCBwEqAAHAK4hAAAAAIYIhgAeAQcAvSEAAAAAhgi3AyQBCADUIQAAAACG
CJQAHgEJAOMhAAAAAIYIzAMkAQoA+iEAAAAAhgjmACkBCwAJIgAAAACGCOADJAEMACAiAAAAAIYA
MQioAA0AKCIAAAAAhgB2B6gADQAwIgAAAACGGLIFBgANAFAiAAAAAMYADQgvAQ0AdSIAAAAAxgEG
CAQBEQCIIgAAAADGARoIBAESAIoiAAAAAIYYsgU5ARMAmSIAAAAAhhiyBTkBFACoIgAAAACDGLIF
BgAVALAiAAAAAJMIngU/ARUA3CIAAAAAkwgmAUQBFQDjIgAAAACTCDIBSQEVAOsiAAAAAJYIjgdP
ARYA8iIAAAAAhhiyBQYAFgD6IgAAAACRGLgFVAEWAAAAAQA1CAAAAQBmAwAAAgA8AwAAAQCXBQAA
AgCiBgAAAwBRBQAAAQA2AwAAAQA2AwAAAQA2AwAAAQA2AwAAAQA2AwAAAQA2AwAAAQBdAAAAAgDM
AAAAAwCXBQAABABRBQAAAQCXBQAAAQA1CAAAAQC+BwAAAQC+BwAAAQA2AwkAsgUBABEAsgUGABkA
sgUKACkAsgUQADEAsgUQADkAsgUQAEEAsgUQAEkAsgUQAFEAsgUQAFkAsgUQAGEAsgUQAGkAsgUG
ANEAsgUGAPEAsgUVAAEBsgUGAMEAHwMGAMEAKgMGALEAggcgAAwAAQAtALEAggcyAAwAEwA4AHEA
0gU9AHEA1gBDAAkBZgFVAIkAJgBbABEBsgUGABEBDgdgAJEAWwRrACkBYwRxAAwAsgV4AJkAsgWA
AJkAlwWKAJkAogaOAKEAHQCSAJkAKASXAKEAbgOcAJkANwSiAJkALwQBADEBsgUQAJkAMQioAJkA
dgeoAMEAsgUGADkB0AasAMEAtga0AMkAsgUGAEkBugC6AEkBOQjDANkAsgXJAPkAsgUGAC4ACwB5
AS4AEwCCAS4AGwChAS4AIwCqAS4AKwDTAS4AMwDTAS4AOwDZAS4AQwCqAS4ASwDhAS4AUwDTAS4A
WwD6AUMAYwBEAuEAewBEAuMAawBEAqkBcwChAckBcwChARsASAADAAEABwANAAgADwAAAPcAWAEA
APgDXAEAAHEEYAEAAAwEXAEAAH4EYAEAACAEXAEAAIoAYAEAALsDXAEAAJgAYAEAANADXAEAAOoA
ZQEAAOQDXAEAAKIFagEAAEYBbwEAAJIHdAECAAcAAwACAAgABQACAAkABwACAAoACQACAAsACwAC
AAwADQABAA0ADwABAA4AEQABAA8AEwABABAAFQABABEAFwABABIAGQACABwAGwACAB0AHQABAB4A
HQACAB8AHwAmAASAAAABAAAAAAAAAAAAAAAAADAAAAAEAAAAAAAAAAAAAADRAG0AAAAAABAAAAAA
AAAAAAAAANoAyAcAAAAAAgAAAAAAAAAAAAAA4wBlAAAAAAAQAAAAAAAAAAAAAADaAOUHAAAAAAQA
AAAAAAAAAAAAANEAVAQAAAAAAAAAAAEAAAAXBgAAAAAAZ2V0X0l0ZW0xAFR1cGxlYDIAZ2V0X0l0
ZW0yAEdldEludDY0AGdldF9XR1M4NABTQ19hMDIzYzI1NDFiNjg0ZWNmOWIyZDMwYmExMjVmZGJi
NgA8TW9kdWxlPgBJbnB1dElEAFByb2pORVQAbXNjb3JsaWIAZGVmYXVsdEluc3RhbmNlAHNldF9s
b25naXR1ZGUAc2V0X2xhdGl0dWRlAERvdWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJv
bUhhbmRsZQBJbnB1dE5hbWUAZ2V0X1V0Y0RhdGVUaW1lAHNldF9kYXRldGltZQBnZXRfdW5peHRp
bWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAVHlwZQBnZXRfQ3VsdHVyZQBzZXRf
Q3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UAUGFyc2UARWRp
dG9yQnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25V
c2VyQ29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJp
YnV0ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRh
cmdldEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNz
ZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRl
AEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lT
U2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1
dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQB2
YWx1ZQBub3J0aGluZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN0cmluZwBlYXN0aW5nAEdl
dERlY2ltYWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNDX2EwMjNjMjU0MWI2ODRlY2Y5YjJkMzBi
YTEyNWZkYmI2LmRsbABzZXRfbG9uZ2l0dWRlX0lzTnVsbABzZXRfbGF0aXR1ZGVfSXNOdWxsAHNl
dF9kYXRldGltZV9Jc051bGwAZ2V0X3VuaXh0aW1lX0lzTnVsbABnZXRfbm9ydGh1dG1fSXNOdWxs
AGdldF9lYXN0dXRtX0lzTnVsbABTZXROdWxsAHNldF9JdGVtAEdlb2dyYXBoaWNDb29yZGluYXRl
U3lzdGVtAGdldF9NYXRoVHJhbnNmb3JtAGdldF9ub3J0aHV0bQBnZXRfZWFzdHV0bQByZXNvdXJj
ZU1hbgBTY3JpcHRNYWluAENvbnZlcnRVVE1Ub0xhdExvbgBJQ29vcmRpbmF0ZVRyYW5zZm9ybWF0
aW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZs
ZWN0aW9uAEludmFsaWRPcGVyYXRpb25FeGNlcHRpb24AU3RyaW5nQ29tcGFyaXNvbgBJSW5mbwBD
dWx0dXJlSW5mbwBPdXRwdXROYW1lTWFwAE91dHB1dE1hcABDb29yZGluYXRlU3lzdGVtV2t0UmVh
ZGVyAElucHV0MEJ1ZmZlcgBQaXBlbGluZUJ1ZmZlcgBTY3JpcHRCdWZmZXIAZ2V0X1Jlc291cmNl
TWFuYWdlcgAuY3RvcgAuY2N0b3IAU3lzdGVtLkRpYWdub3N0aWNzAEZyb21Vbml4VGltZVNlY29u
ZHMAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNDX2Ew
MjNjMjU0MWI2ODRlY2Y5YjJkMzBiYTEyNWZkYmI2LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291
cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTQ19hMDIzYzI1NDFiNjg0ZWNmOWIyZDMwYmExMjVmZGJiNi5Q
cm9wZXJ0aWVzAFZhcmlhYmxlcwBCdWZmZXJDb2x1bW5JbmRleGVzAEdldENvbHVtbkluZGV4ZXMA
U2V0dGluZ3MARXF1YWxzAFByb2pOZXQuSU8uQ29vcmRpbmF0ZVN5c3RlbXMAUHJvak5ldC5Db29y
ZGluYXRlU3lzdGVtcwBDcmVhdGVGcm9tQ29vcmRpbmF0ZVN5c3RlbXMAUHJvak5ldC5Db29yZGlu
YXRlU3lzdGVtcy5UcmFuc2Zvcm1hdGlvbnMAQ29ubmVjdGlvbnMAT2JqZWN0AERhdGVUaW1lT2Zm
c2V0AEVuZE9mUm93c2V0AG9wX0V4cGxpY2l0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFy
ZW50Q29tcG9uZW50AFNjcmlwdENvbXBvbmVudABNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AElucHV0MF9Qcm9jZXNzSW5wdXQASW5w
dXQwX1Byb2Nlc3NJbnB1dFJvdwBOZXh0Um93AGdldF9Bc3NlbWJseQBDb29yZGluYXRlVHJhbnNm
b3JtYXRpb25GYWN0b3J5AAAAAIMhUABSAE8ASgBDAFMAWwAiAFcARwBTAF8AMQA5ADgANABfAFUA
VABNAF8AWgBvAG4AZQBfADMAMgBOACIALABHAEUATwBHAEMAUwBbACIARwBDAFMAXwBXAEcAUwBf
ADEAOQA4ADQAIgAsAEQAQQBUAFUATQBbACIARABfAFcARwBTAF8AMQA5ADgANAAiACwAUwBQAEgA
RQBSAE8ASQBEAFsAIgBXAEcAUwBfADEAOQA4ADQAIgAsADYAMwA3ADgAMQAzADcALgAwACwAMgA5
ADgALgAyADUANwAyADIAMwA1ADYAMwBdAF0ALABQAFIASQBNAEUATQBbACIARwByAGUAZQBuAHcA
aQBjAGgAIgAsADAALgAwAF0ALABVAE4ASQBUAFsAIgBEAGUAZwByAGUAZQAiACwAMAAuADAAMQA3
ADQANQAzADIAOQAyADUAMQA5ADkANAAzADMAXQBdACwAUABSAE8ASgBFAEMAVABJAE8ATgBbACIA
VAByAGEAbgBzAHYAZQByAHMAZQBfAE0AZQByAGMAYQB0AG8AcgAiAF0ALABQAEEAUgBBAE0ARQBU
AEUAUgBbACIARgBhAGwAcwBlAF8ARQBhAHMAdABpAG4AZwAiACwANQAwADAAMAAwADAALgAwAF0A
LABQAEEAUgBBAE0ARQBUAEUAUgBbACIARgBhAGwAcwBlAF8ATgBvAHIAdABoAGkAbgBnACIALAAw
AC4AMABdACwAUABBAFIAQQBNAEUAVABFAFIAWwAiAEMAZQBuAHQAcgBhAGwAXwBNAGUAcgBpAGQA
aQBhAG4AIgAsADkALgAwAF0ALABQAEEAUgBBAE0ARQBUAEUAUgBbACIAUwBjAGEAbABlAF8ARgBh
AGMAdABvAHIAIgAsADAALgA5ADkAOQA2AF0ALABQAEEAUgBBAE0ARQBUAEUAUgBbACIATABhAHQA
aQB0AHUAZABlAF8ATwBmAF8ATwByAGkAZwBpAG4AIgAsADAALgAwAF0ALABVAE4ASQBUAFsAIgBN
AGUAdABlAHIAIgAsADEALgAwAF0AXQAAgJtJAHMATgB1AGwAbAAgAHAAcgBvAHAAZQByAHQAeQAg
AGMAYQBuAG4AbwB0ACAAYgBlACAAcwBlAHQAIAB0AG8AIABGAGEAbABzAGUALgAgAEEAcwBzAGkA
ZwBuACAAYQAgAHYAYQBsAHUAZQAgAHQAbwAgAHQAaABlACAAYwBvAGwAdQBtAG4AIABpAG4AcwB0
AGUAYQBkAC4AAA9JAG4AcAB1AHQAIAAwAABxUwBDAF8AYQAwADIAMwBjADIANQA0ADEAYgA2ADgA
NABlAGMAZgA5AGIAMgBkADMAMABiAGEAMQAyADUAZgBkAGIAYgA2AC4AUAByAG8AcABlAHIAdABp
AGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAA3SNmX/8Y1EKgydWBQfkN0AAEIAEBCAMgAAEFIAEB
EREEIAEBDgUgAQERdQQHARE5BQABDRFZBhUSPQINDQQgABMABQABEVkNBCAAEwEFAAEROQoEIAAR
XQwHBhJBEkUSSR0NDQ0FAAESQQ4EAAASRQogAhJJEoCNEoCNBSAAEoCVBiABHQ0dDQcgAgETABMB
CSADARJRHQgSVQMGElEDBh0IBCABCggEIAECCAUgARFZCAUgAgEIHAMgAAIHIAICDhGAoQUgAR0I
CAgAARKApRGAqQUgABKArQcgAgEOEoCtCLd6XFYZNOCJCImEXc2AgMyRCKH1vc2cb1dAAwYSFAMG
EhgDBhJhAwYSbQMGEnEDBhIgBSABARIMCiACFRI9Ag0NDQ0DIAAKBCAAEVkFIAEBEVkEIAEBAgUg
AQERXQkgBAEIDhJRElUFIAEBEmEEAAASbQQAABJxBQABARJxBAAAEiADAAABAygACgMoAAIEKAAR
WQQoABFdBAgAEm0ECAAScQQIABIgCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhy
b3dzAQgBAAIAAAAAACgBACNTQ19hMDIzYzI1NDFiNjg0ZWNmOWIyZDMwYmExMjVmZGJiNgAABQEA
AAAABwEAAkhQAAAYAQATQ29weXJpZ2h0IEAgSFAgMjAyMwAASQEAGi5ORVRGcmFtZXdvcmssVmVy
c2lvbj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcEAQAA
AAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNj
b3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1i
NzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAA
AAAAAAAAUEFEUEFEULQAAACAOgAAAAAAAAAAAACaOgAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
jDoAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAAPQDAAAAAAAAAAAAAPQDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsARUAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAwAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAJgADAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAABIAFAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAEMAXwBhADAAMgAzAGMAMgA1ADQAMQBiADYAOAA0AGUAYwBmADkAYgAyAGQAMwAwAGIAYQAx
ADIANQBmAGQAYgBiADYAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
MAAuADAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfAGEAMAAyADMAYwAy
ADUANAAxAGIANgA4ADQAZQBjAGYAOQBiADIAZAAzADAAYgBhADEAMgA1AGYAZABiAGIANgAuAGQA
bABsAAAATAAUAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBo
AHQAIABAACAASABQACAAMgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIA
awBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBf
AGEAMAAyADMAYwAyADUANAAxAGIANgA4ADQAZQBjAGYAOQBiADIAZAAzADAAYgBhADEAMgA1AGYA
ZABiAGIANgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwBh
ADAAMgAzAGMAMgA1ADQAMQBiADYAOAA0AGUAYwBmADkAYgAyAGQAMwAwAGIAYQAxADIANQBmAGQA
YgBiADYAAAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAw
AAAAOAAIAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACsOgAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_a023c2541b684ecf9b2d30ba125fdbb6</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">08</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Hannover Data Flow\Coordinates and datetime conversion.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Hannover Data Flow\Coordinates and datetime conversion.Inputs[Input 0].Columns[unixtime]"
                      cachedDataType="i8"
                      cachedName="unixtime"
                      lineageId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output].Columns[unixtime]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\Coordinates and datetime conversion.Inputs[Input 0].Columns[north_utm]"
                      cachedDataType="numeric"
                      cachedName="north_utm"
                      cachedPrecision="38"
                      lineageId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output].Columns[north_utm]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\Coordinates and datetime conversion.Inputs[Input 0].Columns[east_utm]"
                      cachedDataType="numeric"
                      cachedName="east_utm"
                      cachedPrecision="38"
                      lineageId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output].Columns[east_utm]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Hannover Data Flow\Coordinates and datetime conversion.Outputs[Output 0]"
                  name="Output 0"
                  synchronousInputId="Package\Hannover Data Flow\Coordinates and datetime conversion.Inputs[Input 0]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Hannover Data Flow\Coordinates and datetime conversion.Outputs[Output 0].Columns[longitude]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Coordinates and datetime conversion.Outputs[Output 0].Columns[longitude]"
                      name="longitude" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Coordinates and datetime conversion.Outputs[Output 0].Columns[latitude]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Coordinates and datetime conversion.Outputs[Output 0].Columns[latitude]"
                      name="latitude" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Coordinates and datetime conversion.Outputs[Output 0].Columns[datetime]"
                      dataType="date"
                      lineageId="Package\Hannover Data Flow\Coordinates and datetime conversion.Outputs[Output 0].Columns[datetime]"
                      name="datetime" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Hannover Data Flow\CosmosDB Destination"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="KingswaySoft Inc.; http://www.kingswaysoft.com; support@kingswaysoft.com; Copyright (c) 2021 KingswaySoft Inc."
              description="Write data to a CosmosDB database."
              name="CosmosDB Destination"
              usesDispositions="true"
              validateExternalMetadata="False"
              version="2">
              <properties>
                <property
                  dataType="System.String"
                  name="Design">[{"NodeType":2,"SourceType":"Input","InputOrColumnName":"Root","Children":[{"NodeName":"id","NodeType":3,"SourceType":"Column","InputOrColumnName":"id"},{"NodeName":"IdInFile","NodeType":3,"SourceType":"Column","InputOrColumnName":"IdInFile"},{"NodeName":"StartDate","NodeType":3,"SourceType":"Column","InputOrColumnName":"StartDate"},{"NodeName":"EndDate","NodeType":3,"SourceType":"Column","InputOrColumnName":"EndDate"},{"NodeName":"AverageSpeed","NodeType":3,"SourceType":"Column","InputOrColumnName":"AverageSpeed"},{"NodeName":"Duration","NodeType":3,"SourceType":"Column","InputOrColumnName":"Duration"},{"NodeName":"Length","NodeType":3,"SourceType":"Column","InputOrColumnName":"Length"},{"NodeName":"city","NodeType":3,"SourceType":"Column","InputOrColumnName":"city"},{"NodeName":"Weather","NodeType":2,"SourceType":"None","Children":[{"NodeName":"Temperature","NodeType":3,"SourceType":"Column","InputOrColumnName":"Temperature"},{"NodeName":"AirPressure","NodeType":3,"SourceType":"Column","InputOrColumnName":"AirPressure"},{"NodeName":"Humidity","NodeType":3,"SourceType":"Column","InputOrColumnName":"Humidity"},{"NodeName":"WindSpeed","NodeType":3,"SourceType":"Column","InputOrColumnName":"WindSpeed"},{"NodeName":"WindDirection","NodeType":3,"SourceType":"Column","InputOrColumnName":"WindDirection"},{"NodeName":"Precipitation","NodeType":3,"SourceType":"Column","InputOrColumnName":"Precipitation"},{"NodeName":"PrecipitationDuration","NodeType":3,"SourceType":"Column","InputOrColumnName":"PrecipitationDuration"}]},{"NodeName":"FuelPrice","NodeType":2,"SourceType":"None","Children":[{"NodeName":"GasolinePrice","NodeType":3,"SourceType":"Column","InputOrColumnName":"GasolinePrice"},{"NodeName":"DieselPrice","NodeType":3,"SourceType":"Column","InputOrColumnName":"DieselPrice"}]},{"NodeName":"CountryPopulation","NodeType":2,"SourceType":"None","Children":[{"NodeName":"Total","NodeType":3,"SourceType":"Column","InputOrColumnName":"Total"},{"NodeName":"MalePercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"MalePercentage"},{"NodeName":"FemalePercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"FemalePercentage"},{"NodeName":"Density","NodeType":3,"SourceType":"Column","InputOrColumnName":"Density"},{"NodeName":"UrbanPercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"UrbanPercentage"},{"NodeName":"RuralPercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"RuralPercentage"},{"NodeName":"Age0-14Percentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"Age0-14Percentage"},{"NodeName":"Age15-64Percentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"Age15-64Percentage"},{"NodeName":"Age65+Percentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"Age65+Percentage"},{"NodeName":"MortalityInRoadTrafficPer100000","NodeType":3,"SourceType":"Column","InputOrColumnName":"MortalityInRoadTrafficPer100000"}]},{"NodeName":"Economic","NodeType":2,"SourceType":"None","Children":[{"NodeName":"GDPPerCapitaConstantLCU","NodeType":3,"SourceType":"Column","InputOrColumnName":"GDPPerCapitaConstantLCU"},{"NodeName":"GDPPerCapitaCurrentLCU","NodeType":3,"SourceType":"Column","InputOrColumnName":"GDPPerCapitaCurrentLCU"},{"NodeName":"Inflation","NodeType":3,"SourceType":"Column","InputOrColumnName":"Inflation"},{"NodeName":"UneploymentNationalEstimate","NodeType":3,"SourceType":"Column","InputOrColumnName":"UneploymentNationalEstimate"},{"NodeName":"UneploymentModeledILOEstimate","NodeType":3,"SourceType":"Column","InputOrColumnName":"UneploymentModeledILOEstimate"},{"NodeName":"DeparturesInInternationalTourism","NodeType":3,"SourceType":"Column","InputOrColumnName":"DeparturesInInternationalTourism"},{"NodeName":"ArrivalsInInternationalTourism","NodeType":3,"SourceType":"Column","InputOrColumnName":"ArrivalsInInternationalTourism"}]},{"NodeName":"Points","NodeType":1,"SourceType":"Input","InputOrColumnName":"Points","Children":[{"NodeType":2,"SourceType":"None","Children":[{"NodeName":"Latitude","NodeType":3,"SourceType":"Column","InputOrColumnName":"Latitude"},{"NodeName":"Longitude","NodeType":3,"SourceType":"Column","InputOrColumnName":"Longitude"},{"NodeName":"Timestamp","NodeType":3,"SourceType":"Column","InputOrColumnName":"Timestamp"},{"NodeName":"Region","NodeType":2,"SourceType":"None","Children":[{"NodeName":"Name","NodeType":3,"SourceType":"Column","InputOrColumnName":"Name"},{"NodeName":"ParentName","NodeType":3,"SourceType":"Column","InputOrColumnName":"ParentName"},{"NodeName":"Area","NodeType":3,"SourceType":"Column","InputOrColumnName":"Area"},{"NodeName":"Population","NodeType":3,"SourceType":"Column","InputOrColumnName":"Population"},{"NodeName":"Density","NodeType":3,"SourceType":"Column","InputOrColumnName":"Density"}]}]}]}]}]</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies if the linkId &amp; parentLinkId values used for merging child &amp; parent inputs are scrambled (true) or grouped (false)."
                  expressionType="Notify"
                  name="LinkIdsAreScrambled">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how to write null values in the merged document."
                  expressionType="Notify"
                  name="NullMode"
                  typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.JsonMergeNullMode">2</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how to write empty arrays in the merged document."
                  expressionType="Notify"
                  name="EmptyArrayMode"
                  typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.JsonEmptyArrayMode">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how to write empty objects in the merged document."
                  expressionType="Notify"
                  name="EmptyObjectMode"
                  typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.JsonEmptyObjectMode">1</property>
                <property
                  dataType="System.String"
                  description="Specifies the text qualifier to use when splitting values to be repeated in the final document."
                  expressionType="Notify"
                  name="IsRepeatedTextQualifier">Double-Quote ( " )</property>
                <property
                  dataType="System.String"
                  description="Specifies the text qualifier to use when splitting values to be repeated in the final document."
                  expressionType="Notify"
                  name="IsRepeatedTextDelimiter">Comma ( , )</property>
                <property
                  dataType="System.String"
                  description="The CosmosDB Database to write to."
                  expressionType="Notify"
                  name="Database">Trajectories</property>
                <property
                  dataType="System.String"
                  description="The CosmosDB Container to write to."
                  expressionType="Notify"
                  name="Container">Trajectories</property>
                <property
                  dataType="System.Int32"
                  description="Specifies which action to perform when writing to CosmosDB Items"
                  expressionType="Notify"
                  name="Action"
                  typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.CosmosDbAction">1</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies to send items as raw text from a DT_NTEXT column."
                  name="InputAsRawText">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the consistency level required for the request in the Azure Cosmos DB service."
                  expressionType="Notify"
                  name="ConsistencyLevel"
                  typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.CosmosDbConsistencyLevel">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the indexing directive (Include or Exclude) for the request in the Azure Cosmos DB service."
                  expressionType="Notify"
                  name="IndexingDirective"
                  typeConverter="Microsoft.Azure.Cosmos.IndexingDirective">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies the maximum number of items that can be sent client side during parallel execution in the Azure Cosmos DB service. A positive property value limits the number of sent items to the set value. If it is set to 0, the system automatically decides the number of items to send."
                  expressionType="Notify"
                  name="MaxDegreeOfParallelism">1</property>
                <property
                  dataType="System.String"
                  description="Specifies the trigger to be invoked after the operation in the Azure Cosmos DB service."
                  expressionType="Notify"
                  name="PostTriggerInclude"></property>
                <property
                  dataType="System.String"
                  description="Specifies the trigger to be invoked before the operation in the Azure Cosmos DB service."
                  expressionType="Notify"
                  name="PreTriggerInclude"></property>
                <property
                  dataType="System.String"
                  description="Specifies the token for use with session consistency in the Azure Cosmos DB service."
                  expressionType="Notify"
                  name="SessionToken"></property>
                <property
                  dataType="System.String"
                  description="Specifies the If-Match (ETag) associated with the request in the Azure Cosmos DB service."
                  expressionType="Notify"
                  name="IfMatchEtag"></property>
                <property
                  dataType="System.String"
                  description="Specifies the If-None-Match (ETag) associated with the request in the Azure Cosmos DB service."
                  expressionType="Notify"
                  name="IfNoneMatchEtag"></property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">KingswaySoft.IntegrationToolkit.ProductivityPack.CosmosDbDestinationComponent</property>
                <property
                  dataType="System.Int32"
                  name="Encoding">65001</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Hannover Data Flow\CosmosDB Destination.Connections[CosmosDB (KingswaySoft)]"
                  connectionManagerID="Package.ConnectionManagers[CosmosDB Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[CosmosDB Connection Manager]"
                  description="CosmosDB Connection Manager"
                  name="CosmosDB (KingswaySoft)" />
              </connections>
              <inputs>
                <input
                  refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="RedirectRow"
                  hasSideEffects="true"
                  name="Root">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="ParentId"
                      name="ParentId">#{Package\Hannover Data Flow\-1:invalid}</property>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="ParentColumnId"
                      name="ParentColumnId">#{Package\Hannover Data Flow\-1:invalid}</property>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="IdField"
                      name="IdField">#{Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[_LinkId]}</property>
                  </properties>
                  <inputColumns>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[Length]"
                      cachedDataType="decimal"
                      cachedName="Length"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Length]"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[Length]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[Length]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[Length]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[Duration]"
                      cachedDataType="decimal"
                      cachedName="Duration"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Duration]"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[Duration]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[Duration]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[Duration]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[AverageSpeed]"
                      cachedDataType="decimal"
                      cachedName="AverageSpeed"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[AverageSpeed]"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[AverageSpeed]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[AverageSpeed]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[AverageSpeed]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[EndDate]"
                      cachedDataType="date"
                      cachedName="EndDate"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[EndDate]"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[EndDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[EndDate]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[EndDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[TrajectoryId]"
                      cachedDataType="i4"
                      cachedName="TrajectoryId"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[_LinkId]"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[TrajectoryId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[TrajectoryId]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[TrajectoryId]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[IdInFile]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="IdInFile"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[IdInFile]"
                      lineageId="Package\Hannover Data Flow\IdInFile and city columns.Outputs[Derived Column Output].Columns[IdInFile]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[IdInFile]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[IdInFile]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[City]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="City"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[city]"
                      lineageId="Package\Hannover Data Flow\IdInFile and city columns.Outputs[Derived Column Output].Columns[City]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[City]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[City]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[CosomosDbId]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="CosomosDbId"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[id]"
                      lineageId="Package\Hannover Data Flow\Add CosmosDbId field.Outputs[Derived Column Output].Columns[CosomosDbId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[CosomosDbId]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[CosomosDbId]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[AirPressure]"
                      cachedDataType="decimal"
                      cachedName="AirPressure"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[AirPressure]"
                      lineageId="Package\Hannover Data Flow\Add temperature, air pressure and humidity.Outputs[Output 0].Columns[AirPressure]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[AirPressure]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[AirPressure]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[Humidity]"
                      cachedDataType="decimal"
                      cachedName="Humidity"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Humidity]"
                      lineageId="Package\Hannover Data Flow\Add temperature, air pressure and humidity.Outputs[Output 0].Columns[Humidity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[Humidity]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[Humidity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[WindDirection]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="WindDirection"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[WindDirection]"
                      lineageId="Package\Hannover Data Flow\Add wind speed and direction.Outputs[Output 0].Columns[WindDirection]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[WindDirection]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[WindDirection]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[WindSpeed]"
                      cachedDataType="decimal"
                      cachedName="WindSpeed"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[WindSpeed]"
                      lineageId="Package\Hannover Data Flow\Add wind speed and direction.Outputs[Output 0].Columns[WindSpeed]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[WindSpeed]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[WindSpeed]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[Precipitation]"
                      cachedDataType="decimal"
                      cachedName="Precipitation"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Precipitation]"
                      lineageId="Package\Hannover Data Flow\Add precipitation.Outputs[Output 0].Columns[Precipitation]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[Precipitation]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[Precipitation]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[GasolinePrice]"
                      cachedDataType="decimal"
                      cachedName="GasolinePrice"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[GasolinePrice]"
                      lineageId="Package\Hannover Data Flow\Add fuel prices.Outputs[Output 0].Columns[GasolinePrice]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[GasolinePrice]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[GasolinePrice]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[DieselPrice]"
                      cachedDataType="decimal"
                      cachedName="DieselPrice"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[DieselPrice]"
                      lineageId="Package\Hannover Data Flow\Add fuel prices.Outputs[Output 0].Columns[DieselPrice]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[DieselPrice]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[DieselPrice]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[PrecipitationDuration]"
                      cachedDataType="decimal"
                      cachedName="PrecipitationDuration"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[PrecipitationDuration]"
                      lineageId="Package\Hannover Data Flow\Add precipitation.Outputs[Output 0].Columns[PrecipitationDuration]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[PrecipitationDuration]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[PrecipitationDuration]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[StartDate]"
                      cachedDataType="date"
                      cachedName="StartDate"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[StartDate]"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[StartDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[StartDate]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[StartDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[Temperature]"
                      cachedDataType="decimal"
                      cachedName="Temperature"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Temperature]"
                      lineageId="Package\Hannover Data Flow\Add temperature, air pressure and humidity.Outputs[Output 0].Columns[Temperature]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[Temperature]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[Temperature]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[ArrivalsInInternationalTourism]"
                      cachedDataType="i4"
                      cachedName="ArrivalsInInternationalTourism"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[ArrivalsInInternationalTourism]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[ArrivalsInInternationalTourism]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[ArrivalsInInternationalTourism]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[ArrivalsInInternationalTourism]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[DeparturesInInternationalTourism]"
                      cachedDataType="i4"
                      cachedName="DeparturesInInternationalTourism"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[DeparturesInInternationalTourism]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[DeparturesInInternationalTourism]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[DeparturesInInternationalTourism]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[DeparturesInInternationalTourism]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[UneploymentModeledILOEstimate]"
                      cachedDataType="decimal"
                      cachedName="UneploymentModeledILOEstimate"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[UneploymentModeledILOEstimate]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[UneploymentModeledILOEstimate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[UneploymentModeledILOEstimate]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[UneploymentModeledILOEstimate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[UneploymentNationalEstimate]"
                      cachedDataType="decimal"
                      cachedName="UneploymentNationalEstimate"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[UneploymentNationalEstimate]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[UneploymentNationalEstimate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[UneploymentNationalEstimate]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[UneploymentNationalEstimate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[Inflation]"
                      cachedDataType="decimal"
                      cachedName="Inflation"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Inflation]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[Inflation]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[Inflation]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[Inflation]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[GDPPerCapitaCurrentLCU]"
                      cachedDataType="decimal"
                      cachedName="GDPPerCapitaCurrentLCU"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[GDPPerCapitaCurrentLCU]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[GDPPerCapitaCurrentLCU]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[GDPPerCapitaCurrentLCU]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[GDPPerCapitaCurrentLCU]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[GDPPerCapitaConstantLCU]"
                      cachedDataType="decimal"
                      cachedName="GDPPerCapitaConstantLCU"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[GDPPerCapitaConstantLCU]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[GDPPerCapitaConstantLCU]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[GDPPerCapitaConstantLCU]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[GDPPerCapitaConstantLCU]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[MortalityInRoadTrafficPer100000]"
                      cachedDataType="decimal"
                      cachedName="MortalityInRoadTrafficPer100000"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[MortalityInRoadTrafficPer100000]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[MortalityInRoadTrafficPer100000]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[MortalityInRoadTrafficPer100000]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[MortalityInRoadTrafficPer100000]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[Age65+Percentage]"
                      cachedDataType="decimal"
                      cachedName="Age65+Percentage"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Age65+Percentage]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[Age65+Percentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[Age65+Percentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[Age65+Percentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[Age15-64Percentage]"
                      cachedDataType="decimal"
                      cachedName="Age15-64Percentage"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Age15-64Percentage]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[Age15-64Percentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[Age15-64Percentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[Age15-64Percentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[Age0-14Percentage]"
                      cachedDataType="decimal"
                      cachedName="Age0-14Percentage"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Age0-14Percentage]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[Age0-14Percentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[Age0-14Percentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[Age0-14Percentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[RuralPercentage]"
                      cachedDataType="decimal"
                      cachedName="RuralPercentage"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[RuralPercentage]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[RuralPercentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[RuralPercentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[RuralPercentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[UrbanPercentage]"
                      cachedDataType="decimal"
                      cachedName="UrbanPercentage"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[UrbanPercentage]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[UrbanPercentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[UrbanPercentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[UrbanPercentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[CountryDensity]"
                      cachedDataType="decimal"
                      cachedName="CountryDensity"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Density]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[CountryDensity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[CountryDensity]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[CountryDensity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[FemalePercentage]"
                      cachedDataType="decimal"
                      cachedName="FemalePercentage"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[FemalePercentage]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[FemalePercentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[FemalePercentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[FemalePercentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[MalePercentage]"
                      cachedDataType="decimal"
                      cachedName="MalePercentage"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[MalePercentage]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[MalePercentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[MalePercentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[MalePercentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].Columns[TotalPopulation]"
                      cachedDataType="i4"
                      cachedName="TotalPopulation"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Total]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[TotalPopulation]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[TotalPopulation]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[TotalPopulation]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[_LinkId]"
                      dataType="wstr"
                      length="255"
                      name="_LinkId" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[id]"
                      dataType="wstr"
                      length="50"
                      name="id" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[IdInFile]"
                      dataType="wstr"
                      length="50"
                      name="IdInFile" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[StartDate]"
                      dataType="dbTimeStamp"
                      name="StartDate" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[EndDate]"
                      dataType="dbTimeStamp"
                      name="EndDate" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[AverageSpeed]"
                      dataType="decimal"
                      name="AverageSpeed" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Duration]"
                      dataType="decimal"
                      name="Duration" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Length]"
                      dataType="decimal"
                      name="Length" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[city]"
                      dataType="wstr"
                      length="50"
                      name="city" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Temperature]"
                      dataType="decimal"
                      name="Temperature" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[AirPressure]"
                      dataType="decimal"
                      name="AirPressure" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Humidity]"
                      dataType="decimal"
                      name="Humidity" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[WindSpeed]"
                      dataType="decimal"
                      name="WindSpeed" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[WindDirection]"
                      dataType="wstr"
                      length="50"
                      name="WindDirection" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Precipitation]"
                      dataType="decimal"
                      name="Precipitation" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[PrecipitationDuration]"
                      dataType="decimal"
                      name="PrecipitationDuration" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[GasolinePrice]"
                      dataType="decimal"
                      name="GasolinePrice" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[DieselPrice]"
                      dataType="decimal"
                      name="DieselPrice" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Total]"
                      dataType="i8"
                      name="Total" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[MalePercentage]"
                      dataType="decimal"
                      name="MalePercentage" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[FemalePercentage]"
                      dataType="decimal"
                      name="FemalePercentage" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Density]"
                      dataType="decimal"
                      name="Density" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[UrbanPercentage]"
                      dataType="decimal"
                      name="UrbanPercentage" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[RuralPercentage]"
                      dataType="decimal"
                      name="RuralPercentage" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Age0-14Percentage]"
                      dataType="decimal"
                      name="Age0-14Percentage" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Age15-64Percentage]"
                      dataType="decimal"
                      name="Age15-64Percentage" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Age65+Percentage]"
                      dataType="decimal"
                      name="Age65+Percentage" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[MortalityInRoadTrafficPer100000]"
                      dataType="decimal"
                      name="MortalityInRoadTrafficPer100000" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[GDPPerCapitaConstantLCU]"
                      dataType="decimal"
                      name="GDPPerCapitaConstantLCU" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[GDPPerCapitaCurrentLCU]"
                      dataType="decimal"
                      name="GDPPerCapitaCurrentLCU" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[Inflation]"
                      dataType="decimal"
                      name="Inflation" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[UneploymentNationalEstimate]"
                      dataType="decimal"
                      name="UneploymentNationalEstimate" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[UneploymentModeledILOEstimate]"
                      dataType="decimal"
                      name="UneploymentModeledILOEstimate" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[DeparturesInInternationalTourism]"
                      dataType="i8"
                      name="DeparturesInInternationalTourism" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root].ExternalColumns[ArrivalsInInternationalTourism]"
                      dataType="i8"
                      name="ArrivalsInInternationalTourism" />
                  </externalMetadataColumns>
                </input>
                <input
                  refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="Points">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="ParentId"
                      name="ParentId">#{Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root]}</property>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="ParentColumnId"
                      name="ParentColumnId">#{Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[_Root.LinkId]}</property>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="IdField"
                      name="IdField">#{Package\Hannover Data Flow\-1:invalid}</property>
                  </properties>
                  <inputColumns>
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].Columns[gid]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="gid"
                      lineageId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output].Columns[gid]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].Columns[trip_id]"
                      cachedDataType="i4"
                      cachedName="trip_id"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[_Root.LinkId]"
                      lineageId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output].Columns[trip_id]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].Columns[unixtime]"
                      cachedDataType="i8"
                      cachedName="unixtime"
                      lineageId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output].Columns[unixtime]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].Columns[north_utm]"
                      cachedDataType="numeric"
                      cachedName="north_utm"
                      cachedPrecision="38"
                      lineageId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output].Columns[north_utm]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].Columns[east_utm]"
                      cachedDataType="numeric"
                      cachedName="east_utm"
                      cachedPrecision="38"
                      lineageId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output].Columns[east_utm]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].Columns[longitude]"
                      cachedDataType="decimal"
                      cachedName="longitude"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[Longitude]"
                      lineageId="Package\Hannover Data Flow\Coordinates and datetime conversion.Outputs[Output 0].Columns[longitude]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].Columns[latitude]"
                      cachedDataType="decimal"
                      cachedName="latitude"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[Latitude]"
                      lineageId="Package\Hannover Data Flow\Coordinates and datetime conversion.Outputs[Output 0].Columns[latitude]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].Columns[datetime]"
                      cachedDataType="date"
                      cachedName="datetime"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[Timestamp]"
                      lineageId="Package\Hannover Data Flow\Coordinates and datetime conversion.Outputs[Output 0].Columns[datetime]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].Columns[RegionArea]"
                      cachedDataType="decimal"
                      cachedName="RegionArea"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[Area]"
                      lineageId="Package\Hannover Data Flow\Add region.Outputs[Output 0].Columns[RegionArea]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].Columns[ParentRegionName]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="ParentRegionName"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[ParentName]"
                      lineageId="Package\Hannover Data Flow\Add region.Outputs[Output 0].Columns[ParentRegionName]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].Columns[RegionName]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="RegionName"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[Name]"
                      lineageId="Package\Hannover Data Flow\Add region.Outputs[Output 0].Columns[RegionName]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].Columns[RegionPopulation]"
                      cachedDataType="i4"
                      cachedName="RegionPopulation"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[Population]"
                      lineageId="Package\Hannover Data Flow\Add region.Outputs[Output 0].Columns[RegionPopulation]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].Columns[RegionDensity]"
                      cachedDataType="decimal"
                      cachedName="RegionDensity"
                      externalMetadataColumnId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[Density]"
                      lineageId="Package\Hannover Data Flow\Add region.Outputs[Output 0].Columns[RegionDensity]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[_Root.LinkId]"
                      dataType="wstr"
                      length="255"
                      name="_Root.LinkId" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[Latitude]"
                      dataType="decimal"
                      name="Latitude" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[Longitude]"
                      dataType="decimal"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[Timestamp]"
                      dataType="dbTimeStamp"
                      name="Timestamp" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[Name]"
                      dataType="wstr"
                      length="50"
                      name="Name" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[ParentName]"
                      dataType="wstr"
                      length="50"
                      name="ParentName" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[Area]"
                      dataType="decimal"
                      name="Area" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[Population]"
                      dataType="i8"
                      name="Population" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points].ExternalColumns[Density]"
                      dataType="decimal"
                      name="Density" />
                  </externalMetadataColumns>
                </input>
                <input
                  refId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[&lt;Create New Input&gt;]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="&lt;Create New Input&gt;">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="ParentId"
                      name="ParentId">-1</property>
                    <property
                      dataType="System.Int32"
                      description="ParentColumnId"
                      name="ParentColumnId">-1</property>
                    <property
                      dataType="System.Int32"
                      description="IdField"
                      name="IdField">-1</property>
                  </properties>
                  <externalMetadataColumns
                    isUsed="True" />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)]"
                  isErrorOut="true"
                  name="Error Output (Load Hannover trajectories)">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[ErrorMessage]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[ErrorMessage]"
                      name="ErrorMessage" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[Length]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[Length]"
                      name="Length"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[Duration]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[Duration]"
                      name="Duration"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[AverageSpeed]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[AverageSpeed]"
                      name="AverageSpeed"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[EndDate]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[EndDate]"
                      name="EndDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[TrajectoryId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[TrajectoryId]"
                      name="TrajectoryId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[IdInFile]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="6"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[IdInFile]"
                      name="IdInFile"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[City]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="8"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[City]"
                      name="City"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[CosomosDbId]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="6"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[CosomosDbId]"
                      name="CosomosDbId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[AirPressure]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[AirPressure]"
                      name="AirPressure"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[Humidity]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[Humidity]"
                      name="Humidity"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[WindDirection]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[WindDirection]"
                      name="WindDirection"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[WindSpeed]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[WindSpeed]"
                      name="WindSpeed"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[Precipitation]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[Precipitation]"
                      name="Precipitation"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[GasolinePrice]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[GasolinePrice]"
                      name="GasolinePrice"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[DieselPrice]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[DieselPrice]"
                      name="DieselPrice"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[PrecipitationDuration]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[PrecipitationDuration]"
                      name="PrecipitationDuration"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[StartDate]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[StartDate]"
                      name="StartDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[Temperature]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[Temperature]"
                      name="Temperature"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[ArrivalsInInternationalTourism]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[ArrivalsInInternationalTourism]"
                      name="ArrivalsInInternationalTourism"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[DeparturesInInternationalTourism]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[DeparturesInInternationalTourism]"
                      name="DeparturesInInternationalTourism"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[UneploymentModeledILOEstimate]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[UneploymentModeledILOEstimate]"
                      name="UneploymentModeledILOEstimate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[UneploymentNationalEstimate]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[UneploymentNationalEstimate]"
                      name="UneploymentNationalEstimate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[Inflation]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[Inflation]"
                      name="Inflation"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[GDPPerCapitaCurrentLCU]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[GDPPerCapitaCurrentLCU]"
                      name="GDPPerCapitaCurrentLCU"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[GDPPerCapitaConstantLCU]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[GDPPerCapitaConstantLCU]"
                      name="GDPPerCapitaConstantLCU"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[MortalityInRoadTrafficPer100000]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[MortalityInRoadTrafficPer100000]"
                      name="MortalityInRoadTrafficPer100000"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[Age65+Percentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[Age65+Percentage]"
                      name="Age65+Percentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[Age15-64Percentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[Age15-64Percentage]"
                      name="Age15-64Percentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[Age0-14Percentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[Age0-14Percentage]"
                      name="Age0-14Percentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[RuralPercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[RuralPercentage]"
                      name="RuralPercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[UrbanPercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[UrbanPercentage]"
                      name="UrbanPercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[CountryDensity]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[CountryDensity]"
                      name="CountryDensity"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[FemalePercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[FemalePercentage]"
                      name="FemalePercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[MalePercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[MalePercentage]"
                      name="MalePercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[TotalPopulation]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Error Output (Load Hannover trajectories)].Columns[TotalPopulation]"
                      name="TotalPopulation"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)]"
                  name="Default Output (Load Hannover trajectories)">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[Length]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[Length]"
                      name="Length"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[Duration]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[Duration]"
                      name="Duration"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[AverageSpeed]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[AverageSpeed]"
                      name="AverageSpeed"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[EndDate]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[EndDate]"
                      name="EndDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[TrajectoryId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[TrajectoryId]"
                      name="TrajectoryId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[IdInFile]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="6"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[IdInFile]"
                      name="IdInFile"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[City]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="8"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[City]"
                      name="City"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[CosomosDbId]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="6"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[CosomosDbId]"
                      name="CosomosDbId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[AirPressure]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[AirPressure]"
                      name="AirPressure"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[Humidity]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[Humidity]"
                      name="Humidity"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[WindDirection]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[WindDirection]"
                      name="WindDirection"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[WindSpeed]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[WindSpeed]"
                      name="WindSpeed"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[Precipitation]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[Precipitation]"
                      name="Precipitation"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[GasolinePrice]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[GasolinePrice]"
                      name="GasolinePrice"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[DieselPrice]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[DieselPrice]"
                      name="DieselPrice"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[PrecipitationDuration]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[PrecipitationDuration]"
                      name="PrecipitationDuration"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[StartDate]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[StartDate]"
                      name="StartDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[Temperature]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[Temperature]"
                      name="Temperature"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[ArrivalsInInternationalTourism]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[ArrivalsInInternationalTourism]"
                      name="ArrivalsInInternationalTourism"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[DeparturesInInternationalTourism]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[DeparturesInInternationalTourism]"
                      name="DeparturesInInternationalTourism"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[UneploymentModeledILOEstimate]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[UneploymentModeledILOEstimate]"
                      name="UneploymentModeledILOEstimate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[UneploymentNationalEstimate]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[UneploymentNationalEstimate]"
                      name="UneploymentNationalEstimate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[Inflation]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[Inflation]"
                      name="Inflation"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[GDPPerCapitaCurrentLCU]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[GDPPerCapitaCurrentLCU]"
                      name="GDPPerCapitaCurrentLCU"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[GDPPerCapitaConstantLCU]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[GDPPerCapitaConstantLCU]"
                      name="GDPPerCapitaConstantLCU"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[MortalityInRoadTrafficPer100000]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[MortalityInRoadTrafficPer100000]"
                      name="MortalityInRoadTrafficPer100000"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[Age65+Percentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[Age65+Percentage]"
                      name="Age65+Percentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[Age15-64Percentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[Age15-64Percentage]"
                      name="Age15-64Percentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[Age0-14Percentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[Age0-14Percentage]"
                      name="Age0-14Percentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[RuralPercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[RuralPercentage]"
                      name="RuralPercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[UrbanPercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[UrbanPercentage]"
                      name="UrbanPercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[CountryDensity]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[CountryDensity]"
                      name="CountryDensity"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[FemalePercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[FemalePercentage]"
                      name="FemalePercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[MalePercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[MalePercentage]"
                      name="MalePercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[TotalPopulation]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Default Output (Load Hannover trajectories)].Columns[TotalPopulation]"
                      name="TotalPopulation"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output]"
                  isErrorOut="true"
                  name="Orphaned Children Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Input Name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Input Name]"
                      name="Input Name" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Column Name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Column Name]"
                      name="Column Name" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Column Value]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Column Value]"
                      name="Column Value" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Parent Input Name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Parent Input Name]"
                      name="Parent Input Name" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Parent Column Name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[Parent Column Name]"
                      name="Parent Column Name" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorMessage]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Hannover Data Flow\CosmosDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorMessage]"
                      name="ErrorMessage" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Hannover Data Flow\IdInFile and city columns"
              componentClassID="Microsoft.DerivedColumn"
              contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
              name="IdInFile and city columns"
              usesDispositions="true">
              <inputs>
                <input
                  refId="Package\Hannover Data Flow\IdInFile and city columns.Inputs[Derived Column Input]"
                  description="Input to the Derived Column Transformation"
                  name="Derived Column Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Hannover Data Flow\IdInFile and city columns.Inputs[Derived Column Input].Columns[TrajectoryId]"
                      cachedDataType="i4"
                      cachedName="TrajectoryId"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[TrajectoryId]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Hannover Data Flow\IdInFile and city columns.Outputs[Derived Column Output]"
                  description="Default Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  name="Derived Column Output"
                  synchronousInputId="Package\Hannover Data Flow\IdInFile and city columns.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Hannover Data Flow\IdInFile and city columns.Outputs[Derived Column Output].Columns[IdInFile]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="6"
                      lineageId="Package\Hannover Data Flow\IdInFile and city columns.Outputs[Derived Column Output].Columns[IdInFile]"
                      name="IdInFile"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">(DT_WSTR,6)#{Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[TrajectoryId]}</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">(DT_WSTR,6)TrajectoryId</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Hannover Data Flow\IdInFile and city columns.Outputs[Derived Column Output].Columns[City]"
                      dataType="wstr"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      length="8"
                      lineageId="Package\Hannover Data Flow\IdInFile and city columns.Outputs[Derived Column Output].Columns[City]"
                      name="City"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Expression"
                          name="Expression">"Hannover"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Derived Column Friendly Expression"
                          expressionType="Notify"
                          name="FriendlyExpression">"Hannover"</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Hannover Data Flow\IdInFile and city columns.Outputs[Derived Column Error Output]"
                  description="Error Output of the Derived Column Transformation"
                  exclusionGroup="1"
                  isErrorOut="true"
                  name="Derived Column Error Output"
                  synchronousInputId="Package\Hannover Data Flow\IdInFile and city columns.Inputs[Derived Column Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Hannover Data Flow\IdInFile and city columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Hannover Data Flow\IdInFile and city columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\IdInFile and city columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Hannover Data Flow\IdInFile and city columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Hannover Data Flow\Load Hannover trajectories"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum.;Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;13"
              description="Includes and runs custom script code. For example, apply a business rule that limits the range of valid values in an &quot;income&quot; column or add values in two columns and calculate the average of the sum."
              name="Load Hannover trajectories"
              version="13">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="36">
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public Output0Buffer Output0Buffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != Output0Buffer)
        {
            Output0Buffer.SetEndOfRowset();
            Output0Buffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"Output 0"))
            {
                Output0Buffer = new Output0Buffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[#region Help:  Introduction to the Script Component
/* The Script Component allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services data flow.
 *
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script component. */
#endregion

#region Namespaces
using System;
using System.Collections.Generic;
using System.Device.Location;
using System.Globalization;
using System.IO;
using System.Linq;
using CsvHelper;
using ProjNet.CoordinateSystems;
using ProjNet.CoordinateSystems.Transformations;
using ProjNet.IO.CoordinateSystems;
#endregion

/// <summary>
/// This is the class to which to add your code.  Do not change the name, attributes, or parent
/// of this class.
/// </summary>
[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{
    #region Help:  Using Integration Services variables and parameters
    /* To use a variable in this script, first ensure that the variable has been added to
     * either the list contained in the ReadOnlyVariables property or the list contained in
     * the ReadWriteVariables property of this script component, according to whether or not your
     * code needs to write into the variable.  To do so, save this script, close this instance of
     * Visual Studio, and update the ReadOnlyVariables and ReadWriteVariables properties in the
     * Script Transformation Editor window.
     * To use a parameter in this script, follow the same steps. Parameters are always read-only.
     *
     * Example of reading from a variable or parameter:
     *  DateTime startTime = Variables.MyStartTime;
     *
     * Example of writing to a variable:
     *  Variables.myStringVariable = "new value";
     */
    #endregion

    #region Help:  Using Integration Services Connnection Managers
    /* Some types of connection managers can be used in this script component.  See the help topic
     * "Working with Connection Managers Programatically" for details.
     *
     * To use a connection manager in this script, first ensure that the connection manager has
     * been added to either the list of connection managers on the Connection Managers page of the
     * script component editor.  To add the connection manager, save this script, close this instance of
     * Visual Studio, and add the Connection Manager to the list.
     *
     * If the component needs to hold a connection open while processing rows, override the
     * AcquireConnections and ReleaseConnections methods.
     * 
     * Example of using an ADO.Net connection manager to acquire a SqlConnection:
     *  object rawConnection = Connections.SalesDB.AcquireConnection(transaction);
     *  SqlConnection salesDBConn = (SqlConnection)rawConnection;
     *
     * Example of using a File connection manager to acquire a file path:
     *  object rawConnection = Connections.Prices_zip.AcquireConnection(transaction);
     *  string filePath = (string)rawConnection;
     *
     * Example of releasing a connection manager:
     *  Connections.SalesDB.ReleaseConnection(rawConnection);
     */
    #endregion

    #region Help:  Firing Integration Services Events
    /* This script component can fire events.
     *
     * Example of firing an error event:
     *  ComponentMetaData.FireError(10, "Process Values", "Bad value", "", 0, out cancel);
     *
     * Example of firing an information event:
     *  ComponentMetaData.FireInformation(10, "Process Values", "Processing has started", "", 0, fireAgain);
     *
     * Example of firing a warning event:
     *  ComponentMetaData.FireWarning(10, "Process Values", "No rows were received", "", 0);
     */
    #endregion

    /// <summary>
    /// This method is called once, before rows begin to be processed in the data flow.
    ///
    /// You can remove this method if you don't need to do anything here.
    /// </summary>
    public override void PreExecute()
    {
        base.PreExecute();
        /*
         * Add your code here
         */
    }

    /// <summary>
    /// This method is called after all the rows have passed through this component.
    ///
    /// You can delete this method if you don't need to do anything here.
    /// </summary>
    public override void PostExecute()
    {
        base.PostExecute();
        /*
         * Add your code here
         */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".

        */

        string filePath = "C:\\Users\\Rezerwowy\\Desktop\\Engineering Thesis\\Datasets\\hannover_table.csv";

        List<Row> rows = new List<Row>();
        using (StreamReader reader = new StreamReader(filePath))
        {
            string line;
            reader.ReadLine();
            
            while ((line = reader.ReadLine()) != null)
            {
                line = line.Replace("\"", "");
                
                string[] values = line.Split(',');
                var coordinates = ConvertUTMToLatLon(double.Parse(values[4], CultureInfo.InvariantCulture), double.Parse(values[3], CultureInfo.InvariantCulture));
                Row row = new Row
                {
                    Gid = int.Parse(values[0], CultureInfo.InvariantCulture),
                    TripId = int.Parse(values[1], CultureInfo.InvariantCulture),
                    DateTime = DateTimeOffset.FromUnixTimeSeconds(int.Parse(values[2], CultureInfo.InvariantCulture)).UtcDateTime,
                    Latitude = coordinates.Item1,
                    Longitude = coordinates.Item2,
                };

                rows.Add(row);
                
            }

            while (rows.Count > 0)
            {
                var id = rows[0].TripId;
                List<Row> trajestoryRows = rows.FindAll(r => r.TripId == id);
                rows.RemoveAll(r => r.TripId == id);

                trajestoryRows.OrderBy(r => r.Gid);

                DateTime startDate = trajestoryRows.First().DateTime;
                
                DateTime endDate = trajestoryRows.Last().DateTime;

                if (startDate == endDate)
                    continue;
                
                decimal duration = (decimal)(endDate - startDate).TotalMilliseconds;
                

                double distance = 0;
                for (int i = 0; i < trajestoryRows.Count - 1; i++) 
                {
                    GeoCoordinate firstCoordinate = new GeoCoordinate(trajestoryRows[i].Latitude, trajestoryRows[i].Longitude);
                    GeoCoordinate secondCoordinate = new GeoCoordinate(trajestoryRows[i + 1].Latitude, trajestoryRows[i + 1].Longitude);

                    distance += firstCoordinate.GetDistanceTo(secondCoordinate);
                }

                if (distance < 1)
                    continue;

                Output0Buffer.AddRow();
                Output0Buffer.TrajectoryId = id;
                Output0Buffer.StartDate = startDate;
                Output0Buffer.EndDate = endDate;
                Output0Buffer.Duration = duration / 60000;
                Output0Buffer.Length = (decimal)distance;
                Output0Buffer.AverageSpeed = (decimal)distance / (duration / 1000);
            }
        }

    }
    private Tuple<double, double> ConvertUTMToLatLon(double easting, double northing)
    {
        // Definicje system?w wsp?rz?dnych dla UTM i WGS 84
        var utmZone32 = CoordinateSystemWktReader.Parse("PROJCS[\"WGS_1984_UTM_Zone_32N\",GEOGCS[\"GCS_WGS_1984\",DATUM[\"D_WGS_1984\",SPHEROID[\"WGS_1984\",6378137.0,298.257223563]],PRIMEM[\"Greenwich\",0.0],UNIT[\"Degree\",0.0174532925199433]],PROJECTION[\"Transverse_Mercator\"],PARAMETER[\"False_Easting\",500000.0],PARAMETER[\"False_Northing\",0.0],PARAMETER[\"Central_Meridian\",9.0],PARAMETER[\"Scale_Factor\",0.9996],PARAMETER[\"Latitude_Of_Origin\",0.0],UNIT[\"Meter\",1.0]]");
        var wgs84 = GeographicCoordinateSystem.WGS84;

        // Inicjalizacja transformacji
        var ctFactory = new CoordinateTransformationFactory();
        var transformation = ctFactory.CreateFromCoordinateSystems((CoordinateSystem)utmZone32, wgs84);

        // Przekszta?? wsp?rz?dne
        double[] utmPoint = new double[] { easting, northing };
        double[] wgs84Point = transformation.MathTransform.Transform(utmPoint);

        // Odczytaj szeroko?? i d?ugo?? geograficzn?
        double latitude = wgs84Point[1];
        double longitude = wgs84Point[0];

        return new Tuple<double, double>(latitude, longitude);
    }

    private class Row
    {
        public int Gid { get; set; }
        public int TripId { get; set; }

        public DateTime DateTime { get; set; }
        public double Latitude { get; set; }
        public double Longitude { get; set; }

    }

}


]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Output0Buffer: ScriptBuffer

{
    public Output0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Decimal Length
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Length_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Duration
    {
        set
        {
            this[1] = value;
        }
    }
    public bool Duration_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal AverageSpeed
    {
        set
        {
            this[2] = value;
        }
    }
    public bool AverageSpeed_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime EndDate
    {
        set
        {
            this[3] = value;
        }
    }
    public bool EndDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime StartDate
    {
        set
        {
            this[4] = value;
        }
    }
    public bool StartDate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 TrajectoryId
    {
        set
        {
            this[5] = value;
        }
    }
    public bool TrajectoryId_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_4b3e21b7e2814983820047a9351d1a8d.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{E2ACFF07-6902-465F-80AA-339BAE39ADD8}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>SC_4b3e21b7e2814983820047a9351d1a8d</RootNamespace>
    <AssemblyName>SC_4b3e21b7e2814983820047a9351d1a8d</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="CsvHelper, Version=30.0.0.0, Culture=neutral, PublicKeyToken=8c4959082be5c823, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\Vstab0gGcwMDd0e3RgbcCCYGYg\packages\CsvHelper.30.0.1\lib\net47\CsvHelper.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.Bcl.AsyncInterfaces, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\Vstab0gGcwMDd0e3RgbcCCYGYg\packages\Microsoft.Bcl.AsyncInterfaces.1.0.0\lib\net461\Microsoft.Bcl.AsyncInterfaces.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.Bcl.HashCode, Version=1.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstakmqZthJmpkiI5idHB__iazA\packages\Microsoft.Bcl.HashCode.1.1.1\lib\net461\Microsoft.Bcl.HashCode.dll</HintPath>
    </Reference>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="netstandard, Version=2.0.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51" />
    <Reference Include="ProjNET, Version=2.0.0.0, Culture=neutral, PublicKeyToken=a1f5bdcd9c6f5740, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstawM8P8Qs04USj__Dzjh4P1lw\packages\ProjNET.2.0.0\lib\netstandard2.0\ProjNET.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Buffers, Version=4.0.3.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstawM8P8Qs04USj__Dzjh4P1lw\packages\System.Buffers.4.5.1\lib\net461\System.Buffers.dll</HintPath>
    </Reference>
    <Reference Include="System.Data" />
    <Reference Include="System.Device" />
    <Reference Include="System.Memory, Version=4.0.1.2, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstawM8P8Qs04USj__Dzjh4P1lw\packages\System.Memory.4.5.5\lib\net461\System.Memory.dll</HintPath>
    </Reference>
    <Reference Include="System.Numerics" />
    <Reference Include="System.Numerics.Vectors, Version=4.1.3.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstawM8P8Qs04USj__Dzjh4P1lw\packages\System.Numerics.Vectors.4.5.0\lib\net46\System.Numerics.Vectors.dll</HintPath>
      <Private>True</Private>
    </Reference>
    <Reference Include="System.Runtime.CompilerServices.Unsafe, Version=4.0.4.1, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\VstawM8P8Qs04USj__Dzjh4P1lw\packages\System.Runtime.CompilerServices.Unsafe.4.5.3\lib\net461\System.Runtime.CompilerServices.Unsafe.dll</HintPath>
    </Reference>
    <Reference Include="System.Threading.Tasks.Extensions, Version=4.2.0.0, Culture=neutral, PublicKeyToken=cc7b13ffcd2ddd51, processorArchitecture=MSIL">
      <HintPath>C:\Users\Rezerwowy\AppData\Local\Temp\Vsta\SSIS_SC160\Vstab0gGcwMDd0e3RgbcCCYGYg\packages\System.Threading.Tasks.Extensions.4.5.2\lib\netstandard2.0\System.Threading.Tasks.Extensions.dll</HintPath>
    </Reference>
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Compile Include="main.cs" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="app.config" />
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[app.config]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Runtime.CompilerServices.Unsafe" publicKeyToken="b03f5f7f11d50a3a" culture="neutral" />
        <bindingRedirect oldVersion="0.0.0.0-4.0.4.1" newVersion="4.0.4.1" />
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[packages.config]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Microsoft.Bcl.HashCode" version="1.0.0" targetFramework="net472" />
</packages>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4b3e21b7e2814983820047a9351d1a8d.Properties.Settings.get_Default():SC_4b3e21b7e2814983820047a9351d1a8d.Properties.Sett" +
    "ings")]

namespace SC_4b3e21b7e2814983820047a9351d1a8d.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>SC_4b3e21b7e2814983820047a9351d1a8d</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>SC_4b3e21b7e2814983820047a9351d1a8d</msb:DisplayName>
    <msb:ProjectId>{C9AC8762-6BDA-4343-9605-C6214CF4B783}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="SC_4b3e21b7e2814983820047a9351d1a8d.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="app.config" />
    <msb:File Include="main.cs" />
    <msb:File Include="BufferWrapper.cs" />
    <msb:File Include="ComponentWrapper.cs" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="packages.config" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\Settings.Designer.cs" />
  </msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_4b3e21b7e2814983820047a9351d1a8d")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("HP")]
[assembly: AssemblyProduct("SC_4b3e21b7e2814983820047a9351d1a8d")]
[assembly: AssemblyCopyright("Copyright @ HP 2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.0.0")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4b3e21b7e2814983820047a9351d1a8d.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4b3e21b7e2814983820047a9351d1a8d.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="SC_4b3e21b7e2814983820047a9351d1a8d.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_4b3e21b7e2814983820047a9351d1a8d.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_4b3e21b7e2814983820047a9351d1a8d.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_4b3e21b7e2814983820047a9351d1a8d.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADijZ2UAAAAAAAAAAOAAIiALATAAACgAAAAIAAAAAAAAOkYA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACgAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOhFAABPAAAAAGAAAFAEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAQCYAAAAgAAAAKAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAFAEAAAAYAAAAAYAAAAqAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAMAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAc
RgAAAAAAAEgAAAACAAUARCYAAOweAAABAAAAAAAAADBFAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKBAAAAoqHgIoEQAACiobMAUAwwIAAAEAABFyAQAAcHMS
AAAKCnMTAAAKCwdvFAAACiY4tgAAAAhylgAAcHKaAABwbxUAAAoMCBeNKAAAASUWHyydbxYAAAoN
AgkamigXAAAKKBgAAAoJGZooFwAACigYAAAKKAQAAAYTBHMuAAAGJQkWmigXAAAKKBkAAApvJQAA
BiUJF5ooFwAACigZAAAKbycAAAYlCRiaKBcAAAooGQAACmooGgAAChMGEgYoGwAACm8pAAAGJREE
bxwAAApvKwAABiURBG8dAAAKby0AAAYTBQYRBW8eAAAKB28UAAAKJQw6Pf///zjFAQAAczIAAAYT
BxEHBhZvHwAACm8mAAAGfRAAAAQGEQf+BjMAAAZzIAAACm8hAAAKEwgGEQf+BjQAAAZzIAAACm8i
AAAKJhEIfg8AAAQlLRcmfg4AAAT+BjEAAAZzIwAACiWADwAABCgBAAArJhEIKAIAACtvKAAABhMJ
EQgoAwAAK28oAAAGEwoRCREKKCcAAAo6MQEAABEKEQkoKAAAChMNEg0oKQAACigqAAAKEwsjAAAA
AAAAAAATDBYTDiteEQgRDm8fAAAKbyoAAAYRCBEObx8AAApvLAAABnMrAAAKEw8RCBEOF1hvHwAA
Cm8qAAAGEQgRDhdYbx8AAApvLAAABnMrAAAKExARDBEPERBvLAAAClgTDBEOF1gTDhEOEQhvLQAA
ChdZMpURDCMAAAAAAADwPz+NAAAAAnsDAAAEbxMAAAYCewMAAAQRB3sQAAAEbxEAAAYCewMAAAQR
CW8PAAAGAnsDAAAEEQpvDQAABgJ7AwAABBELIGDqAABzLgAACigvAAAKbwkAAAYCewMAAAQRDCgq
AAAKbwcAAAYCewMAAAQRDCgqAAAKEQsg6AMAAHMuAAAKKC8AAAooLwAACm8LAAAGBm8tAAAKFj0v
/v//3goHLAYHbzAAAArcKgBBHAAAAgAAABEAAACnAgAAuAIAAAoAAAAAAAAAEzAEAFEAAAACAAAR
cpwAAHAoMQAACgooMgAACgtzMwAACgZ0MwAAAQdvNAAACgwYjSkAAAElFgOhJRcEoQ0IbzUAAAoJ
bzYAAAolF5kTBBaZEwURBBEFczcAAAoqHgIoFgAABioqAgMEBSg4AAAKKjoCFgOMEwAAASg5AAAK
KloDLAgCFig6AAAKKnK/AwBwczsAAAp6OgIXA4wTAAABKDkAAAoqWgMsCAIXKDoAAAoqcr8DAHBz
OwAACno6AhgDjBMAAAEoOQAACipaAywIAhgoOgAACipyvwMAcHM7AAAKejoCGQOMEgAAASg5AAAK
KloDLAgCGSg6AAAKKnK/AwBwczsAAAp6OgIaA4wSAAABKDkAAAoqWgMsCAIaKDoAAAoqcr8DAHBz
OwAACno6AhsDjCsAAAEoOQAACipaAywIAhsoOgAACipyvwMAcHM7AAAKeh4CKDwAAAoqHgIoPQAA
CioeAig+AAAKKn4CKD8AAAoCAnMbAAAGfQEAAAQCAnMcAAAGfQIAAAQqBipuAnsDAAAELBICewMA
AARvFAAABgIUfQMAAAQqAAATMAUASQAAAAMAABEWCisuBAaUDgRyXAQAcChAAAAKMxkCBQaaAgQG
lChBAAAKDgRzBgAABn0DAAAEBhdYCgYDMs4CbxoAAAYCbxcAAAYCKBgAAAYqOgIoQgAACgIDfQQA
AAQqOgIoQgAACgIDfQUAAAQqHgIoQgAACiqufgYAAAQtHnJuBABw0AcAAAIoQwAACm9EAAAKc0UA
AAqABgAABH4GAAAEKhp+BwAABCoeAoAHAAAEKhp+CAAABCoeAihGAAAKKi5zIgAABoAIAAAEKh4C
ewkAAAQqIgIDfQkAAAQqHgJ7CgAABCoiAgN9CgAABCoeAnsLAAAEKiICA30LAAAEKh4CewwAAAQq
IgIDfQwAAAQqHgJ7DQAABCoiAgN9DQAABCouczAAAAaADgAABCoeA28kAAAGKj4DbyYAAAYCexAA
AAT+ASoAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAAALAKAAAjfgAAHAsAAJgL
AAAjU3RyaW5ncwAAAAC0FgAA4AQAACNVUwCUGwAAEAAAACNHVUlEAAAApBsAAEgDAAAjQmxvYgAA
AAAAAAACAAABVxWiCQkLAAAA+gEzABYAAAEAAAA4AAAACwAAABAAAAA0AAAAIAAAAEYAAAAhAAAA
AwAAAAQAAAAUAAAAGgAAAAQAAAABAAAABwAAAAEAAAADAAAAAwAAAAAA9gUBAAAAAAAGALoE4ggG
AE4F4ggGAAYEpQgPAFYJAAAGADMEmQcGAJ0EmQcGAH4EmQcGADUFmQcGANoEmQcGAPMEmQcGAEoE
mQcGAGUEkgUKAA4F/AIGAHkAEAEGAA4I8QAGALwAygYGAIYKygYGAOoCygYGAMYFygYGAO8GygYO
AKsDIgcSANMH6QkSALYG6QkSADkHHwoGAH8KygYGAM4D4ggGALUAygYKAG0I/AIWAF4I/AIKAOUH
/AIKAOAK/AIGAOkDpQgGAH4IAgkGANkHdQcaALkDzgUaABoEzgUaAGsDYAcGADUI8QAGAKwFygYG
AAkIygYGAJ4CygYGAEAIygYGAIoAygYGAG0AygYeAIcC/QceAFgA/QcGAEoAEAEGAJICygYSABsI
zAkSAGsLHwoSAMAG6QkSANUGHwoGAKsHygYGAB0DygYGAKUCygYGAGILmQcAAAAA3AAAAAAAAQAB
AAEAEAD4BgAAEAABAAEAAQAQAFAIAABxAAEABgABABAAwgoAAH0AAQAWAAEAEABJCgAAZQAEABsA
AQAQAJQJAABlAAUAHAAAABAACQllCWUABgAdAAABEADDCWUJlQAIACEAAwAQAFILAABlAAkAJAAD
IRAADAEAAGUADgAvAAMBEAABAAAAZQAQADIABgBJCsYBBgCUCcoBBgBQCM4BAQDQCtIBAQDQCtIB
EQDjBtYBEQBGA9sBEQBBAuABAQDHAeQBAQCvAeQBAQARAucBAQD3AesBAQDcAesBNgDYAO4BFgCQ
APIBBgCsAeQBUCAAAAAAxgBsBQYAAQBYIAAAAADGAHcFBgABAGAgAAAAAMYAawoGAAEATCMAAAAA
gQADB/sBAQCpIwAAAACGGI4IBgADALEjAAAAAIYYjghvAQMAvCMAAAAAhgi7BQYCBgDLIwAAAACG
CHYGDAIHAOIjAAAAAIYIUwcGAggA8SMAAAAAhgiIBgwCCQAIJAAAAACGCHoBBgIKABckAAAAAIYI
NgYMAgsALiQAAAAAhgiRAxECDAA9JAAAAACGCE4GDAINAFQkAAAAAIYInQMRAg4AYyQAAAAAhghh
BgwCDwB6JAAAAACGCGUBAQAQAIkkAAAAAIYIHgYMAhEAoCQAAAAAhgBPCwYAEgCoJAAAAACGAJUK
BgASALAkAAAAAIYAmAp/ARIAuCQAAAAAhhiOCAYAEgDYJAAAAADGAV0KBgASANokAAAAAIEAiwEG
ABIA+CQAAAAAxgBDCxcCEgDYJAAAAADGAWsKBgAWAE0lAAAAAIYYjggjAhYAXCUAAAAAhhiOCCMC
FwBrJQAAAACDGI4IBgAYAHMlAAAAAJMIeggpAhgAnyUAAAAAkwguA2IAGACmJQAAAACTCDoDLwIY
AK4lAAAAAJYItgo2AhkAtSUAAAAAhhiOCAYAGQC9JQAAAACRGJQIOwIZAMklAAAAAIYInwEqARkA
0SUAAAAAhginAQEAGQDaJQAAAACGCE8BKgEaAOIlAAAAAIYIWgEBABoA6yUAAAAAhgjJAn4AGwDz
JQAAAACGCNYCEQIbAPwlAAAAAIYIbQIUARwABCYAAAAAhgh6Aj8CHAANJgAAAACGCFECFAEdABUm
AAAAAIYIXwI/Ah0AayUAAAAAhhiOCAYAHgAeJgAAAACRGJQIOwIeAGslAAAAAIYYjggGAB4AKiYA
AAAAgwCZAEQCHgBrJQAAAACGGI4IBgAfADImAAAAAIMAFgBKAh8AMiYAAAAAgwAwAEoCIAAAAAEA
swUAAAIAiQUAAAEAcwgAAAIAngkAAAMA8wcAAAEAgwUAAAEAgwUAAAEAgwUAAAEAgwUAAAEAgwUA
AAEAgwUAAAEAgwUAAAEAgwUAAAEAgwUAAAEAgwUAAAEAgwUAAAEAgwUAAAEAYwoAAAIAmwgAAAMA
VQoAAAQA8wcAAAEA5goAAAEA5goAAAEAgwUAAAEAgwUAAAEAgwUAAAEAgwUAAAEAgwUAAAEAgwUA
AAEAmQgAAAEAmQgAAAEAmQgJAI4IAQARAI4IBgAZAI4ICgApAI4IEAAxAI4IEAA5AI4IEABBAI4I
EABJAI4IEABRAI4IEABZAI4IEABhAI4IEABpAI4IBgDRAI4IBgABAY4IBgAhAY4IFQD5AGwFBgD5
AHcFBgAMAI4IBgB5AI4IEAAxAfMCUQA5ASsCVQA5AbAKWwARAVYDYgBJAYsDaABZAYsDcACJALgI
eACJAOMCfgAUAIAAigAUAMQAjwAMAHYBlAAMAKQGmgAcAI4IqAAMAOQFrgAMAOwFvgAkAI4IqABp
AVYL0QBpAT0L8QBpARcL8QCRAIsLAwGRAIoHCwGhAMwIFAGZAKQKGAGpAI4IHgGpAMUHJAEMAPAK
KgGZAI4IAQCZABYHLgGBAYMDBgCJAYsDRAG5AM4ASgGRAY4IBgCRAQMKTwHBANEGWgGhAdkGYAEU
AI4IZwHhAI4IbwHhAK0GeQHhAJwGAQCpAY4IEADhAE8LBgDhAJUKBgDhAJgKfwH5AI4IBgD5AOUA
hwH5ALIJjgHJAI4IBgCxAbcClAGxAV4LnQEJAY4IowEpAY4IBgAuAAsAdwIuABMAgAIuABsAnwIu
ACMAqAIuACsA0QIuADMA0QIuADsA1wIuAEMAqAIuAEsA3wIuAFMA0QIuAFsA+AJDAGMAQgPjAHMA
QgMBAWsAQgMhAWsAQgNBAWsAQgNDAWsAQgNhAWsAQgNjAWsAQgOBAWsAQgOhAWsAQgOpAXsAnwLJ
AXsAnwKABGsAQgOgBGsAQgPABGsAQgPgBGsAQgMABWsAQgMgBWsAQgNABWsAQgNgBWsAQgOABWsA
QgOgBWsAQgMcADcBgwEDAAEABwANAAgADwAJABAAAAC/BVACAAB6BlUCAABXB1ACAACMBlUCAAB+
AVACAAA6BlUCAACVA1kCAABSBlUCAAChA1kCAABlBlUCAABpAV4CAAAiBlUCAAB+CGICAABjA2gC
AAC6Cm4CAACrAV4CAABeAV4CAADqAlkCAAB+AnMCAABjAnMCAQAHAAMAAQAIAAUAAQAJAAcAAQAK
AAkAAQALAAsAAQAMAA0AAQANAA8AAQAOABEAAQAPABMAAQAQABUAAQARABcAAQASABkAAgAeABsA
AgAfAB0AAQAgAB0AAgAhAB8AAgAkACEAAQAlACEAAgAmACMAAQAnACMAAgAoACUAAQApACUAAgAq
ACcAAQArACcAAgAsACkAAQAtACkASgCDAKAAyQAEgAAAAQAAAAAAAAAAAAAAAAArAQAABAAAAAAA
AAAAAAAAqwEDAQAAAAAQAAAAAAAAAAAAAAC0AfoKAAAAAAQAAAAAAAAAAAAAAKsBMwIAAAAAAgAA
AAAAAAAAAAAAvQH7AAAAAAAQAAAAAAAAAAAAAAC0ARwLAAAAAAQAAAAAAAAAAAAAAKsBygYAAAAA
BAAAAAAAAAAAAAAAqwEiAwAAAAAAAAAAAQAAABMJAAAJAAIACgACAAsAAgBJAOsASwD+AE0A/gAA
AAA8PmNfX0Rpc3BsYXlDbGFzczJfMAA8Q3JlYXRlTmV3T3V0cHV0Um93cz5iX18wADxDcmVhdGVO
ZXdPdXRwdXRSb3dzPmJfXzEASUVudW1lcmFibGVgMQBJT3JkZXJlZEVudW1lcmFibGVgMQBQcmVk
aWNhdGVgMQBMaXN0YDEAZ2V0X0l0ZW0xAEludDMyADw+OV9fMl8yADxDcmVhdGVOZXdPdXRwdXRS
b3dzPmJfXzJfMgBGdW5jYDIAVHVwbGVgMgBnZXRfSXRlbTIAZ2V0X1dHUzg0ADw+OQA8TW9kdWxl
PgBHZXRPdXRwdXRJRABTeXN0ZW0uSU8AUHJvak5FVABtc2NvcmxpYgA8PmMAU3lzdGVtLkNvbGxl
Y3Rpb25zLkdlbmVyaWMAU0NfNGIzZTIxYjdlMjgxNDk4MzgyMDA0N2E5MzUxZDFhOGQAZ2V0X1Ry
aXBJZABzZXRfVHJpcElkAHNldF9UcmFqZWN0b3J5SWQAQWRkAHNldF9BdmVyYWdlU3BlZWQATWFy
a091dHB1dHNGaW5pc2hlZABnZXRfR2lkAHNldF9HaWQAPFRyaXBJZD5rX19CYWNraW5nRmllbGQA
PEdpZD5rX19CYWNraW5nRmllbGQAPExvbmdpdHVkZT5rX19CYWNraW5nRmllbGQAPExhdGl0dWRl
PmtfX0JhY2tpbmdGaWVsZAA8RGF0ZVRpbWU+a19fQmFja2luZ0ZpZWxkAFJlcGxhY2UAU3lzdGVt
LkRldmljZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0xvbmdpdHVkZQBzZXRfTG9uZ2l0dWRlAGdldF9M
YXRpdHVkZQBzZXRfTGF0aXR1ZGUARW51bWVyYWJsZQBJRGlzcG9zYWJsZQBEb3VibGUAUnVudGlt
ZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAZ2V0X0RhdGVUaW1lAHNldF9EYXRlVGltZQBn
ZXRfVXRjRGF0ZVRpbWUAUmVhZExpbmUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUA
VHlwZQBTeXN0ZW0uQ29yZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUA
Z2V0X0ludmFyaWFudEN1bHR1cmUAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBQYXJz
ZQBzZXRfRW5kRGF0ZQBzZXRfU3RhcnREYXRlAEdlb0Nvb3JkaW5hdGUARWRpdG9yQnJvd3NhYmxl
U3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJp
YnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJs
eVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29y
a0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlw
dGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJv
ZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0Q29tcG9u
ZW50RW50cnlQb2ludEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNv
bXBhdGliaWxpdHlBdHRyaWJ1dGUAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQB2YWx1ZQBub3J0aGlu
ZwBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFN0cmluZwBlYXN0aW5nAHNldF9MZW5ndGgARGVj
aW1hbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwARmluZEFsbABSZW1vdmVBbGwAU0NfNGIzZTIxYjdl
MjgxNDk4MzgyMDA0N2E5MzUxZDFhOGQuZGxsAHNldF9UcmFqZWN0b3J5SWRfSXNOdWxsAHNldF9B
dmVyYWdlU3BlZWRfSXNOdWxsAHNldF9FbmREYXRlX0lzTnVsbABzZXRfU3RhcnREYXRlX0lzTnVs
bABzZXRfTGVuZ3RoX0lzTnVsbABzZXRfRHVyYXRpb25fSXNOdWxsAFNldE51bGwAZ2V0X0l0ZW0A
c2V0X0l0ZW0AR2VvZ3JhcGhpY0Nvb3JkaW5hdGVTeXN0ZW0AZ2V0X01hdGhUcmFuc2Zvcm0AcmVz
b3VyY2VNYW4AVGltZVNwYW4AU2NyaXB0TWFpbgBDb252ZXJ0VVRNVG9MYXRMb24Ab3BfRGl2aXNp
b24AU3lzdGVtLkRldmljZS5Mb2NhdGlvbgBJQ29vcmRpbmF0ZVRyYW5zZm9ybWF0aW9uAHNldF9E
dXJhdGlvbgBTeXN0ZW0uQ29uZmlndXJhdGlvbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBvcF9TdWJ0
cmFjdGlvbgBTeXN0ZW0uUmVmbGVjdGlvbgBJbnZhbGlkT3BlcmF0aW9uRXhjZXB0aW9uAEdldERp
c3RhbmNlVG8ASUluZm8AQ3VsdHVyZUluZm8AT3V0cHV0TmFtZU1hcABPdXRwdXRNYXAAU3lzdGVt
LkxpbnEAQ2hhcgBTdHJlYW1SZWFkZXIAQ29vcmRpbmF0ZVN5c3RlbVdrdFJlYWRlcgBUZXh0UmVh
ZGVyAElGb3JtYXRQcm92aWRlcgBPdXRwdXQwQnVmZmVyAFBpcGVsaW5lQnVmZmVyAFNjcmlwdEJ1
ZmZlcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAC5jdG9yAC5jY3RvcgBPdXRwdXRJRHMAU3lzdGVtLkRp
YWdub3N0aWNzAEZyb21Vbml4VGltZVNlY29uZHMAZ2V0X1RvdGFsTWlsbGlzZWNvbmRzAFN5c3Rl
bS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAU3lzdGVtLlJlc291cmNlcwBTQ180YjNlMjFiN2Uy
ODE0OTgzODIwMDQ3YTkzNTFkMWE4ZC5Qcm9wZXJ0aWVzLlJlc291cmNlcy5yZXNvdXJjZXMARGVi
dWdnaW5nTW9kZXMAU0NfNGIzZTIxYjdlMjgxNDk4MzgyMDA0N2E5MzUxZDFhOGQuUHJvcGVydGll
cwBWYXJpYWJsZXMAQnVmZmVyQ29sdW1uSW5kZXhlcwBHZXRDb2x1bW5JbmRleGVzAFNldHRpbmdz
AFByb2pOZXQuSU8uQ29vcmRpbmF0ZVN5c3RlbXMAUHJvak5ldC5Db29yZGluYXRlU3lzdGVtcwBD
cmVhdGVGcm9tQ29vcmRpbmF0ZVN5c3RlbXMAUHJvak5ldC5Db29yZGluYXRlU3lzdGVtcy5UcmFu
c2Zvcm1hdGlvbnMAQ29ubmVjdGlvbnMAQnVmZmVycwBGaW5pc2hPdXRwdXRzAENyZWF0ZU5ld091
dHB1dFJvd3MAT2JqZWN0AERhdGVUaW1lT2Zmc2V0AFNldEVuZE9mUm93c2V0AG9wX0V4cGxpY2l0
AFNwbGl0AGdldF9EZWZhdWx0AFVzZXJDb21wb25lbnQAUGFyZW50Q29tcG9uZW50AFNjcmlwdENv
bXBvbmVudABnZXRfQ291bnQATWljcm9zb2Z0LlNxbFNlcnZlci5UeFNjcmlwdABMYXN0AE1pY3Jv
c29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AEZpcnN0AFByaW1lT3V0cHV0AEFkZFJvdwBPcmRl
ckJ5AGdldF9Bc3NlbWJseQBDb29yZGluYXRlVHJhbnNmb3JtYXRpb25GYWN0b3J5AG9wX0VxdWFs
aXR5AAAAgJNDADoAXABVAHMAZQByAHMAXABSAGUAegBlAHIAdwBvAHcAeQBcAEQAZQBzAGsAdABv
AHAAXABFAG4AZwBpAG4AZQBlAHIAaQBuAGcAIABUAGgAZQBzAGkAcwBcAEQAYQB0AGEAcwBlAHQA
cwBcAGgAYQBuAG4AbwB2AGUAcgBfAHQAYQBiAGwAZQAuAGMAcwB2AAADIgAAAQCDIVAAUgBPAEoA
QwBTAFsAIgBXAEcAUwBfADEAOQA4ADQAXwBVAFQATQBfAFoAbwBuAGUAXwAzADIATgAiACwARwBF
AE8ARwBDAFMAWwAiAEcAQwBTAF8AVwBHAFMAXwAxADkAOAA0ACIALABEAEEAVABVAE0AWwAiAEQA
XwBXAEcAUwBfADEAOQA4ADQAIgAsAFMAUABIAEUAUgBPAEkARABbACIAVwBHAFMAXwAxADkAOAA0
ACIALAA2ADMANwA4ADEAMwA3AC4AMAAsADIAOQA4AC4AMgA1ADcAMgAyADMANQA2ADMAXQBdACwA
UABSAEkATQBFAE0AWwAiAEcAcgBlAGUAbgB3AGkAYwBoACIALAAwAC4AMABdACwAVQBOAEkAVABb
ACIARABlAGcAcgBlAGUAIgAsADAALgAwADEANwA0ADUAMwAyADkAMgA1ADEAOQA5ADQAMwAzAF0A
XQAsAFAAUgBPAEoARQBDAFQASQBPAE4AWwAiAFQAcgBhAG4AcwB2AGUAcgBzAGUAXwBNAGUAcgBj
AGEAdABvAHIAIgBdACwAUABBAFIAQQBNAEUAVABFAFIAWwAiAEYAYQBsAHMAZQBfAEUAYQBzAHQA
aQBuAGcAIgAsADUAMAAwADAAMAAwAC4AMABdACwAUABBAFIAQQBNAEUAVABFAFIAWwAiAEYAYQBs
AHMAZQBfAE4AbwByAHQAaABpAG4AZwAiACwAMAAuADAAXQAsAFAAQQBSAEEATQBFAFQARQBSAFsA
IgBDAGUAbgB0AHIAYQBsAF8ATQBlAHIAaQBkAGkAYQBuACIALAA5AC4AMABdACwAUABBAFIAQQBN
AEUAVABFAFIAWwAiAFMAYwBhAGwAZQBfAEYAYQBjAHQAbwByACIALAAwAC4AOQA5ADkANgBdACwA
UABBAFIAQQBNAEUAVABFAFIAWwAiAEwAYQB0AGkAdAB1AGQAZQBfAE8AZgBfAE8AcgBpAGcAaQBu
ACIALAAwAC4AMABdACwAVQBOAEkAVABbACIATQBlAHQAZQByACIALAAxAC4AMABdAF0AAICbSQBz
AE4AdQBsAGwAIABwAHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAA
dABvACAARgBhAGwAcwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0
AGgAZQAgAGMAbwBsAHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAARTwB1AHQAcAB1AHQAIAAwAABx
UwBDAF8ANABiADMAZQAyADEAYgA3AGUAMgA4ADEANAA5ADgAMwA4ADIAMAAwADQANwBhADkAMwA1
ADEAZAAxAGEAOABkAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAL
39Mx0ee0SLlKr87MZY3aAAQgAQEIAyAAAQUgAQEREQQgAQEOBiABARGAjS0HERUSOQESJBI9Dh0O
FRJBAg0NEiQRRRIsFRI5ARIkEUkRSRFNDRFRCBJVElUGFRI5ARIkAyAADgUgAg4ODgYgAR0OHQMF
AAASgIkHAAINDhKAqQcAAggOEoCpBQABEUUKBCAAEUkGFRJBAg0NBCAAEwAEIAATAQUgAQETAAUg
ARMACAcVEoCxARIkBSACARwYDyABFRI5ARMAFRKAsQETAAogAQgVEoCxARMABxUSbQISJAgZEAIC
FRKAuQEeABUSgL0BHgAVEm0CHgAeAQUKAhIkCAwQAQEeABUSgL0BHgAECgESJAcAAgIRSRFJCAAC
EVERSRFJAyAADQUAARFNDQUgAgENDQUgAQ0SVQMgAAgIAAIRTRFNEU0MBwYSWRJdEmEdDQ0NBQAB
ElkOBAAAEl0KIAISYRKAzRKAzQUgABKA0QYgAR0NHQ0HIAIBEwATAQkgAwESdR0IEnkFIAIBCBwD
IAACAwcBCAYAAggSeQ4FIAEdCAgIAAESgNkRgN0FIAASgOEHIAIBDhKA4Qi3elxWGTTgiQiJhF3N
gIDMkQih9b3NnG9XQAMGEhQDBhIYAwYSDAMGEn0EBhKAhQQGEoCJAwYSIAIGCAMGEUkCBg0DBhIo
CAYVEm0CEiQICiACFRJBAg0NDQ0FIAEBEU0EIAEBAgUgAQERSQsgBAEIHQgdEnUSeQUgAQESfQUA
ABKAhQYAAQESgIkEAAASIAMAAAEEIAEBDQUgAQgSJAUgAQISJAQoABFNAygAAgQoABFJAygACAUI
ABKAhQUIABKAiQQIABIgAygADQgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93
cwEIAQACAAAAAAAoAQAjU0NfNGIzZTIxYjdlMjgxNDk4MzgyMDA0N2E5MzUxZDFhOGQAAAUBAAAA
AAcBAAJIUAAAGAEAE0NvcHlyaWdodCBAIEhQIDIwMjMAAEkBABouTkVURnJhbWV3b3JrLFZlcnNp
b249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43BAEAAAAA
tAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2Nvcmxp
YiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1
YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAA
AABQQURQQURQtAAAABBGAAAAAAAAAAAAACpGAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcRgAA
AAAAAAAAAAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAY
AACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAAPQD
AAAAAAAAAAAAAPQDNAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAAB
AAAAAQAAAAAAAAABAAAAAAA/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIA
RgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsARU
AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAAAwAwAAAQAwADAAMAAwADAANABiADAA
AAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAJgADAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBl
AAAAAABIAFAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMA
XwA0AGIAMwBlADIAMQBiADcAZQAyADgAMQA0ADkAOAAzADgAMgAwADAANAA3AGEAOQAzADUAMQBk
ADEAYQA4AGQAAAAwAAgAAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AMAAuADAA
AABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAQwBfADQAYgAzAGUAMgAxAGIANwBl
ADIAOAAxADQAOQA4ADMAOAAyADAAMAA0ADcAYQA5ADMANQAxAGQAMQBhADgAZAAuAGQAbABsAAAA
TAAUAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABA
ACAASABQACAAMgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUAbQBhAHIAawBzAAAA
AAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfADQAYgAz
AGUAMgAxAGIANwBlADIAOAAxADQAOQA4ADMAOAAyADAAMAA0ADcAYQA5ADMANQAxAGQAMQBhADgA
ZAAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA0AGIAMwBl
ADIAMQBiADcAZQAyADgAMQA0ADkAOAAzADgAMgAwADAANAA3AGEAOQAzADUAMQBkADEAYQA4AGQA
AAA0AAgAAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADAALgAwAAAAOAAI
AAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4AMAAuADAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAAA8NgAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_4b3e21b7e2814983820047a9351d1a8d</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum140"
                  typeConverter="NOTBROWSABLE">4E</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.ScriptComponentHost</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0]"
                  hasSideEffects="true"
                  name="Output 0">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[Length]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[Length]"
                      name="Length" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[Duration]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[Duration]"
                      name="Duration" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[AverageSpeed]"
                      dataType="decimal"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[AverageSpeed]"
                      name="AverageSpeed" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[EndDate]"
                      dataType="date"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[EndDate]"
                      name="EndDate" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[StartDate]"
                      dataType="date"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[StartDate]"
                      name="StartDate" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[TrajectoryId]"
                      dataType="i4"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[TrajectoryId]"
                      name="TrajectoryId" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Hannover Data Flow\MongoDB Destination"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="KingswaySoft Inc.; http://www.kingswaysoft.com; support@kingswaysoft.com; Copyright (c) 2021 KingswaySoft Inc."
              description="Write data to a MongoDB database."
              name="MongoDB Destination"
              usesDispositions="true"
              validateExternalMetadata="False"
              version="3">
              <properties>
                <property
                  dataType="System.String"
                  name="Design">[{"NodeType":2,"SourceType":"Input","InputOrColumnName":"Root","Children":[{"NodeName":"IdInFile","NodeType":3,"SourceType":"Column","InputOrColumnName":"IdInFile"},{"NodeName":"StartDate","NodeType":3,"SourceType":"Column","InputOrColumnName":"StartDate"},{"NodeName":"EndDate","NodeType":3,"SourceType":"Column","InputOrColumnName":"EndDate"},{"NodeName":"AverageSpeed","NodeType":3,"SourceType":"Column","InputOrColumnName":"AverageSpeed"},{"NodeName":"Duration","NodeType":3,"SourceType":"Column","InputOrColumnName":"Duration"},{"NodeName":"Length","NodeType":3,"SourceType":"Column","InputOrColumnName":"Length"},{"NodeName":"city","NodeType":3,"SourceType":"Column","InputOrColumnName":"city"},{"NodeName":"Weather","NodeType":2,"SourceType":"None","Children":[{"NodeName":"Temperature","NodeType":3,"SourceType":"Column","InputOrColumnName":"Temperature"},{"NodeName":"AirPressure","NodeType":3,"SourceType":"Column","InputOrColumnName":"AirPressure"},{"NodeName":"Humidity","NodeType":3,"SourceType":"Column","InputOrColumnName":"Humidity"},{"NodeName":"WindSpeed","NodeType":3,"SourceType":"Column","InputOrColumnName":"WindSpeed"},{"NodeName":"WindDirection","NodeType":3,"SourceType":"Column","InputOrColumnName":"WindDirection"},{"NodeName":"Precipitation","NodeType":3,"SourceType":"Column","InputOrColumnName":"Precipitation"},{"NodeName":"PrecipitationDuration","NodeType":3,"SourceType":"Column","InputOrColumnName":"PrecipitationDuration"}]},{"NodeName":"FuelPrice","NodeType":2,"SourceType":"None","Children":[{"NodeName":"GasolinePrice","NodeType":3,"SourceType":"Column","InputOrColumnName":"GasolinePrice"},{"NodeName":"DieselPrice","NodeType":3,"SourceType":"Column","InputOrColumnName":"DieselPrice"}]},{"NodeName":"CountryPopulation","NodeType":2,"SourceType":"None","Children":[{"NodeName":"Total","NodeType":3,"SourceType":"Column","InputOrColumnName":"Total"},{"NodeName":"MalePercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"MalePercentage"},{"NodeName":"FemalePercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"FemalePercentage"},{"NodeName":"Density","NodeType":3,"SourceType":"Column","InputOrColumnName":"Density"},{"NodeName":"UrbanPercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"UrbanPercentage"},{"NodeName":"RuralPercentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"RuralPercentage"},{"NodeName":"Age0-14Percentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"Age0-14Percentage"},{"NodeName":"Age15-64Percentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"Age15-64Percentage"},{"NodeName":"Age65+Percentage","NodeType":3,"SourceType":"Column","InputOrColumnName":"Age65+Percentage"},{"NodeName":"MortalityInRoadTrafficPer100000","NodeType":3,"SourceType":"Column","InputOrColumnName":"MortalityInRoadTrafficPer100000"}]},{"NodeName":"Economic","NodeType":2,"SourceType":"None","Children":[{"NodeName":"GDPPerCapitaConstantLCU","NodeType":3,"SourceType":"Column","InputOrColumnName":"GDPPerCapitaConstantLCU"},{"NodeName":"GDPPerCapitaCurrentLCU","NodeType":3,"SourceType":"Column","InputOrColumnName":"GDPPerCapitaCurrentLCU"},{"NodeName":"Inflation","NodeType":3,"SourceType":"Column","InputOrColumnName":"Inflation"},{"NodeName":"UneploymentNationalEstimate","NodeType":3,"SourceType":"Column","InputOrColumnName":"UneploymentNationalEstimate"},{"NodeName":"UneploymentModeledILOEstimate","NodeType":3,"SourceType":"Column","InputOrColumnName":"UneploymentModeledILOEstimate"},{"NodeName":"DeparturesInInternationalTourism","NodeType":3,"SourceType":"Column","InputOrColumnName":"DeparturesInInternationalTourism"},{"NodeName":"ArrivalsInInternationalTourism","NodeType":3,"SourceType":"Column","InputOrColumnName":"ArrivalsInInternationalTourism"}]},{"NodeName":"Points","NodeType":1,"SourceType":"Input","InputOrColumnName":"Points","Children":[{"NodeType":2,"SourceType":"None","Children":[{"NodeName":"Latitude","NodeType":3,"SourceType":"Column","InputOrColumnName":"Latitude"},{"NodeName":"Longitude","NodeType":3,"SourceType":"Column","InputOrColumnName":"Longitude"},{"NodeName":"Timestamp","NodeType":3,"SourceType":"Column","InputOrColumnName":"Timestamp"},{"NodeName":"Region","NodeType":2,"SourceType":"None","Children":[{"NodeName":"Name","NodeType":3,"SourceType":"Column","InputOrColumnName":"Name"},{"NodeName":"ParentName","NodeType":3,"SourceType":"Column","InputOrColumnName":"ParentName"},{"NodeName":"Area","NodeType":3,"SourceType":"Column","InputOrColumnName":"Area"},{"NodeName":"Population","NodeType":3,"SourceType":"Column","InputOrColumnName":"Population"},{"NodeName":"Density","NodeType":3,"SourceType":"Column","InputOrColumnName":"Density"}]}]}]}]}]</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies if the linkId &amp; parentLinkId values used for merging child &amp; parent inputs are scrambled (true) or grouped (false)."
                  expressionType="Notify"
                  name="LinkIdsAreScrambled">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how to write null values in the merged document."
                  expressionType="Notify"
                  name="NullMode"
                  typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.JsonMergeNullMode">0</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how to write empty arrays in the merged document."
                  expressionType="Notify"
                  name="EmptyArrayMode"
                  typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.JsonEmptyArrayMode">1</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how to write empty objects in the merged document."
                  expressionType="Notify"
                  name="EmptyObjectMode"
                  typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.JsonEmptyObjectMode">1</property>
                <property
                  dataType="System.String"
                  description="Specifies the text qualifier to use when splitting values to be repeated in the final document."
                  expressionType="Notify"
                  name="IsRepeatedTextQualifier">Double-Quote ( " )</property>
                <property
                  dataType="System.String"
                  description="Specifies the text qualifier to use when splitting values to be repeated in the final document."
                  expressionType="Notify"
                  name="IsRepeatedTextDelimiter">Comma ( , )</property>
                <property
                  dataType="System.String"
                  description="The MongoDB Database to write to."
                  expressionType="Notify"
                  name="Database">Trajectories</property>
                <property
                  dataType="System.String"
                  description="The MongoDB Collection to write to."
                  expressionType="Notify"
                  name="Collection">Trajectory</property>
                <property
                  dataType="System.Int32"
                  description="Time Zone."
                  expressionType="Notify"
                  name="InputTimezone"
                  typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.TimeZone">2</property>
                <property
                  dataType="System.Int32"
                  description="The action to perform when writing to MongoDB."
                  expressionType="Notify"
                  name="Action"
                  typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.MongoDbAction">2</property>
                <property
                  dataType="System.Int32"
                  description="The number of documents to send at a time. Only applies to Insert action."
                  expressionType="Notify"
                  name="BatchSize">1000</property>
                <property
                  dataType="System.Int32"
                  description="The maximum number of operations that can be performed at a time. Specify 1 for no concurrency. Specify 0 for unlimited concurrent operations, although this may exceed thread pool limits."
                  expressionType="Notify"
                  name="MaxDegreeOfParallelism">1</property>
                <property
                  dataType="System.Boolean"
                  description="Specifies to send documents as raw text from a DT_NTEXT column."
                  name="InputAsRawText">false</property>
                <property
                  dataType="System.Int32"
                  description="Specifies how to match target documents for Update/Replace/Delete actions."
                  expressionType="Notify"
                  name="MatchByMode"
                  typeConverter="KingswaySoft.IntegrationToolkit.ProductivityPack.MongoDbMatchByMode">0</property>
                <property
                  dataType="System.String"
                  description="They query to use for matching documents for Update/Replace/Delete actions when 'Match By Mode' is 'Construct Query'"
                  expressionType="Notify"
                  name="MatchByQuery"></property>
                <property
                  dataType="System.Boolean"
                  description="Specifies if only one document should be Updated/Replaced/Deleted or if all matched documents should."
                  expressionType="Notify"
                  name="LimitMatchesToOne">false</property>
                <property
                  dataType="System.Boolean"
                  description="When matches yield no results, the record is inserted."
                  expressionType="Notify"
                  name="UseUpsert">true</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">KingswaySoft.IntegrationToolkit.ProductivityPack.MongoDbDestinationComponent</property>
                <property
                  dataType="System.Int32"
                  name="Encoding">65001</property>
              </properties>
              <connections>
                <connection
                  refId="Package\Hannover Data Flow\MongoDB Destination.Connections[MongoDB (KingswaySoft)]"
                  connectionManagerID="Package.ConnectionManagers[MongoDB Connection Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[MongoDB Connection Manager]"
                  description="MongoDB Connection Manager"
                  name="MongoDB (KingswaySoft)" />
              </connections>
              <inputs>
                <input
                  refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="RedirectRow"
                  hasSideEffects="true"
                  name="Root">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="ParentId"
                      name="ParentId">#{Package\Hannover Data Flow\-1:invalid}</property>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="ParentColumnId"
                      name="ParentColumnId">#{Package\Hannover Data Flow\-1:invalid}</property>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="IdField"
                      name="IdField">#{Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[_LinkId]}</property>
                  </properties>
                  <inputColumns>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[Length]"
                      cachedDataType="decimal"
                      cachedName="Length"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Length]"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[Length]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[Length]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[Length]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[Duration]"
                      cachedDataType="decimal"
                      cachedName="Duration"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Duration]"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[Duration]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[Duration]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[Duration]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[AverageSpeed]"
                      cachedDataType="decimal"
                      cachedName="AverageSpeed"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[AverageSpeed]"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[AverageSpeed]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[AverageSpeed]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[AverageSpeed]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[EndDate]"
                      cachedDataType="date"
                      cachedName="EndDate"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[EndDate]"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[EndDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[EndDate]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[EndDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[StartDate]"
                      cachedDataType="date"
                      cachedName="StartDate"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[StartDate]"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[StartDate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[StartDate]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[StartDate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[TrajectoryId]"
                      cachedDataType="i4"
                      cachedName="TrajectoryId"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[_LinkId]"
                      lineageId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0].Columns[TrajectoryId]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[TrajectoryId]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[TrajectoryId]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[IdInFile]"
                      cachedDataType="wstr"
                      cachedLength="6"
                      cachedName="IdInFile"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[IdInFile]"
                      lineageId="Package\Hannover Data Flow\IdInFile and city columns.Outputs[Derived Column Output].Columns[IdInFile]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[IdInFile]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[IdInFile]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[City]"
                      cachedDataType="wstr"
                      cachedLength="8"
                      cachedName="City"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[city]"
                      lineageId="Package\Hannover Data Flow\IdInFile and city columns.Outputs[Derived Column Output].Columns[City]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[City]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[City]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[AirPressure]"
                      cachedDataType="decimal"
                      cachedName="AirPressure"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[AirPressure]"
                      lineageId="Package\Hannover Data Flow\Add temperature, air pressure and humidity.Outputs[Output 0].Columns[AirPressure]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[AirPressure]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[AirPressure]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[Humidity]"
                      cachedDataType="decimal"
                      cachedName="Humidity"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Humidity]"
                      lineageId="Package\Hannover Data Flow\Add temperature, air pressure and humidity.Outputs[Output 0].Columns[Humidity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[Humidity]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[Humidity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[Temperature]"
                      cachedDataType="decimal"
                      cachedName="Temperature"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Temperature]"
                      lineageId="Package\Hannover Data Flow\Add temperature, air pressure and humidity.Outputs[Output 0].Columns[Temperature]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[Temperature]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[Temperature]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[WindDirection]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="WindDirection"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[WindDirection]"
                      lineageId="Package\Hannover Data Flow\Add wind speed and direction.Outputs[Output 0].Columns[WindDirection]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[WindDirection]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[WindDirection]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[WindSpeed]"
                      cachedDataType="decimal"
                      cachedName="WindSpeed"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[WindSpeed]"
                      lineageId="Package\Hannover Data Flow\Add wind speed and direction.Outputs[Output 0].Columns[WindSpeed]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[WindSpeed]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[WindSpeed]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[PrecipitationDuration]"
                      cachedDataType="decimal"
                      cachedName="PrecipitationDuration"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[PrecipitationDuration]"
                      lineageId="Package\Hannover Data Flow\Add precipitation.Outputs[Output 0].Columns[PrecipitationDuration]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[PrecipitationDuration]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[PrecipitationDuration]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[Precipitation]"
                      cachedDataType="decimal"
                      cachedName="Precipitation"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Precipitation]"
                      lineageId="Package\Hannover Data Flow\Add precipitation.Outputs[Output 0].Columns[Precipitation]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[Precipitation]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[Precipitation]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[GasolinePrice]"
                      cachedDataType="decimal"
                      cachedName="GasolinePrice"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[GasolinePrice]"
                      lineageId="Package\Hannover Data Flow\Add fuel prices.Outputs[Output 0].Columns[GasolinePrice]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[GasolinePrice]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[GasolinePrice]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[DieselPrice]"
                      cachedDataType="decimal"
                      cachedName="DieselPrice"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[DieselPrice]"
                      lineageId="Package\Hannover Data Flow\Add fuel prices.Outputs[Output 0].Columns[DieselPrice]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[DieselPrice]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[DieselPrice]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[ArrivalsInInternationalTourism]"
                      cachedDataType="i4"
                      cachedName="ArrivalsInInternationalTourism"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[ArrivalsInInternationalTourism]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[ArrivalsInInternationalTourism]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[ArrivalsInInternationalTourism]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[ArrivalsInInternationalTourism]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[DeparturesInInternationalTourism]"
                      cachedDataType="i4"
                      cachedName="DeparturesInInternationalTourism"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[DeparturesInInternationalTourism]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[DeparturesInInternationalTourism]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[DeparturesInInternationalTourism]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[DeparturesInInternationalTourism]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[UneploymentModeledILOEstimate]"
                      cachedDataType="decimal"
                      cachedName="UneploymentModeledILOEstimate"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[UneploymentModeledILOEstimate]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[UneploymentModeledILOEstimate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[UneploymentModeledILOEstimate]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[UneploymentModeledILOEstimate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[UneploymentNationalEstimate]"
                      cachedDataType="decimal"
                      cachedName="UneploymentNationalEstimate"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[UneploymentNationalEstimate]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[UneploymentNationalEstimate]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[UneploymentNationalEstimate]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[UneploymentNationalEstimate]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[Inflation]"
                      cachedDataType="decimal"
                      cachedName="Inflation"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Inflation]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[Inflation]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[Inflation]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[Inflation]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[GDPPerCapitaCurrentLCU]"
                      cachedDataType="decimal"
                      cachedName="GDPPerCapitaCurrentLCU"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[GDPPerCapitaCurrentLCU]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[GDPPerCapitaCurrentLCU]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[GDPPerCapitaCurrentLCU]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[GDPPerCapitaCurrentLCU]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[GDPPerCapitaConstantLCU]"
                      cachedDataType="decimal"
                      cachedName="GDPPerCapitaConstantLCU"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[GDPPerCapitaConstantLCU]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[GDPPerCapitaConstantLCU]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[GDPPerCapitaConstantLCU]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[GDPPerCapitaConstantLCU]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[MortalityInRoadTrafficPer100000]"
                      cachedDataType="decimal"
                      cachedName="MortalityInRoadTrafficPer100000"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[MortalityInRoadTrafficPer100000]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[MortalityInRoadTrafficPer100000]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[MortalityInRoadTrafficPer100000]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[MortalityInRoadTrafficPer100000]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[Age65+Percentage]"
                      cachedDataType="decimal"
                      cachedName="Age65+Percentage"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Age65+Percentage]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[Age65+Percentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[Age65+Percentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[Age65+Percentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[Age15-64Percentage]"
                      cachedDataType="decimal"
                      cachedName="Age15-64Percentage"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Age15-64Percentage]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[Age15-64Percentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[Age15-64Percentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[Age15-64Percentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[Age0-14Percentage]"
                      cachedDataType="decimal"
                      cachedName="Age0-14Percentage"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Age0-14Percentage]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[Age0-14Percentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[Age0-14Percentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[Age0-14Percentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[RuralPercentage]"
                      cachedDataType="decimal"
                      cachedName="RuralPercentage"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[RuralPercentage]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[RuralPercentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[RuralPercentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[RuralPercentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[UrbanPercentage]"
                      cachedDataType="decimal"
                      cachedName="UrbanPercentage"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[UrbanPercentage]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[UrbanPercentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[UrbanPercentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[UrbanPercentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[CountryDensity]"
                      cachedDataType="decimal"
                      cachedName="CountryDensity"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Density]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[CountryDensity]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[CountryDensity]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[CountryDensity]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[FemalePercentage]"
                      cachedDataType="decimal"
                      cachedName="FemalePercentage"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[FemalePercentage]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[FemalePercentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[FemalePercentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[FemalePercentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[MalePercentage]"
                      cachedDataType="decimal"
                      cachedName="MalePercentage"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[MalePercentage]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[MalePercentage]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[MalePercentage]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[MalePercentage]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].Columns[TotalPopulation]"
                      cachedDataType="i4"
                      cachedName="TotalPopulation"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Total]"
                      lineageId="Package\Hannover Data Flow\Add Context.Outputs[Output 0].Columns[TotalPopulation]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous error output column of this input column."
                          name="AsyncErrorOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[TotalPopulation]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          description="The asynchronous default output column of this input column."
                          name="AsyncDefaultOutputColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[TotalPopulation]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[_LinkId]"
                      dataType="wstr"
                      length="255"
                      name="_LinkId" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[IdInFile]"
                      dataType="wstr"
                      length="50"
                      name="IdInFile">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsMatchingField">true</property>
                      </properties>
                    </externalMetadataColumn>
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[StartDate]"
                      dataType="dbTimeStamp"
                      name="StartDate" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[EndDate]"
                      dataType="dbTimeStamp"
                      name="EndDate" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[AverageSpeed]"
                      dataType="decimal"
                      name="AverageSpeed" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Duration]"
                      dataType="decimal"
                      name="Duration" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Length]"
                      dataType="decimal"
                      name="Length" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[city]"
                      dataType="wstr"
                      length="50"
                      name="city" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Temperature]"
                      dataType="decimal"
                      name="Temperature" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[AirPressure]"
                      dataType="decimal"
                      name="AirPressure" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Humidity]"
                      dataType="decimal"
                      name="Humidity" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[WindSpeed]"
                      dataType="decimal"
                      name="WindSpeed" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[WindDirection]"
                      dataType="wstr"
                      length="50"
                      name="WindDirection" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Precipitation]"
                      dataType="decimal"
                      name="Precipitation" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[PrecipitationDuration]"
                      dataType="decimal"
                      name="PrecipitationDuration" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[GasolinePrice]"
                      dataType="decimal"
                      name="GasolinePrice" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[DieselPrice]"
                      dataType="decimal"
                      name="DieselPrice" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Total]"
                      dataType="i8"
                      name="Total" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[MalePercentage]"
                      dataType="decimal"
                      name="MalePercentage" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[FemalePercentage]"
                      dataType="decimal"
                      name="FemalePercentage" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Density]"
                      dataType="decimal"
                      name="Density" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[UrbanPercentage]"
                      dataType="decimal"
                      name="UrbanPercentage" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[RuralPercentage]"
                      dataType="decimal"
                      name="RuralPercentage" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Age0-14Percentage]"
                      dataType="decimal"
                      name="Age0-14Percentage" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Age15-64Percentage]"
                      dataType="decimal"
                      name="Age15-64Percentage" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Age65+Percentage]"
                      dataType="decimal"
                      name="Age65+Percentage" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[MortalityInRoadTrafficPer100000]"
                      dataType="decimal"
                      name="MortalityInRoadTrafficPer100000" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[GDPPerCapitaConstantLCU]"
                      dataType="decimal"
                      name="GDPPerCapitaConstantLCU" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[GDPPerCapitaCurrentLCU]"
                      dataType="decimal"
                      name="GDPPerCapitaCurrentLCU" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[Inflation]"
                      dataType="decimal"
                      name="Inflation" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[UneploymentNationalEstimate]"
                      dataType="decimal"
                      name="UneploymentNationalEstimate" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[UneploymentModeledILOEstimate]"
                      dataType="decimal"
                      name="UneploymentModeledILOEstimate" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[DeparturesInInternationalTourism]"
                      dataType="i8"
                      name="DeparturesInInternationalTourism" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root].ExternalColumns[ArrivalsInInternationalTourism]"
                      dataType="i8"
                      name="ArrivalsInInternationalTourism" />
                  </externalMetadataColumns>
                </input>
                <input
                  refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="Points">
                  <properties>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="ParentId"
                      name="ParentId">#{Package\Hannover Data Flow\MongoDB Destination.Inputs[Root]}</property>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="ParentColumnId"
                      name="ParentColumnId">#{Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[_Root.LinkId]}</property>
                    <property
                      containsID="true"
                      dataType="System.Int32"
                      description="IdField"
                      name="IdField">#{Package\Hannover Data Flow\-1:invalid}</property>
                  </properties>
                  <inputColumns>
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].Columns[gid]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="gid"
                      lineageId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output].Columns[gid]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].Columns[trip_id]"
                      cachedDataType="i4"
                      cachedName="trip_id"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[_Root.LinkId]"
                      lineageId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output].Columns[trip_id]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].Columns[unixtime]"
                      cachedDataType="i8"
                      cachedName="unixtime"
                      lineageId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output].Columns[unixtime]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].Columns[north_utm]"
                      cachedDataType="numeric"
                      cachedName="north_utm"
                      cachedPrecision="38"
                      lineageId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output].Columns[north_utm]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].Columns[east_utm]"
                      cachedDataType="numeric"
                      cachedName="east_utm"
                      cachedPrecision="38"
                      lineageId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output].Columns[east_utm]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].Columns[longitude]"
                      cachedDataType="decimal"
                      cachedName="longitude"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[Longitude]"
                      lineageId="Package\Hannover Data Flow\Coordinates and datetime conversion.Outputs[Output 0].Columns[longitude]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].Columns[latitude]"
                      cachedDataType="decimal"
                      cachedName="latitude"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[Latitude]"
                      lineageId="Package\Hannover Data Flow\Coordinates and datetime conversion.Outputs[Output 0].Columns[latitude]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].Columns[RegionArea]"
                      cachedDataType="decimal"
                      cachedName="RegionArea"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[Area]"
                      lineageId="Package\Hannover Data Flow\Add region.Outputs[Output 0].Columns[RegionArea]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].Columns[ParentRegionName]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="ParentRegionName"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[ParentName]"
                      lineageId="Package\Hannover Data Flow\Add region.Outputs[Output 0].Columns[ParentRegionName]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].Columns[RegionName]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="RegionName"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[Name]"
                      lineageId="Package\Hannover Data Flow\Add region.Outputs[Output 0].Columns[RegionName]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].Columns[RegionPopulation]"
                      cachedDataType="i4"
                      cachedName="RegionPopulation"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[Population]"
                      lineageId="Package\Hannover Data Flow\Add region.Outputs[Output 0].Columns[RegionPopulation]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].Columns[RegionDensity]"
                      cachedDataType="decimal"
                      cachedName="RegionDensity"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[Density]"
                      lineageId="Package\Hannover Data Flow\Add region.Outputs[Output 0].Columns[RegionDensity]" />
                    <inputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].Columns[datetime]"
                      cachedDataType="date"
                      cachedName="datetime"
                      externalMetadataColumnId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[Timestamp]"
                      lineageId="Package\Hannover Data Flow\Coordinates and datetime conversion.Outputs[Output 0].Columns[datetime]" />
                  </inputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[_Root.LinkId]"
                      dataType="wstr"
                      length="255"
                      name="_Root.LinkId" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[Latitude]"
                      dataType="decimal"
                      name="Latitude" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[Longitude]"
                      dataType="decimal"
                      name="Longitude" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[Timestamp]"
                      dataType="dbTimeStamp"
                      name="Timestamp" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[Name]"
                      dataType="wstr"
                      length="50"
                      name="Name" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[ParentName]"
                      dataType="wstr"
                      length="50"
                      name="ParentName" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[Area]"
                      dataType="decimal"
                      name="Area" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[Population]"
                      dataType="i8"
                      name="Population" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points].ExternalColumns[Density]"
                      dataType="decimal"
                      name="Density" />
                  </externalMetadataColumns>
                </input>
                <input
                  refId="Package\Hannover Data Flow\MongoDB Destination.Inputs[&lt;Create New Input&gt;]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="&lt;Create New Input&gt;">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="ParentId"
                      name="ParentId">-1</property>
                    <property
                      dataType="System.Int32"
                      description="ParentColumnId"
                      name="ParentColumnId">-1</property>
                    <property
                      dataType="System.Int32"
                      description="IdField"
                      name="IdField">-1</property>
                  </properties>
                  <externalMetadataColumns
                    isUsed="True" />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)]"
                  isErrorOut="true"
                  name="Error Output (Script Component)">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[ErrorMessage]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[ErrorMessage]"
                      name="ErrorMessage" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[Length]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[Length]"
                      name="Length"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[Duration]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[Duration]"
                      name="Duration"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[AverageSpeed]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[AverageSpeed]"
                      name="AverageSpeed"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[EndDate]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[EndDate]"
                      name="EndDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[StartDate]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[StartDate]"
                      name="StartDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[TrajectoryId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[TrajectoryId]"
                      name="TrajectoryId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[IdInFile]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="6"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[IdInFile]"
                      name="IdInFile"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[City]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="8"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[City]"
                      name="City"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[AirPressure]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[AirPressure]"
                      name="AirPressure"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[Humidity]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[Humidity]"
                      name="Humidity"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[Temperature]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[Temperature]"
                      name="Temperature"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[WindDirection]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[WindDirection]"
                      name="WindDirection"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[WindSpeed]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[WindSpeed]"
                      name="WindSpeed"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[PrecipitationDuration]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[PrecipitationDuration]"
                      name="PrecipitationDuration"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[Precipitation]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[Precipitation]"
                      name="Precipitation"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[GasolinePrice]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[GasolinePrice]"
                      name="GasolinePrice"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[DieselPrice]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[DieselPrice]"
                      name="DieselPrice"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[ArrivalsInInternationalTourism]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[ArrivalsInInternationalTourism]"
                      name="ArrivalsInInternationalTourism"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[DeparturesInInternationalTourism]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[DeparturesInInternationalTourism]"
                      name="DeparturesInInternationalTourism"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[UneploymentModeledILOEstimate]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[UneploymentModeledILOEstimate]"
                      name="UneploymentModeledILOEstimate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[UneploymentNationalEstimate]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[UneploymentNationalEstimate]"
                      name="UneploymentNationalEstimate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[Inflation]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[Inflation]"
                      name="Inflation"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[GDPPerCapitaCurrentLCU]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[GDPPerCapitaCurrentLCU]"
                      name="GDPPerCapitaCurrentLCU"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[GDPPerCapitaConstantLCU]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[GDPPerCapitaConstantLCU]"
                      name="GDPPerCapitaConstantLCU"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[MortalityInRoadTrafficPer100000]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[MortalityInRoadTrafficPer100000]"
                      name="MortalityInRoadTrafficPer100000"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[Age65+Percentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[Age65+Percentage]"
                      name="Age65+Percentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[Age15-64Percentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[Age15-64Percentage]"
                      name="Age15-64Percentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[Age0-14Percentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[Age0-14Percentage]"
                      name="Age0-14Percentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[RuralPercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[RuralPercentage]"
                      name="RuralPercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[UrbanPercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[UrbanPercentage]"
                      name="UrbanPercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[CountryDensity]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[CountryDensity]"
                      name="CountryDensity"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[FemalePercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[FemalePercentage]"
                      name="FemalePercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[MalePercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[MalePercentage]"
                      name="MalePercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[TotalPopulation]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Error Output (Script Component)].Columns[TotalPopulation]"
                      name="TotalPopulation"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)]"
                  name="Default Output (Script Component)">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[Length]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[Length]"
                      name="Length"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[Duration]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[Duration]"
                      name="Duration"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[AverageSpeed]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[AverageSpeed]"
                      name="AverageSpeed"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[EndDate]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[EndDate]"
                      name="EndDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[StartDate]"
                      dataType="date"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[StartDate]"
                      name="StartDate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[TrajectoryId]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[TrajectoryId]"
                      name="TrajectoryId"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[IdInFile]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="6"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[IdInFile]"
                      name="IdInFile"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[City]"
                      dataType="wstr"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="8"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[City]"
                      name="City"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[AirPressure]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[AirPressure]"
                      name="AirPressure"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[Humidity]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[Humidity]"
                      name="Humidity"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[Temperature]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[Temperature]"
                      name="Temperature"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[WindDirection]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      length="50"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[WindDirection]"
                      name="WindDirection"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[WindSpeed]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[WindSpeed]"
                      name="WindSpeed"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[PrecipitationDuration]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[PrecipitationDuration]"
                      name="PrecipitationDuration"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[Precipitation]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[Precipitation]"
                      name="Precipitation"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[GasolinePrice]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[GasolinePrice]"
                      name="GasolinePrice"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[DieselPrice]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[DieselPrice]"
                      name="DieselPrice"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[ArrivalsInInternationalTourism]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[ArrivalsInInternationalTourism]"
                      name="ArrivalsInInternationalTourism"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[DeparturesInInternationalTourism]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[DeparturesInInternationalTourism]"
                      name="DeparturesInInternationalTourism"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[UneploymentModeledILOEstimate]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[UneploymentModeledILOEstimate]"
                      name="UneploymentModeledILOEstimate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[UneploymentNationalEstimate]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[UneploymentNationalEstimate]"
                      name="UneploymentNationalEstimate"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[Inflation]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[Inflation]"
                      name="Inflation"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[GDPPerCapitaCurrentLCU]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[GDPPerCapitaCurrentLCU]"
                      name="GDPPerCapitaCurrentLCU"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[GDPPerCapitaConstantLCU]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[GDPPerCapitaConstantLCU]"
                      name="GDPPerCapitaConstantLCU"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[MortalityInRoadTrafficPer100000]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[MortalityInRoadTrafficPer100000]"
                      name="MortalityInRoadTrafficPer100000"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[Age65+Percentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[Age65+Percentage]"
                      name="Age65+Percentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[Age15-64Percentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[Age15-64Percentage]"
                      name="Age15-64Percentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[Age0-14Percentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[Age0-14Percentage]"
                      name="Age0-14Percentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[RuralPercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[RuralPercentage]"
                      name="RuralPercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[UrbanPercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[UrbanPercentage]"
                      name="UrbanPercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[CountryDensity]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[CountryDensity]"
                      name="CountryDensity"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[FemalePercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[FemalePercentage]"
                      name="FemalePercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[MalePercentage]"
                      dataType="decimal"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[MalePercentage]"
                      name="MalePercentage"
                      truncationRowDisposition="FailComponent" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[TotalPopulation]"
                      dataType="i4"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Default Output (Script Component)].Columns[TotalPopulation]"
                      name="TotalPopulation"
                      truncationRowDisposition="FailComponent" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output]"
                  isErrorOut="true"
                  name="Orphaned Children Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Input Name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Input Name]"
                      name="Input Name" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Column Name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Column Name]"
                      name="Column Name" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Column Value]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Column Value]"
                      name="Column Value" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Parent Input Name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Parent Input Name]"
                      name="Parent Input Name" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Parent Column Name]"
                      dataType="wstr"
                      length="255"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[Parent Column Name]"
                      name="Parent Column Name" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorMessage]"
                      dataType="wstr"
                      length="4000"
                      lineageId="Package\Hannover Data Flow\MongoDB Destination.Outputs[Orphaned Children Error Output].Columns[ErrorMessage]"
                      name="ErrorMessage" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Hannover Data Flow\Multicast"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast">
              <inputs>
                <input
                  refId="Package\Hannover Data Flow\Multicast.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Hannover Data Flow\Multicast.Outputs[Multicast Output 1]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Hannover Data Flow\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Hannover Data Flow\Multicast.Outputs[Multicast Output 3]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Hannover Data Flow\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Hannover Data Flow\Multicast.Outputs[Multicast Output 2]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Hannover Data Flow\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Hannover Data Flow\Multicast 1"
              componentClassID="Microsoft.Multicast"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
              name="Multicast 1">
              <inputs>
                <input
                  refId="Package\Hannover Data Flow\Multicast 1.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Hannover Data Flow\Multicast 1.Outputs[Multicast Output 1]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Hannover Data Flow\Multicast 1.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Hannover Data Flow\Multicast 1.Outputs[Multicast Output 3]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Hannover Data Flow\Multicast 1.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Hannover Data Flow\Multicast 1.Outputs[Multicast Output 2]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Hannover Data Flow\Multicast 1.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Hannover Data Flow\Points Source"
              componentClassID="Microsoft.FlatFileSource"
              contactInfo="Flat File Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
              description="Flat File Source"
              localeId="1045"
              name="Points Source"
              usesDispositions="true"
              version="1">
              <properties>
                <property
                  dataType="System.Boolean"
                  description="Specifies whether zero-length columns are treated as null."
                  name="RetainNulls">false</property>
                <property
                  dataType="System.String"
                  description="Specifies the name of an output column containing the file name. If no name is specified, no output column containing the file name will be generated."
                  name="FileNameColumnName"></property>
              </properties>
              <connections>
                <connection
                  refId="Package\Hannover Data Flow\Points Source.Connections[FlatFileConnection]"
                  connectionManagerID="Package.ConnectionManagers[Csv Trajectories Manager]"
                  connectionManagerRefId="Package.ConnectionManagers[Csv Trajectories Manager]"
                  name="FlatFileConnection" />
              </connections>
              <outputs>
                <output
                  refId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Output]"
                  name="Flat File Source Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Output].Columns[gid]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Output].ExternalColumns[gid]"
                      length="50"
                      lineageId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Output].Columns[gid]"
                      name="gid"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Output].Columns[trip_id]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Output].ExternalColumns[trip_id]"
                      length="50"
                      lineageId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Output].Columns[trip_id]"
                      name="trip_id"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Output].Columns[unixtime]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Output].ExternalColumns[unixtime]"
                      length="50"
                      lineageId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Output].Columns[unixtime]"
                      name="unixtime"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Output].Columns[north_utm]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Output].ExternalColumns[north_utm]"
                      length="50"
                      lineageId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Output].Columns[north_utm]"
                      name="north_utm"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Output].Columns[east_utm]"
                      codePage="1250"
                      dataType="str"
                      errorOrTruncationOperation="Conversion"
                      errorRowDisposition="FailComponent"
                      externalMetadataColumnId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Output].ExternalColumns[east_utm]"
                      length="50"
                      lineageId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Output].Columns[east_utm]"
                      name="east_utm"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                          name="FastParse">false</property>
                        <property
                          dataType="System.Boolean"
                          description="Indicates whether the data is in binary format."
                          name="UseBinaryFormat">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns
                    isUsed="True">
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Output].ExternalColumns[gid]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="gid" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Output].ExternalColumns[trip_id]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="trip_id" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Output].ExternalColumns[unixtime]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="unixtime" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Output].ExternalColumns[north_utm]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="north_utm" />
                    <externalMetadataColumn
                      refId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Output].ExternalColumns[east_utm]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      name="east_utm" />
                  </externalMetadataColumns>
                </output>
                <output
                  refId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Error Output]"
                  isErrorOut="true"
                  name="Flat File Source Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      codePage="1250"
                      dataType="text"
                      description="Flat File Source Error Output Column"
                      lineageId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Error Output].Columns[Flat File Source Error Output Column]"
                      name="Flat File Source Error Output Column" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Hannover Data Flow\String to numeric conversions"
              componentClassID="Microsoft.ManagedComponentHost"
              contactInfo="KingswaySoft Inc.; http://www.kingswaysoft.com; support@kingswaysoft.com; Copyright (c) 2021 KingswaySoft Inc."
              description="Convert data types."
              name="String to numeric conversions"
              usesDispositions="true"
              version="2">
              <properties>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">KingswaySoft.IntegrationToolkit.ProductivityPack.PremiumConversionComponent</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Hannover Data Flow\String to numeric conversions.Inputs[Primary Input]"
                  errorOrTruncationOperation="Insert"
                  errorRowDisposition="FailComponent"
                  hasSideEffects="true"
                  name="Primary Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Hannover Data Flow\String to numeric conversions.Inputs[Primary Input].Columns[gid]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="gid"
                      lineageId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Output].Columns[gid]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          name="OutputColumnLineageId">#{Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output].Columns[gid]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          name="ErrorOutputColumnLineageId">#{Package\Hannover Data Flow\String to numeric conversions.Outputs[Error Output].Columns[gid]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\String to numeric conversions.Inputs[Primary Input].Columns[trip_id]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="trip_id"
                      lineageId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Output].Columns[trip_id]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          name="OutputColumnLineageId">#{Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output].Columns[trip_id]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          name="ErrorOutputColumnLineageId">#{Package\Hannover Data Flow\String to numeric conversions.Outputs[Error Output].Columns[trip_id]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\String to numeric conversions.Inputs[Primary Input].Columns[unixtime]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="unixtime"
                      lineageId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Output].Columns[unixtime]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          name="OutputColumnLineageId">#{Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output].Columns[unixtime]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          name="ErrorOutputColumnLineageId">#{Package\Hannover Data Flow\String to numeric conversions.Outputs[Error Output].Columns[unixtime]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\String to numeric conversions.Inputs[Primary Input].Columns[north_utm]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="north_utm"
                      lineageId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Output].Columns[north_utm]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          name="OutputColumnLineageId">#{Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output].Columns[north_utm]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          name="ErrorOutputColumnLineageId">#{Package\Hannover Data Flow\String to numeric conversions.Outputs[Error Output].Columns[north_utm]}</property>
                      </properties>
                    </inputColumn>
                    <inputColumn
                      refId="Package\Hannover Data Flow\String to numeric conversions.Inputs[Primary Input].Columns[east_utm]"
                      cachedCodepage="1250"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="east_utm"
                      lineageId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Output].Columns[east_utm]">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          name="OutputColumnLineageId">#{Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output].Columns[east_utm]}</property>
                        <property
                          containsID="true"
                          dataType="System.Int32"
                          name="ErrorOutputColumnLineageId">#{Package\Hannover Data Flow\String to numeric conversions.Outputs[Error Output].Columns[east_utm]}</property>
                      </properties>
                    </inputColumn>
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Error Output]"
                  isErrorOut="true"
                  name="Error Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Error Output].Columns[ErrorCode]"
                      dataType="i4"
                      lineageId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Error Output].Columns[ErrorCode]"
                      name="ErrorCode"
                      specialFlags="1" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Error Output].Columns[ErrorColumn]"
                      dataType="i4"
                      lineageId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Error Output].Columns[ErrorColumn]"
                      name="ErrorColumn"
                      specialFlags="2" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Error Output].Columns[ErrorMessage]"
                      dataType="wstr"
                      length="2048"
                      lineageId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Error Output].Columns[ErrorMessage]"
                      name="ErrorMessage" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Error Output].Columns[gid]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Error Output].Columns[gid]"
                      name="gid" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Error Output].Columns[trip_id]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Error Output].Columns[trip_id]"
                      name="trip_id" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Error Output].Columns[unixtime]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Error Output].Columns[unixtime]"
                      name="unixtime" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Error Output].Columns[north_utm]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Error Output].Columns[north_utm]"
                      name="north_utm" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Error Output].Columns[east_utm]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Error Output].Columns[east_utm]"
                      name="east_utm" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output]"
                  name="Default Output">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output].Columns[gid]"
                      codePage="1250"
                      dataType="str"
                      length="50"
                      lineageId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output].Columns[gid]"
                      name="gid" />
                    <outputColumn
                      refId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output].Columns[trip_id]"
                      dataType="i4"
                      lineageId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output].Columns[trip_id]"
                      name="trip_id">
                      <properties>
                        <property
                          dataType="System.String"
                          description="FormatString"
                          name="FormatString"></property>
                        <property
                          dataType="System.Boolean"
                          description="IgnoreCastException"
                          name="IgnoreCastException">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output].Columns[unixtime]"
                      dataType="i8"
                      lineageId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output].Columns[unixtime]"
                      name="unixtime">
                      <properties>
                        <property
                          dataType="System.Null"
                          description="FormatString"
                          name="FormatString" />
                        <property
                          dataType="System.Boolean"
                          description="IgnoreCastException"
                          name="IgnoreCastException">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output].Columns[north_utm]"
                      dataType="numeric"
                      lineageId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output].Columns[north_utm]"
                      name="north_utm"
                      precision="38">
                      <properties>
                        <property
                          dataType="System.String"
                          description="FormatString"
                          name="FormatString"></property>
                        <property
                          dataType="System.Boolean"
                          description="IgnoreCastException"
                          name="IgnoreCastException">false</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output].Columns[east_utm]"
                      dataType="numeric"
                      lineageId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output].Columns[east_utm]"
                      name="east_utm"
                      precision="38">
                      <properties>
                        <property
                          dataType="System.String"
                          description="FormatString"
                          name="FormatString"></property>
                        <property
                          dataType="System.Boolean"
                          description="IgnoreCastException"
                          name="IgnoreCastException">false</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Hannover Data Flow.Paths[Default Output]"
              endId="Package\Hannover Data Flow\Coordinates and datetime conversion.Inputs[Input 0]"
              name="Default Output"
              startId="Package\Hannover Data Flow\String to numeric conversions.Outputs[Default Output]" />
            <path
              refId="Package\Hannover Data Flow.Paths[Derived Column Output]"
              endId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Root]"
              name="Derived Column Output"
              startId="Package\Hannover Data Flow\Add CosmosDbId field.Outputs[Derived Column Output]" />
            <path
              refId="Package\Hannover Data Flow.Paths[Derived Column Output1]"
              endId="Package\Hannover Data Flow\Add temperature, air pressure and humidity.Inputs[Input 0]"
              name="Derived Column Output"
              startId="Package\Hannover Data Flow\IdInFile and city columns.Outputs[Derived Column Output]" />
            <path
              refId="Package\Hannover Data Flow.Paths[Flat File Source Output]"
              endId="Package\Hannover Data Flow\String to numeric conversions.Inputs[Primary Input]"
              name="Flat File Source Output"
              startId="Package\Hannover Data Flow\Points Source.Outputs[Flat File Source Output]" />
            <path
              refId="Package\Hannover Data Flow.Paths[Multicast Output 1]"
              endId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Points]"
              name="Multicast Output 1"
              startId="Package\Hannover Data Flow\Multicast 1.Outputs[Multicast Output 1]" />
            <path
              refId="Package\Hannover Data Flow.Paths[Multicast Output 11]"
              endId="Package\Hannover Data Flow\MongoDB Destination.Inputs[Root]"
              name="Multicast Output 1"
              startId="Package\Hannover Data Flow\Multicast.Outputs[Multicast Output 1]" />
            <path
              refId="Package\Hannover Data Flow.Paths[Multicast Output 3]"
              endId="Package\Hannover Data Flow\Add CosmosDbId field.Inputs[Derived Column Input]"
              name="Multicast Output 3"
              startId="Package\Hannover Data Flow\Multicast.Outputs[Multicast Output 3]" />
            <path
              refId="Package\Hannover Data Flow.Paths[Multicast Output 31]"
              endId="Package\Hannover Data Flow\CosmosDB Destination.Inputs[Points]"
              name="Multicast Output 3"
              startId="Package\Hannover Data Flow\Multicast 1.Outputs[Multicast Output 3]" />
            <path
              refId="Package\Hannover Data Flow.Paths[Output 0]"
              endId="Package\Hannover Data Flow\IdInFile and city columns.Inputs[Derived Column Input]"
              name="Output 0"
              startId="Package\Hannover Data Flow\Load Hannover trajectories.Outputs[Output 0]" />
            <path
              refId="Package\Hannover Data Flow.Paths[Output 01]"
              endId="Package\Hannover Data Flow\Add wind speed and direction.Inputs[Input 0]"
              name="Output 0"
              startId="Package\Hannover Data Flow\Add temperature, air pressure and humidity.Outputs[Output 0]" />
            <path
              refId="Package\Hannover Data Flow.Paths[Output 02]"
              endId="Package\Hannover Data Flow\Add precipitation.Inputs[Input 0]"
              name="Output 0"
              startId="Package\Hannover Data Flow\Add wind speed and direction.Outputs[Output 0]" />
            <path
              refId="Package\Hannover Data Flow.Paths[Output 03]"
              endId="Package\Hannover Data Flow\Add fuel prices.Inputs[Input 0]"
              name="Output 0"
              startId="Package\Hannover Data Flow\Add precipitation.Outputs[Output 0]" />
            <path
              refId="Package\Hannover Data Flow.Paths[Output 04]"
              endId="Package\Hannover Data Flow\Add region.Inputs[Input 0]"
              name="Output 0"
              startId="Package\Hannover Data Flow\Coordinates and datetime conversion.Outputs[Output 0]" />
            <path
              refId="Package\Hannover Data Flow.Paths[Output 05]"
              endId="Package\Hannover Data Flow\Multicast 1.Inputs[Multicast Input 1]"
              name="Output 0"
              startId="Package\Hannover Data Flow\Add region.Outputs[Output 0]" />
            <path
              refId="Package\Hannover Data Flow.Paths[Output 06]"
              endId="Package\Hannover Data Flow\Add Context.Inputs[Input 0]"
              name="Output 0"
              startId="Package\Hannover Data Flow\Add fuel prices.Outputs[Output 0]" />
            <path
              refId="Package\Hannover Data Flow.Paths[Output 07]"
              endId="Package\Hannover Data Flow\Multicast.Inputs[Multicast Input 1]"
              name="Output 0"
              startId="Package\Hannover Data Flow\Add Context.Outputs[Output 0]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{6CD803DE-AEF5-404D-93D3-9FE26EA99945}"
      DTS:From="Package\Hannover Data Flow"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Geolife Data Flow" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="150,42"
          Id="Package\Foreach Geolife file\Data Flow Task"
          TopLeft="5.5,5.5" />
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="380,176"
          Size="380,219"
          Id="Package\Foreach Geolife file"
          TopLeft="25.142856274636,483.352941262938" />
        <NodeLayout
          Size="162,42"
          Id="Package\Geolife Data Flow"
          TopLeft="483.714286024473,129.529411717785" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="339.714285417783,120.47058827082">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="144.00000060669,30.0588234469655"
              Start="0,0"
              End="136.50000060669,30.0588234469655">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="68.000000303345,0" />
                  <mssgle:CubicBezierSegment
                    Point1="68.000000303345,0"
                    Point2="72.000000303345,0"
                    Point3="72.000000303345,4" />
                  <mssgle:LineSegment
                    End="72.000000303345,26.0588234469655" />
                  <mssgle:CubicBezierSegment
                    Point1="72.000000303345,26.0588234469655"
                    Point2="72.000000303345,30.0588234469655"
                    Point3="76.000000303345,30.0588234469655" />
                  <mssgle:LineSegment
                    End="136.50000060669,30.0588234469655" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="175,42"
          Id="Package\Hannover Data Flow"
          TopLeft="164.714285417783,99.4705882708198" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Geolife file\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="148,42"
          Id="Package\Foreach Geolife file\Data Flow Task\Add fuel prices"
          TopLeft="80.357143352835,413.464705699362" />
        <NodeLayout
          Size="139,42"
          Id="Package\Foreach Geolife file\Data Flow Task\Add weather"
          TopLeft="87,339" />
        <NodeLayout
          Size="180,42"
          Id="Package\Foreach Geolife file\Data Flow Task\MongoDB Destination"
          TopLeft="287,953" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Geolife file\Data Flow Task\Derived Column"
          TopLeft="294,574" />
        <NodeLayout
          Size="193,42"
          Id="Package\Foreach Geolife file\Data Flow Task\Load Geolife trajectories"
          TopLeft="60,175" />
        <NodeLayout
          Size="120,45"
          Id="Package\Foreach Geolife file\Data Flow Task\Multicast"
          TopLeft="81.5714284938815,598.627450951792" />
        <NodeLayout
          Size="202,42"
          Id="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source"
          TopLeft="506,60" />
        <NodeLayout
          Size="130,42"
          Id="Package\Foreach Geolife file\Data Flow Task\Add region"
          TopLeft="555,415" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Geolife file\Data Flow Task\Create datetime"
          TopLeft="536,337" />
        <NodeLayout
          Size="187,42"
          Id="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal"
          TopLeft="517,140" />
        <NodeLayout
          Size="185,42"
          Id="Package\Foreach Geolife file\Data Flow Task\CosmosDB Destination"
          TopLeft="284,765" />
        <NodeLayout
          Size="197,42"
          Id="Package\Foreach Geolife file\Data Flow Task\IdInFile and city columns"
          TopLeft="64,248" />
        <NodeLayout
          Size="130,42"
          Id="Package\Foreach Geolife file\Data Flow Task\Multicast 1"
          TopLeft="548,487" />
        <NodeLayout
          Size="137,42"
          Id="Package\Foreach Geolife file\Data Flow Task\Add Context"
          TopLeft="81,495.398692807479" />
        <NodeLayout
          Size="226,42"
          Id="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories"
          TopLeft="495,233" />
        <EdgeLayout
          Id="Package\Foreach Geolife file\Data Flow Task.Paths[Output 05]"
          TopLeft="159.5,217">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31"
              Start="0,0"
              End="0,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Geolife file\Data Flow Task.Paths[Output 04]"
          TopLeft="155.428571676418,381">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32.464705699362"
              Start="0,0"
              End="0,24.964705699362">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.964705699362" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Geolife file\Data Flow Task.Paths[Output 03]"
          TopLeft="616.5,379">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,36"
              Start="0,0"
              End="0,28.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,28.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Geolife file\Data Flow Task.Paths[Output 02]"
          TopLeft="616.5,457">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Geolife file\Data Flow Task.Paths[Output 01]"
          TopLeft="151.878571676417,455.064705699362">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,40.3339871081165"
              Start="0,0"
              End="0,32.8339871081165">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.8339871081165" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Geolife file\Data Flow Task.Paths[Output 0]"
          TopLeft="145.485714246941,536.998692807479">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,61.6287581443138"
              Start="0,0"
              End="0,54.1287581443138">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.1287581443138" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Geolife file\Data Flow Task.Paths[Multicast Output 3]"
          TopLeft="633.333333333333,529">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-227.666666666667,424"
              Start="0,0"
              End="-227.666666666667,416.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,208.882597835137" />
                  <mssgle:CubicBezierSegment
                    Point1="0,208.882597835137"
                    Point2="0,212.882597835137"
                    Point3="-4,212.882597835137" />
                  <mssgle:LineSegment
                    End="-223.666666666667,212.882597835137" />
                  <mssgle:CubicBezierSegment
                    Point1="-223.666666666667,212.882597835137"
                    Point2="-227.666666666667,212.882597835137"
                    Point3="-227.666666666667,216.882597835137" />
                  <mssgle:LineSegment
                    End="-227.666666666667,416.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Geolife file\Data Flow Task.Paths[Multicast Output 2]"
          TopLeft="141.571428493882,643.427450951792">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="206.761904839452,309.572549048208"
              Start="0,0"
              End="206.761904839452,302.072549048208">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,180.107022561709" />
                  <mssgle:CubicBezierSegment
                    Point1="0,180.107022561709"
                    Point2="0,184.107022561709"
                    Point3="4,184.107022561709" />
                  <mssgle:LineSegment
                    End="202.761904839452,184.107022561709" />
                  <mssgle:CubicBezierSegment
                    Point1="202.761904839452,184.107022561709"
                    Point2="206.761904839452,184.107022561709"
                    Point3="206.761904839452,188.107022561709" />
                  <mssgle:LineSegment
                    End="206.761904839452,302.072549048208" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Geolife file\Data Flow Task.Paths[Multicast Output 11]"
          TopLeft="201.571428493882,621.027450951792">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="92.4285715061185,-26.2274509517924"
              Start="0,0"
              End="84.9285715061185,-26.2274509517924">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="42.2142857530592,0" />
                  <mssgle:CubicBezierSegment
                    Point1="42.2142857530592,0"
                    Point2="46.2142857530592,0"
                    Point3="46.2142857530592,-4" />
                  <mssgle:LineSegment
                    End="46.2142857530592,-22.2274509517924" />
                  <mssgle:CubicBezierSegment
                    Point1="46.2142857530592,-22.2274509517924"
                    Point2="46.2142857530592,-26.2274509517924"
                    Point3="50.2142857530592,-26.2274509517924" />
                  <mssgle:LineSegment
                    End="84.9285715061185,-26.2274509517924" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Geolife file\Data Flow Task.Paths[Multicast Output 1]"
          TopLeft="592.666666666667,529">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-186.666666666667,236"
              Start="0,0"
              End="-186.666666666667,228.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,114.525931928687" />
                  <mssgle:CubicBezierSegment
                    Point1="0,114.525931928687"
                    Point2="0,118.525931928687"
                    Point3="-4,118.525931928687" />
                  <mssgle:LineSegment
                    End="-182.666666666667,118.525931928687" />
                  <mssgle:CubicBezierSegment
                    Point1="-182.666666666667,118.525931928687"
                    Point2="-186.666666666667,118.525931928687"
                    Point3="-186.666666666667,122.525931928687" />
                  <mssgle:LineSegment
                    End="-186.666666666667,228.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Geolife file\Data Flow Task.Paths[Flat File Source Output]"
          TopLeft="608.75,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Geolife file\Data Flow Task.Paths[Derived Column Output1]"
          TopLeft="159.5,290">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49"
              Start="0,0"
              End="0,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Geolife file\Data Flow Task.Paths[Derived Column Output]"
          TopLeft="371,616">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-24,149"
              Start="0,0"
              End="-24,141.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,84.6334405144695" />
                  <mssgle:CubicBezierSegment
                    Point1="0,84.6334405144695"
                    Point2="0,88.6334405144695"
                    Point3="-4,88.6334405144695" />
                  <mssgle:LineSegment
                    End="-20,88.6334405144695" />
                  <mssgle:CubicBezierSegment
                    Point1="-20,88.6334405144695"
                    Point2="-24,88.6334405144695"
                    Point3="-24,92.6334405144695" />
                  <mssgle:LineSegment
                    End="-24,141.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Geolife file\Data Flow Task.Paths[Default Output]"
          TopLeft="609.25,182">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51"
              Start="0,0"
              End="0,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Geolife file\Data Flow Task.Paths[Beijing trajectories]"
          TopLeft="610.5,275">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,62"
              Start="0,0"
              End="0,54.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-41.562578125,21.5576171875,83.12515625,11.384765625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="202,42"
          Id="Package\Foreach Geolife file\Data Flow Task\Geolife trajectories source 1"
          TopLeft="564,808" />
        <NodeLayout
          Size="154,42"
          Id="Package\Foreach Geolife file\Data Flow Task\Create datetime 1"
          TopLeft="594,1085" />
        <NodeLayout
          Size="187,42"
          Id="Package\Foreach Geolife file\Data Flow Task\Coordinates to decimal 1"
          TopLeft="575,888" />
        <NodeLayout
          Size="226,42"
          Id="Package\Foreach Geolife file\Data Flow Task\Discard non-Beijing trajectories 1"
          TopLeft="553,981" />
        <EdgeLayout
          Id="Package\Foreach Geolife file\Data Flow Task.Paths[Flat File Source Output1]"
          TopLeft="666.75,850">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38"
              Start="0,0"
              End="0,30.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Geolife file\Data Flow Task.Paths[Default Output1]"
          TopLeft="667.25,930">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,51"
              Start="0,0"
              End="0,43.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Geolife file\Data Flow Task.Paths[Beijing trajectories1]"
          TopLeft="668.5,1023">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,62"
              Start="0,0"
              End="0,54.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,54.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-41.562578125,21.5576171875,83.12515625,11.384765625"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Geolife Data Flow">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="148,42"
          Id="Package\Geolife Data Flow\Add fuel prices"
          TopLeft="135.357143352835,387.464705699362" />
        <NodeLayout
          Size="139,42"
          Id="Package\Geolife Data Flow\Add weather"
          TopLeft="142,313" />
        <NodeLayout
          Size="154,42"
          Id="Package\Geolife Data Flow\Derived Column"
          TopLeft="266,550" />
        <NodeLayout
          Size="193,42"
          Id="Package\Geolife Data Flow\Load Geolife trajectories"
          TopLeft="114,150" />
        <NodeLayout
          Size="130,42"
          Id="Package\Geolife Data Flow\Add region"
          TopLeft="464,393" />
        <NodeLayout
          Size="185,42"
          Id="Package\Geolife Data Flow\CosmosDB Destination"
          TopLeft="287,694" />
        <NodeLayout
          Size="197,42"
          Id="Package\Geolife Data Flow\IdInFile and city columns"
          TopLeft="119,222" />
        <NodeLayout
          Size="137,42"
          Id="Package\Geolife Data Flow\Add Context"
          TopLeft="136,469.398692807479" />
        <EdgeLayout
          Id="Package\Geolife Data Flow.Paths[Output 02]"
          TopLeft="206.928571676418,429.464705699362">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,39.933987108117"
              Start="0,0"
              End="0,32.433987108117">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.433987108117" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Geolife Data Flow.Paths[Output 01]"
          TopLeft="210.428571676418,355">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,32.464705699362"
              Start="0,0"
              End="0,24.964705699362">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.964705699362" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Geolife Data Flow.Paths[Output 0]"
          TopLeft="214,192">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30"
              Start="0,0"
              End="0,22.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Geolife Data Flow.Paths[Derived Column Output1]"
          TopLeft="346.5,592">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,102"
              Start="0,0"
              End="0,94.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,94.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Geolife Data Flow.Paths[Derived Column Output]"
          TopLeft="214.5,264">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49"
              Start="0,0"
              End="0,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="270,42"
          Id="Package\Geolife Data Flow\MongoDB Destination"
          TopLeft="310,887" />
        <NodeLayout
          Size="120,42"
          Id="Package\Geolife Data Flow\Multicast"
          TopLeft="118,557" />
        <EdgeLayout
          Id="Package\Geolife Data Flow.Paths[Output 03]"
          TopLeft="204.5,511.398692807479">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-26.5,45.601307192521"
              Start="0,0"
              End="-26.5,38.101307192521">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.8006535962605" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.8006535962605"
                    Point2="0,22.8006535962605"
                    Point3="-4,22.8006535962605" />
                  <mssgle:LineSegment
                    End="-22.5,22.8006535962605" />
                  <mssgle:CubicBezierSegment
                    Point1="-22.5,22.8006535962605"
                    Point2="-26.5,22.8006535962605"
                    Point3="-26.5,26.8006535962605" />
                  <mssgle:LineSegment
                    End="-26.5,38.101307192521" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Geolife Data Flow.Paths[Multicast Output 1]"
          TopLeft="238,574.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="28,0"
              Start="0,0"
              End="20.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="20.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Geolife Data Flow.Paths[Multicast Output 2]"
          TopLeft="178,599">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="223.333333333333,288"
              Start="0,0"
              End="223.333333333333,280.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,167.782032400589" />
                  <mssgle:CubicBezierSegment
                    Point1="0,167.782032400589"
                    Point2="0,171.782032400589"
                    Point3="4,171.782032400589" />
                  <mssgle:LineSegment
                    End="219.333333333333,171.782032400589" />
                  <mssgle:CubicBezierSegment
                    Point1="219.333333333333,171.782032400589"
                    Point2="223.333333333333,171.782032400589"
                    Point3="223.333333333333,175.782032400589" />
                  <mssgle:LineSegment
                    End="223.333333333333,280.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="163,42"
          Id="Package\Geolife Data Flow\Script Component"
          TopLeft="421.5,127.5" />
        <EdgeLayout
          Id="Package\Geolife Data Flow.Paths[Output 04]"
          TopLeft="503,169.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="26,223.5"
              Start="0,0"
              End="26,216">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,107.75" />
                  <mssgle:CubicBezierSegment
                    Point1="0,107.75"
                    Point2="0,111.75"
                    Point3="4,111.75" />
                  <mssgle:LineSegment
                    End="22,111.75" />
                  <mssgle:CubicBezierSegment
                    Point1="22,111.75"
                    Point2="26,111.75"
                    Point3="26,115.75" />
                  <mssgle:LineSegment
                    End="26,216" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="130,42"
          Id="Package\Geolife Data Flow\Multicast 1"
          TopLeft="551,488" />
        <EdgeLayout
          Id="Package\Geolife Data Flow.Paths[Output 05]"
          TopLeft="529,435">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="87,53"
              Start="0,0"
              End="87,45.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.5"
                    Point2="0,26.5"
                    Point3="4,26.5" />
                  <mssgle:LineSegment
                    End="83,26.5" />
                  <mssgle:CubicBezierSegment
                    Point1="83,26.5"
                    Point2="87,26.5"
                    Point3="87,30.5" />
                  <mssgle:LineSegment
                    End="87,45.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Geolife Data Flow.Paths[Multicast Output 11]"
          TopLeft="595.666666666667,530">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-186.666666666667,164"
              Start="0,0"
              End="-186.666666666667,156.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,78.3654781199351" />
                  <mssgle:CubicBezierSegment
                    Point1="0,78.3654781199351"
                    Point2="0,82.3654781199351"
                    Point3="-4,82.3654781199351" />
                  <mssgle:LineSegment
                    End="-182.666666666667,82.3654781199351" />
                  <mssgle:CubicBezierSegment
                    Point1="-182.666666666667,82.3654781199351"
                    Point2="-186.666666666667,82.3654781199351"
                    Point3="-186.666666666667,86.3654781199351" />
                  <mssgle:LineSegment
                    End="-186.666666666667,156.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Geolife Data Flow.Paths[Multicast Output 21]"
          TopLeft="636.333333333333,530">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-147.666666666667,357"
              Start="0,0"
              End="-147.666666666667,349.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,175.892200557103" />
                  <mssgle:CubicBezierSegment
                    Point1="0,175.892200557103"
                    Point2="0,179.892200557103"
                    Point3="-4,179.892200557103" />
                  <mssgle:LineSegment
                    End="-143.666666666667,179.892200557103" />
                  <mssgle:CubicBezierSegment
                    Point1="-143.666666666667,179.892200557103"
                    Point2="-147.666666666667,179.892200557103"
                    Point3="-147.666666666667,183.892200557103" />
                  <mssgle:LineSegment
                    End="-147.666666666667,349.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Hannover Data Flow">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="185,42"
          Id="Package\Hannover Data Flow\CosmosDB Destination"
          TopLeft="314,692" />
        <NodeLayout
          Size="130,42"
          Id="Package\Hannover Data Flow\Multicast 1"
          TopLeft="583,625" />
        <NodeLayout
          Size="206,42"
          Id="Package\Hannover Data Flow\Load Hannover trajectories"
          TopLeft="55.5,46.5" />
        <NodeLayout
          Size="183,42"
          Id="Package\Hannover Data Flow\Add CosmosDbId field"
          TopLeft="280,607" />
        <NodeLayout
          Size="219,42"
          Id="Package\Hannover Data Flow\String to numeric conversions"
          TopLeft="436,111" />
        <NodeLayout
          Size="120,42"
          Id="Package\Hannover Data Flow\Multicast"
          TopLeft="103,605" />
        <NodeLayout
          Size="130,42"
          Id="Package\Hannover Data Flow\Add region"
          TopLeft="577,318" />
        <NodeLayout
          Size="254,42"
          Id="Package\Hannover Data Flow\Coordinates and datetime conversion"
          TopLeft="412,202" />
        <NodeLayout
          Size="197,42"
          Id="Package\Hannover Data Flow\IdInFile and city columns"
          TopLeft="54,137" />
        <NodeLayout
          Size="285,42"
          Id="Package\Hannover Data Flow\Add temperature, air pressure and humidity"
          TopLeft="16.5,222.5" />
        <NodeLayout
          Size="158,42"
          Id="Package\Hannover Data Flow\Add precipitation"
          TopLeft="78.5000000149012,382.814873715745" />
        <NodeLayout
          Size="180,42"
          Id="Package\Hannover Data Flow\MongoDB Destination"
          TopLeft="276.5,836.5" />
        <NodeLayout
          Size="143,42"
          Id="Package\Hannover Data Flow\Points Source"
          TopLeft="463,32" />
        <NodeLayout
          Size="148,42"
          Id="Package\Hannover Data Flow\Add fuel prices"
          TopLeft="86.499996125698,459.356157401897" />
        <NodeLayout
          Size="137,42"
          Id="Package\Hannover Data Flow\Add Context"
          TopLeft="89.5,531.5" />
        <NodeLayout
          Size="218,42"
          Id="Package\Hannover Data Flow\Add wind speed and direction"
          TopLeft="52.5,311.5" />
        <EdgeLayout
          Id="Package\Hannover Data Flow.Paths[Derived Column Output]"
          TopLeft="374.25,649">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43"
              Start="0,0"
              End="0,35.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Hannover Data Flow.Paths[Default Output]"
          TopLeft="542.25,153">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,49"
              Start="0,0"
              End="0,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Hannover Data Flow.Paths[Output 07]"
          TopLeft="160.5,573.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,31.5"
              Start="0,0"
              End="0,24">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Hannover Data Flow.Paths[Output 06]"
          TopLeft="159.249998062849,501.356157401897">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,30.143842598103"
              Start="0,0"
              End="0,22.643842598103">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.643842598103" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Hannover Data Flow.Paths[Output 05]"
          TopLeft="645,360">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,265"
              Start="0,0"
              End="0,257.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,257.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Hannover Data Flow.Paths[Output 04]"
          TopLeft="539,244">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="103,74"
              Start="0,0"
              End="103,66.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,33" />
                  <mssgle:CubicBezierSegment
                    Point1="0,33"
                    Point2="0,37"
                    Point3="4,37" />
                  <mssgle:LineSegment
                    End="99,37" />
                  <mssgle:CubicBezierSegment
                    Point1="99,37"
                    Point2="103,37"
                    Point3="103,41" />
                  <mssgle:LineSegment
                    End="103,66.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Hannover Data Flow.Paths[Output 03]"
          TopLeft="158.9999980703,424.814873715745">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,34.541283686152"
              Start="0,0"
              End="0,27.041283686152">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.041283686152" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Hannover Data Flow.Paths[Output 02]"
          TopLeft="159.500000007451,353.1">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,29.7148737157451"
              Start="0,0"
              End="0,22.2148737157451">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.2148737157451" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Hannover Data Flow.Paths[Output 01]"
          TopLeft="160.25,264.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47"
              Start="0,0"
              End="0,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Hannover Data Flow.Paths[Output 0]"
          TopLeft="155.5,88.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,48.5"
              Start="0,0"
              End="0,41">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,41" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Hannover Data Flow.Paths[Multicast Output 31]"
          TopLeft="668.333333333333,667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-232.333333333333,25"
              Start="0,0"
              End="-232.333333333333,17.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.55571312803889" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.55571312803889"
                    Point2="0,12.5557131280389"
                    Point3="-4,12.5557131280389" />
                  <mssgle:LineSegment
                    End="-228.333333333333,12.5557131280389" />
                  <mssgle:CubicBezierSegment
                    Point1="-228.333333333333,12.5557131280389"
                    Point2="-232.333333333333,12.5557131280389"
                    Point3="-232.333333333333,16.5557131280389" />
                  <mssgle:LineSegment
                    End="-232.333333333333,17.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Hannover Data Flow.Paths[Multicast Output 3]"
          TopLeft="223,627">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="57,0"
              Start="0,0"
              End="49.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="49.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Hannover Data Flow.Paths[Multicast Output 11]"
          TopLeft="163,647">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="174.833333333333,189.5"
              Start="0,0"
              End="174.833333333333,182">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,108.698237885463" />
                  <mssgle:CubicBezierSegment
                    Point1="0,108.698237885463"
                    Point2="0,112.698237885463"
                    Point3="4,112.698237885463" />
                  <mssgle:LineSegment
                    End="170.833333333333,112.698237885463" />
                  <mssgle:CubicBezierSegment
                    Point1="170.833333333333,112.698237885463"
                    Point2="174.833333333333,112.698237885463"
                    Point3="174.833333333333,116.698237885463" />
                  <mssgle:LineSegment
                    End="174.833333333333,182" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Hannover Data Flow.Paths[Multicast Output 1]"
          TopLeft="648,667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-252.833333333333,169.5"
              Start="0,0"
              End="-252.833333333333,162">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,96.803964757709" />
                  <mssgle:CubicBezierSegment
                    Point1="0,96.803964757709"
                    Point2="0,100.803964757709"
                    Point3="-4,100.803964757709" />
                  <mssgle:LineSegment
                    End="-248.833333333333,100.803964757709" />
                  <mssgle:CubicBezierSegment
                    Point1="-248.833333333333,100.803964757709"
                    Point2="-252.833333333333,100.803964757709"
                    Point3="-252.833333333333,104.803964757709" />
                  <mssgle:LineSegment
                    End="-252.833333333333,162" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Hannover Data Flow.Paths[Flat File Source Output]"
          TopLeft="534.5,74">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="11,37"
              Start="0,0"
              End="11,29.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.5"
                    Point2="0,18.5"
                    Point3="4,18.5" />
                  <mssgle:LineSegment
                    End="7,18.5" />
                  <mssgle:CubicBezierSegment
                    Point1="7,18.5"
                    Point2="11,18.5"
                    Point3="11,22.5" />
                  <mssgle:LineSegment
                    End="11,29.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Hannover Data Flow.Paths[Derived Column Output1]"
          TopLeft="155.75,179">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43.5"
              Start="0,0"
              End="0,36">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>